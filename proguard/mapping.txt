com.egoclean.android.widget.flinger.MotionEventUtils -> com.egoclean.android.widget.flinger.a:
    boolean sMultiTouchApiAvailable -> a
    float getX(android.view.MotionEvent,int) -> a
    float getY(android.view.MotionEvent,int) -> b
    int getPointerId(android.view.MotionEvent,int) -> c
    int findPointerIndex(android.view.MotionEvent,int) -> d
com.egoclean.android.widget.flinger.ReflectionUtils -> com.egoclean.android.widget.flinger.b:
    java.lang.Object tryInvoke(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    java.lang.Object callWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> a
com.egoclean.android.widget.flinger.ViewFlinger -> com.egoclean.android.widget.flinger.ViewFlinger:
    int mDefaultScreen -> a
    boolean mFirstLayout -> b
    boolean mHasLaidOut -> c
    int mCurrentScreen -> d
    int mNextScreen -> e
    android.widget.Scroller mScroller -> f
    android.view.VelocityTracker mVelocityTracker -> g
    float mDownMotionX -> h
    float mDownMotionY -> i
    int mDownScrollX -> j
    int mTouchState -> k
    boolean mAllowLongPress -> l
    int mTouchSlop -> m
    int mPagingTouchSlop -> n
    int mMaximumVelocity -> o
    int mActivePointerId -> p
    android.graphics.drawable.Drawable mSeparatorDrawable -> q
    com.egoclean.android.widget.flinger.ViewFlinger$OnScreenChangeListener mOnScreenChangeListener -> r
    com.egoclean.android.widget.flinger.ViewFlinger$OnScrollListener mOnScrollListener -> s
    boolean mLocked -> t
    int mDeferredScreenChange -> u
    boolean mDeferredScreenChangeFast -> v
    boolean mDeferredNotify -> w
    boolean mIgnoreChildFocusRequests -> x
    boolean mIsVerbose -> y
    int getCurrentScreen() -> a
    int getScreenCount() -> d
    android.view.View getScreenAt(int) -> b
    int getScrollWidth() -> e
    void notifyScreenChangeListener(int,boolean) -> a
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void computeScroll() -> computeScroll
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void focusableViewAvailable(android.view.View) -> focusableViewAvailable
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float getCurrentScreenFraction() -> f
    void snapToScreen$2563266(int) -> a
    void snapToScreen(int,boolean,boolean) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setOnScreenChangeListener(com.egoclean.android.widget.flinger.ViewFlinger$OnScreenChangeListener) -> a
    void lockCurrentScreen() -> b
    void unlockCurrentScreen() -> c
com.egoclean.android.widget.flinger.ViewFlinger$OnScreenChangeListener -> com.egoclean.android.widget.flinger.c:
    void onScreenChanging$5359dc9a(int) -> a
com.egoclean.android.widget.flinger.ViewFlinger$OnScrollListener -> com.egoclean.android.widget.flinger.d:
com.egoclean.android.widget.flinger.ViewFlinger$SavedState -> com.egoclean.android.widget.flinger.ViewFlinger$SavedState:
    int currentScreen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.egoclean.android.widget.flinger.ViewFlinger$SavedState$1 -> com.egoclean.android.widget.flinger.e:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.google.gson.AnonymousAndLocalClassExclusionStrategy -> com.a.a.a:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> b
com.google.gson.BaseMapTypeAdapter -> com.a.a.b:
com.google.gson.Cache -> com.a.a.c:
    void addElement(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getElement(java.lang.Object) -> a
com.google.gson.CircularReferenceException -> com.a.a.d:
    java.lang.Object offendingNode -> a
    java.lang.IllegalStateException createDetailedException(com.google.gson.FieldAttributes) -> a
com.google.gson.DefaultConstructorAllocator -> com.a.a.e:
    java.lang.reflect.Constructor NULL_CONSTRUCTOR -> a
    com.google.gson.Cache constructorCache -> b
    java.lang.reflect.Constructor createNullConstructor() -> a
    java.lang.Object newInstance(java.lang.Class) -> a
    java.lang.reflect.Constructor getNoArgsConstructor(java.lang.Class) -> b
com.google.gson.DefaultConstructorAllocator$Null -> com.a.a.f:
com.google.gson.DefaultTypeAdapters -> com.a.a.g:
    com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter DATE_TYPE_ADAPTER -> c
    com.google.gson.DefaultTypeAdapters$DefaultJavaSqlDateTypeAdapter JAVA_SQL_DATE_TYPE_ADAPTER -> d
    com.google.gson.DefaultTypeAdapters$DefaultTimeTypeAdapter TIME_TYPE_ADAPTER -> e
    com.google.gson.DefaultTypeAdapters$DefaultTimestampDeserializer TIMESTAMP_DESERIALIZER -> f
    com.google.gson.DefaultTypeAdapters$EnumTypeAdapter ENUM_TYPE_ADAPTER -> g
    com.google.gson.DefaultTypeAdapters$UrlTypeAdapter URL_TYPE_ADAPTER -> h
    com.google.gson.DefaultTypeAdapters$UriTypeAdapter URI_TYPE_ADAPTER -> i
    com.google.gson.DefaultTypeAdapters$UuidTypeAdapter UUUID_TYPE_ADAPTER -> j
    com.google.gson.DefaultTypeAdapters$LocaleTypeAdapter LOCALE_TYPE_ADAPTER -> k
    com.google.gson.DefaultTypeAdapters$DefaultInetAddressAdapter INET_ADDRESS_ADAPTER -> l
    com.google.gson.DefaultTypeAdapters$CollectionTypeAdapter COLLECTION_TYPE_ADAPTER -> m
    com.google.gson.MapTypeAdapter MAP_TYPE_ADAPTER -> n
    com.google.gson.DefaultTypeAdapters$BigDecimalTypeAdapter BIG_DECIMAL_TYPE_ADAPTER -> o
    com.google.gson.DefaultTypeAdapters$BigIntegerTypeAdapter BIG_INTEGER_TYPE_ADAPTER -> p
    com.google.gson.DefaultTypeAdapters$BooleanTypeAdapter BOOLEAN_TYPE_ADAPTER -> q
    com.google.gson.DefaultTypeAdapters$ByteTypeAdapter BYTE_TYPE_ADAPTER -> r
    com.google.gson.DefaultTypeAdapters$CharacterTypeAdapter CHARACTER_TYPE_ADAPTER -> s
    com.google.gson.DefaultTypeAdapters$DoubleDeserializer DOUBLE_TYPE_ADAPTER -> t
    com.google.gson.DefaultTypeAdapters$FloatDeserializer FLOAT_TYPE_ADAPTER -> u
    com.google.gson.DefaultTypeAdapters$IntegerTypeAdapter INTEGER_TYPE_ADAPTER -> v
    com.google.gson.DefaultTypeAdapters$LongDeserializer LONG_DESERIALIZER -> w
    com.google.gson.DefaultTypeAdapters$NumberTypeAdapter NUMBER_TYPE_ADAPTER -> x
    com.google.gson.DefaultTypeAdapters$ShortTypeAdapter SHORT_TYPE_ADAPTER -> y
    com.google.gson.DefaultTypeAdapters$StringTypeAdapter STRING_TYPE_ADAPTER -> z
    com.google.gson.DefaultTypeAdapters$StringBuilderTypeAdapter STRING_BUILDER_TYPE_ADAPTER -> A
    com.google.gson.DefaultTypeAdapters$StringBufferTypeAdapter STRING_BUFFER_TYPE_ADAPTER -> B
    com.google.gson.DefaultTypeAdapters$GregorianCalendarTypeAdapter GREGORIAN_CALENDAR_TYPE_ADAPTER -> C
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_SERIALIZERS -> D
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_HIERARCHY_SERIALIZERS -> a
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_DESERIALIZERS -> E
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_HIERARCHY_DESERIALIZERS -> b
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_INSTANCE_CREATORS -> F
    com.google.gson.JsonDeserializer wrapDeserializer(com.google.gson.JsonDeserializer) -> a
    com.google.gson.ParameterizedTypeHandlerMap getAllDefaultSerializers() -> a
    com.google.gson.ParameterizedTypeHandlerMap getAllDefaultDeserializers() -> b
    com.google.gson.ParameterizedTypeHandlerMap getDefaultInstanceCreators() -> c
com.google.gson.DefaultTypeAdapters$BigDecimalTypeAdapter -> com.a.a.h:
    java.math.BigDecimal deserialize$33f8e5ec(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$BigIntegerTypeAdapter -> com.a.a.i:
    java.math.BigInteger deserialize$343e359f(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$BooleanTypeAdapter -> com.a.a.j:
    java.lang.Boolean deserialize$20809595(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$ByteTypeAdapter -> com.a.a.k:
    java.lang.Byte deserialize$1bd9addb(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$CharacterTypeAdapter -> com.a.a.l:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$CollectionTypeAdapter -> com.a.a.m:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$DefaultConstructorCreator -> com.a.a.n:
    java.lang.Class defaultInstance -> a
    com.google.gson.DefaultConstructorAllocator allocator -> b
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter -> com.a.a.o:
    java.text.DateFormat enUsFormat -> a
    java.text.DateFormat localFormat -> b
    java.text.DateFormat iso8601Format -> c
    com.google.gson.JsonElement serialize$107ba52a(java.util.Date) -> a
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$DefaultInetAddressAdapter -> com.a.a.p:
    java.net.InetAddress deserialize$d1fe936(com.google.gson.JsonElement) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.DefaultTypeAdapters$DefaultJavaSqlDateTypeAdapter -> com.a.a.q:
    java.text.DateFormat format -> a
    com.google.gson.JsonElement serialize$538457fc(java.sql.Date) -> a
    java.sql.Date deserialize$2ac9f39d(com.google.gson.JsonElement) -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$DefaultTimeTypeAdapter -> com.a.a.r:
    java.text.DateFormat format -> a
    com.google.gson.JsonElement serialize$2a7edcc5(java.sql.Time) -> a
    java.sql.Time deserialize$29e4f2dc(com.google.gson.JsonElement) -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$DefaultTimestampDeserializer -> com.a.a.s:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$DoubleDeserializer -> com.a.a.t:
    java.lang.Double deserialize$1b10ddce(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$DoubleSerializer -> com.a.a.u:
    boolean serializeSpecialFloatingPointValues -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.DefaultTypeAdapters$EnumTypeAdapter -> com.a.a.v:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$FloatDeserializer -> com.a.a.w:
    java.lang.Float deserialize$6575f0b7(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$FloatSerializer -> com.a.a.x:
    boolean serializeSpecialFloatingPointValues -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.DefaultTypeAdapters$GregorianCalendarTypeAdapter -> com.a.a.y:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$IntegerTypeAdapter -> com.a.a.z:
    java.lang.Integer deserialize$761807eb(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$LocaleTypeAdapter -> com.a.a.aa:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$LongDeserializer -> com.a.a.ab:
    java.lang.Long deserialize$1c61f6e7(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$LongSerializer -> com.a.a.ac:
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.DefaultTypeAdapters$NumberTypeAdapter -> com.a.a.ad:
    java.lang.Number deserialize$464e46(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$ShortTypeAdapter -> com.a.a.ae:
    java.lang.Short deserialize$7b6cd297(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$StringBufferTypeAdapter -> com.a.a.af:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$StringBuilderTypeAdapter -> com.a.a.ag:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$StringTypeAdapter -> com.a.a.ah:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$UriTypeAdapter -> com.a.a.ai:
    java.net.URI deserialize$1ec1690a(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$UrlTypeAdapter -> com.a.a.aj:
    java.net.URL deserialize$1ec16967(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DefaultTypeAdapters$UuidTypeAdapter -> com.a.a.ak:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.DisjunctionExclusionStrategy -> com.a.a.al:
    java.util.Collection strategies -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.Escaper -> com.a.a.am:
    char[] HEX_CHARS -> a
    java.util.Set JS_ESCAPE_CHARS -> b
    java.util.Set HTML_ESCAPE_CHARS -> c
    boolean escapeHtmlCharacters -> d
    java.lang.String escapeJsonString(java.lang.CharSequence) -> a
    void escapeJsonString(java.lang.CharSequence,java.lang.StringBuilder) -> a
    void appendHexJavaScriptRepresentation(int,java.lang.Appendable) -> a
com.google.gson.ExclusionStrategy -> com.a.a.an:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.a.a.ao:
    com.google.gson.Cache ANNOTATION_CACHE -> a
    java.lang.Class declaringClazz -> b
    java.lang.reflect.Field field -> c
    java.lang.Class declaredType -> d
    boolean isSynthetic -> e
    int modifiers -> f
    java.lang.String name -> g
    java.lang.reflect.Type resolvedType -> h
    java.lang.reflect.Type genericType -> i
    java.util.Collection annotations -> j
    int getMaxCacheSize() -> g
    java.lang.String getName() -> a
    java.lang.reflect.Type getDeclaredType() -> b
    java.lang.Class getDeclaredClass() -> c
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> a
    java.util.Collection getAnnotations() -> d
    boolean hasModifier(int) -> a
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    boolean isSynthetic() -> e
    java.lang.reflect.Type getResolvedType() -> f
com.google.gson.FieldNamingStrategy2 -> com.a.a.ap:
    java.lang.String translateName(com.google.gson.FieldAttributes) -> a
com.google.gson.Gson -> com.a.a.aq:
    com.google.gson.AnonymousAndLocalClassExclusionStrategy DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY -> a
    com.google.gson.SyntheticFieldExclusionStrategy DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY -> b
    com.google.gson.ModifierBasedExclusionStrategy DEFAULT_MODIFIER_BASED_EXCLUSION_STRATEGY -> c
    com.google.gson.FieldNamingStrategy2 DEFAULT_NAMING_POLICY -> d
    com.google.gson.ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY -> e
    com.google.gson.ExclusionStrategy deserializationExclusionStrategy -> f
    com.google.gson.ExclusionStrategy serializationExclusionStrategy -> g
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> h
    com.google.gson.MappedObjectConstructor objectConstructor -> i
    com.google.gson.ParameterizedTypeHandlerMap serializers -> j
    com.google.gson.ParameterizedTypeHandlerMap deserializers -> k
    boolean serializeNulls -> l
    boolean htmlSafe -> m
    boolean generateNonExecutableJson -> n
    boolean prettyPrinting -> o
    java.lang.String toJson(java.lang.Object) -> a
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
com.google.gson.InstanceCreator -> com.a.a.ar:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JavaFieldNamingPolicy -> com.a.a.as:
    java.lang.String translateName$252cc7e1(java.lang.String) -> a
com.google.gson.JsonArray -> com.a.a.at:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    int size() -> a
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> a
    java.lang.Number getAsNumber() -> b
    java.lang.String getAsString() -> c
    double getAsDouble() -> d
    java.math.BigDecimal getAsBigDecimal() -> e
    java.math.BigInteger getAsBigInteger() -> f
    float getAsFloat() -> g
    long getAsLong() -> h
    int getAsInt() -> i
    byte getAsByte() -> j
    char getAsCharacter() -> k
    short getAsShort() -> l
    boolean getAsBoolean() -> m
    java.lang.Object getAsObject() -> n
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> a
com.google.gson.JsonArrayDeserializationVisitor -> com.a.a.au:
    java.lang.Object constructTarget() -> a
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> a
    void startVisitingObject(java.lang.Object) -> a
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> a
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> b
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> c
    void visitPrimitive(java.lang.Object) -> b
com.google.gson.JsonDeserializationContext -> com.a.a.av:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> a
com.google.gson.JsonDeserializationContextDefault -> com.a.a.aw:
    com.google.gson.ObjectNavigator objectNavigator -> a
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> b
    com.google.gson.ParameterizedTypeHandlerMap deserializers -> c
    com.google.gson.MappedObjectConstructor objectConstructor -> d
    com.google.gson.ObjectConstructor getObjectConstructor() -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> a
com.google.gson.JsonDeserializationVisitor -> com.a.a.ax:
    com.google.gson.ObjectNavigator objectNavigator -> a
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> b
    com.google.gson.ObjectConstructor objectConstructor -> c
    com.google.gson.ParameterizedTypeHandlerMap deserializers -> d
    java.lang.Object target -> e
    com.google.gson.JsonElement json -> f
    java.lang.reflect.Type targetType -> g
    com.google.gson.JsonDeserializationContext context -> h
    boolean constructed -> i
    java.lang.Object getTarget() -> b
    java.lang.Object constructTarget() -> a
    void start(com.google.gson.ObjectTypePair) -> a
    void end(com.google.gson.ObjectTypePair) -> b
    boolean visitUsingCustomHandler(com.google.gson.ObjectTypePair) -> c
    java.lang.Object invokeCustomDeserializer(com.google.gson.JsonElement,com.google.gson.Pair) -> a
    java.lang.Object visitChildAsObject(java.lang.reflect.Type,com.google.gson.JsonElement) -> a
    java.lang.Object visitChildAsArray(java.lang.reflect.Type,com.google.gson.JsonArray) -> a
    java.lang.Object visitChild(java.lang.reflect.Type,com.google.gson.JsonDeserializationVisitor) -> a
com.google.gson.JsonDeserializer -> com.a.a.ay:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.JsonDeserializerExceptionWrapper -> com.a.a.az:
    com.google.gson.JsonDeserializer delegate -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
    java.lang.String toString() -> toString
com.google.gson.JsonElement -> com.a.a.ba:
    com.google.gson.Escaper BASIC_ESCAPER -> a
    boolean isJsonArray() -> o
    boolean isJsonObject() -> p
    boolean isJsonPrimitive() -> q
    boolean isJsonNull() -> r
    com.google.gson.JsonObject getAsJsonObject() -> s
    com.google.gson.JsonArray getAsJsonArray() -> t
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> u
    boolean getAsBoolean() -> m
    java.lang.Number getAsNumber() -> b
    java.lang.String getAsString() -> c
    double getAsDouble() -> d
    float getAsFloat() -> g
    long getAsLong() -> h
    int getAsInt() -> i
    byte getAsByte() -> j
    char getAsCharacter() -> k
    java.math.BigDecimal getAsBigDecimal() -> e
    java.math.BigInteger getAsBigInteger() -> f
    short getAsShort() -> l
    java.lang.Object getAsObject() -> n
    java.lang.String toString() -> toString
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> a
com.google.gson.JsonIOException -> com.a.a.bb:
com.google.gson.JsonNull -> com.a.a.bc:
    com.google.gson.JsonNull INSTANCE -> a
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonNull createJsonNull() -> a
com.google.gson.JsonObject -> com.a.a.bd:
    java.util.Map members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    void addProperty(java.lang.String,java.lang.Number) -> a
    java.util.Set entrySet() -> a
    com.google.gson.JsonElement get(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> a
com.google.gson.JsonObjectDeserializationVisitor -> com.a.a.be:
    java.lang.Object constructTarget() -> a
    void startVisitingObject(java.lang.Object) -> a
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> a
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> b
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> a
    java.lang.String getFieldName(com.google.gson.FieldAttributes) -> a
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> c
    void visitPrimitive(java.lang.Object) -> b
com.google.gson.JsonParseException -> com.a.a.bf:
com.google.gson.JsonPrimitive -> com.a.a.bg:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.math.BigInteger INTEGER_MAX -> b
    java.math.BigInteger LONG_MAX -> c
    java.lang.Object value -> d
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> a
    boolean getAsBoolean() -> m
    boolean isNumber() -> v
    java.lang.Number getAsNumber() -> b
    java.lang.Number stringToNumber(java.lang.String) -> a
    java.lang.String getAsString() -> c
    double getAsDouble() -> d
    java.math.BigDecimal getAsBigDecimal() -> e
    java.math.BigInteger getAsBigInteger() -> f
    float getAsFloat() -> g
    long getAsLong() -> h
    short getAsShort() -> l
    int getAsInt() -> i
    byte getAsByte() -> j
    char getAsCharacter() -> k
    java.lang.Object getAsObject() -> n
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
    boolean isFloatingPoint(com.google.gson.JsonPrimitive) -> b
com.google.gson.JsonSerializationContext -> com.a.a.bh:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> a
com.google.gson.JsonSerializationContextDefault -> com.a.a.bi:
    com.google.gson.ObjectNavigator objectNavigator -> a
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> b
    com.google.gson.ParameterizedTypeHandlerMap serializers -> c
    boolean serializeNulls -> d
    com.google.gson.MemoryRefStack ancestors -> e
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,boolean) -> a
com.google.gson.JsonSerializationVisitor -> com.a.a.bj:
    com.google.gson.ObjectNavigator objectNavigator -> a
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> b
    com.google.gson.ParameterizedTypeHandlerMap serializers -> c
    boolean serializeNulls -> d
    com.google.gson.JsonSerializationContext context -> e
    com.google.gson.MemoryRefStack ancestors -> f
    com.google.gson.JsonElement root -> g
    java.lang.Object getTarget() -> b
    void start(com.google.gson.ObjectTypePair) -> a
    void end(com.google.gson.ObjectTypePair) -> b
    void startVisitingObject(java.lang.Object) -> a
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> a
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> a
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> b
    void visitPrimitive(java.lang.Object) -> b
    void addAsChildOfObject(com.google.gson.FieldAttributes,com.google.gson.ObjectTypePair) -> a
    void addChildAsElement(com.google.gson.FieldAttributes,com.google.gson.JsonElement) -> a
    com.google.gson.JsonElement getJsonElementForChild(com.google.gson.ObjectTypePair) -> d
    boolean visitUsingCustomHandler(com.google.gson.ObjectTypePair) -> c
    com.google.gson.JsonElement findAndInvokeCustomSerializer(com.google.gson.ObjectTypePair) -> e
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> c
    void assignToRoot(com.google.gson.JsonElement) -> a
    boolean isFieldNull(com.google.gson.FieldAttributes,java.lang.Object) -> a
    java.lang.Object getFieldValue(com.google.gson.FieldAttributes,java.lang.Object) -> b
    com.google.gson.JsonElement getJsonElement() -> a
com.google.gson.JsonSerializer -> com.a.a.bk:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.JsonSyntaxException -> com.a.a.bl:
com.google.gson.LongSerializationPolicy -> com.a.a.bm:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy$Strategy strategy -> c
    com.google.gson.LongSerializationPolicy[] $VALUES -> d
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> a
com.google.gson.LongSerializationPolicy$DefaultStrategy -> com.a.a.bn:
    com.google.gson.JsonElement serialize(java.lang.Long) -> a
com.google.gson.LongSerializationPolicy$Strategy -> com.a.a.bo:
    com.google.gson.JsonElement serialize(java.lang.Long) -> a
com.google.gson.LongSerializationPolicy$StringStrategy -> com.a.a.bp:
    com.google.gson.JsonElement serialize(java.lang.Long) -> a
com.google.gson.LruCache -> com.a.a.bq:
    int maxCapacity -> a
    void addElement(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getElement(java.lang.Object) -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.google.gson.MapTypeAdapter -> com.a.a.br:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
com.google.gson.MappedObjectConstructor -> com.a.a.bs:
    com.google.gson.UnsafeAllocator unsafeAllocator -> a
    com.google.gson.DefaultConstructorAllocator defaultConstructorAllocator -> b
    com.google.gson.ParameterizedTypeHandlerMap instanceCreatorMap -> c
    java.lang.Object construct(java.lang.reflect.Type) -> a
    java.lang.Object constructArray(java.lang.reflect.Type,int) -> a
    java.lang.Object constructWithAllocators(java.lang.reflect.Type) -> b
    java.lang.String toString() -> toString
com.google.gson.MemoryRefStack -> com.a.a.bt:
    java.util.Stack stack -> a
    com.google.gson.ObjectTypePair push(com.google.gson.ObjectTypePair) -> a
    com.google.gson.ObjectTypePair pop() -> a
    boolean contains(com.google.gson.ObjectTypePair) -> b
com.google.gson.ModifierBasedExclusionStrategy -> com.a.a.bu:
    java.util.Collection modifiers -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.NullExclusionStrategy -> com.a.a.bv:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.ObjectConstructor -> com.a.a.bw:
    java.lang.Object construct(java.lang.reflect.Type) -> a
    java.lang.Object constructArray(java.lang.reflect.Type,int) -> a
com.google.gson.ObjectNavigator -> com.a.a.bx:
    com.google.gson.ExclusionStrategy exclusionStrategy -> a
    com.google.gson.ReflectingFieldNavigator reflectingFieldNavigator -> b
    void accept(com.google.gson.ObjectTypePair,com.google.gson.ObjectNavigator$Visitor) -> a
com.google.gson.ObjectNavigator$Visitor -> com.a.a.by:
    void start(com.google.gson.ObjectTypePair) -> a
    void end(com.google.gson.ObjectTypePair) -> b
    void startVisitingObject(java.lang.Object) -> a
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> a
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> b
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> a
    boolean visitUsingCustomHandler(com.google.gson.ObjectTypePair) -> c
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> c
    void visitPrimitive(java.lang.Object) -> b
    java.lang.Object getTarget() -> b
com.google.gson.ObjectTypePair -> com.a.a.bz:
    java.lang.Object obj -> b
    java.lang.reflect.Type type -> a
    boolean preserveType -> c
    java.lang.Object getObject() -> a
    void setObject(java.lang.Object) -> a
    java.lang.String toString() -> toString
    com.google.gson.Pair getMatchingHandler(com.google.gson.ParameterizedTypeHandlerMap) -> a
    java.lang.reflect.Type getMoreSpecificType() -> b
    java.lang.reflect.Type getActualTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Class) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.Pair -> com.a.a.ca:
    java.lang.Object first -> a
    java.lang.Object second -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean equal(java.lang.Object,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.gson.ParameterizedTypeHandlerMap -> com.a.a.cb:
    java.util.logging.Logger logger -> a
    java.util.Map map -> b
    java.util.List typeHierarchyList -> c
    boolean modifiable -> d
    void registerForTypeHierarchy(java.lang.Class,java.lang.Object) -> a
    void registerForTypeHierarchy(com.google.gson.Pair) -> a
    int getIndexOfAnOverriddenHandler(java.lang.Class) -> a
    void register(java.lang.reflect.Type,java.lang.Object) -> a
    void registerIfAbsent(com.google.gson.ParameterizedTypeHandlerMap) -> a
    void register(com.google.gson.ParameterizedTypeHandlerMap) -> b
    void registerIfAbsent(java.lang.reflect.Type,java.lang.Object) -> b
    void makeUnmodifiable() -> a
    java.lang.Object getHandlerFor(java.lang.reflect.Type) -> a
    boolean hasSpecificHandlerFor(java.lang.reflect.Type) -> b
    int getIndexOfSpecificHandlerForTypeHierarchy(java.lang.Class) -> b
    com.google.gson.ParameterizedTypeHandlerMap copyOf() -> b
    java.lang.String toString() -> toString
com.google.gson.Primitives -> com.a.a.cc:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
    java.lang.Class unwrap(java.lang.Class) -> b
com.google.gson.RecursiveFieldNamingPolicy -> com.a.a.cd:
    java.lang.String translateName(com.google.gson.FieldAttributes) -> a
    java.lang.String translateName$252cc7e1(java.lang.String) -> a
com.google.gson.ReflectingFieldNavigator -> com.a.a.ce:
    com.google.gson.Cache fieldsCache -> a
    com.google.gson.ExclusionStrategy exclusionStrategy -> b
    void visitFieldsReflectively(com.google.gson.ObjectTypePair,com.google.gson.ObjectNavigator$Visitor) -> a
    java.util.List getInheritanceHierarchy(java.lang.reflect.Type) -> a
com.google.gson.SerializedNameAnnotationInterceptingNamingPolicy -> com.a.a.cf:
    com.google.gson.FieldNamingStrategy2 delegate -> a
    java.lang.String translateName(com.google.gson.FieldAttributes) -> a
com.google.gson.Streams -> com.a.a.cg:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> a
    com.google.gson.JsonElement parseRecursive(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.JsonElement,boolean,com.google.gson.stream.JsonWriter) -> a
com.google.gson.Streams$1 -> com.a.a.ch:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.Streams$AppendableWriter -> com.a.a.ci:
    java.lang.Appendable appendable -> a
    com.google.gson.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.Streams$AppendableWriter$CurrentWrite -> com.a.a.cj:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.SyntheticFieldExclusionStrategy -> com.a.a.ck:
    boolean skipSyntheticFields -> a
    boolean shouldSkipClass(java.lang.Class) -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
com.google.gson.UnsafeAllocator -> com.a.a.cl:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.UnsafeAllocator create() -> a
com.google.gson.UnsafeAllocator$1 -> com.a.a.cm:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.UnsafeAllocator$2 -> com.a.a.cn:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.UnsafeAllocator$3 -> com.a.a.co:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.UnsafeAllocator$4 -> com.a.a.cp:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.annotations.SerializedName -> com.a.a.a.a:
    java.lang.String value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.a.a.b.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.a.a.b.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> g
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> a
    java.lang.Class getRawType(java.lang.reflect.Type) -> b
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    java.lang.String typeToString(java.lang.reflect.Type) -> c
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    boolean isArray(java.lang.reflect.Type) -> d
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> e
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    void access$000(java.lang.reflect.Type) -> f
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.a.a.b.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.a.a.b.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.a.a.b.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.stream.JsonReader -> com.a.a.c.a:
    char[] NON_EXECUTE_PREFIX -> a
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    java.util.List stack -> g
    boolean hasToken -> h
    com.google.gson.stream.JsonToken token -> i
    java.lang.String name -> j
    java.lang.String value -> k
    boolean skipping -> l
    void setLenient(boolean) -> a
    boolean isLenient() -> a
    void beginArray() -> b
    void endArray() -> c
    void beginObject() -> d
    void endObject() -> e
    void expect(com.google.gson.stream.JsonToken) -> a
    boolean hasNext() -> f
    com.google.gson.stream.JsonToken peek() -> g
    com.google.gson.stream.JsonToken quickPeek() -> l
    com.google.gson.stream.JsonToken advance() -> m
    java.lang.String nextName() -> h
    java.lang.String nextString() -> i
    boolean nextBoolean() -> j
    void nextNull() -> k
    void close() -> close
    com.google.gson.stream.JsonScope pop() -> n
    void push(com.google.gson.stream.JsonScope) -> a
    void replaceTop(com.google.gson.stream.JsonScope) -> b
    com.google.gson.stream.JsonToken nextInArray(boolean) -> b
    com.google.gson.stream.JsonToken nextInObject(boolean) -> c
    com.google.gson.stream.JsonToken nextValue() -> o
    boolean fillBuffer(int) -> a
    int nextNonWhitespace() -> p
    void checkLenient() -> q
    void skipToEndOfLine() -> r
    java.lang.String nextString(char) -> a
    java.lang.String nextLiteral() -> s
    java.lang.String toString() -> toString
    java.io.IOException syntaxError(java.lang.String) -> a
    java.lang.CharSequence getSnippet() -> t
com.google.gson.stream.JsonReader$1 -> com.a.a.c.b:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.JsonScope -> com.a.a.c.c:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> a
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> b
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> c
    com.google.gson.stream.JsonScope DANGLING_NAME -> d
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> e
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> f
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> g
    com.google.gson.stream.JsonScope CLOSED -> h
    com.google.gson.stream.JsonScope[] $VALUES -> i
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.a.a.c.d:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.a.a.c.e:
    java.io.Writer out -> a
    java.util.List stack -> b
    java.lang.String indent -> c
    java.lang.String separator -> d
    boolean lenient -> e
    boolean htmlSafe -> f
    void setIndent(java.lang.String) -> a
    void setLenient(boolean) -> a
    boolean isLenient() -> a
    void setHtmlSafe(boolean) -> b
    boolean isHtmlSafe() -> b
    com.google.gson.stream.JsonWriter beginArray() -> c
    com.google.gson.stream.JsonWriter endArray() -> d
    com.google.gson.stream.JsonWriter beginObject() -> e
    com.google.gson.stream.JsonWriter endObject() -> f
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonScope peek() -> h
    void replaceTop(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonWriter name(java.lang.String) -> b
    com.google.gson.stream.JsonWriter value(java.lang.String) -> c
    com.google.gson.stream.JsonWriter nullValue() -> g
    com.google.gson.stream.JsonWriter value(boolean) -> c
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void close() -> close
    void string(java.lang.String) -> d
    void newline() -> i
    void beforeValue(boolean) -> d
com.google.gson.stream.JsonWriter$1 -> com.a.a.c.f:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.MalformedJsonException -> com.a.a.c.g:
com.test.AdvertiserTestActivity -> com.test.AdvertiserTestActivity:
    com.w3i.advertiser.W3iConnect advertiser -> a
    android.widget.Button appWasRun -> b
    android.widget.Button actionTaken -> c
    android.widget.Button showDialog -> d
    int appId -> e
    int actionId -> f
    com.w3i.offerwall.dialogs.custom.CTADialog dialog -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.test.AdvertiserTestActivity$1 -> com.test.a:
    com.test.AdvertiserTestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.AdvertiserTestActivity$2 -> com.test.b:
    com.test.AdvertiserTestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.AdvertiserTestActivity$3 -> com.test.c:
    com.test.AdvertiserTestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.HistoryTableActivity -> com.test.HistoryTableActivity:
    com.w3i.offerwall.ui.HistoryTable table -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.test.LinearProgressBarActivity -> com.test.LinearProgressBarActivity:
    com.w3i.offerwall.custom.views.LinearProgressBar progress -> a
    void onCreate(android.os.Bundle) -> onCreate
com.test.TestActivity -> com.test.TestActivity:
    com.w3i.offerwall.dialogs.custom.CTADialog dialog -> a
    com.w3i.offerwall.W3iPublisher w3iInstance -> b
    com.w3i.advertiser.W3iConnect advertiser -> c
    com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog featuredDialog -> d
    int TEST_ACTION -> e
    int TEST_APPID -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void createW3iInstance() -> a
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    com.w3i.advertiser.W3iConnect access$0(com.test.TestActivity) -> a
    int access$1(com.test.TestActivity) -> b
    void access$2(com.test.TestActivity,com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog) -> a
    com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog access$3(com.test.TestActivity) -> c
    void access$4(com.test.TestActivity) -> d
    com.w3i.offerwall.W3iPublisher access$5(com.test.TestActivity) -> e
    int access$6(com.test.TestActivity) -> f
com.test.TestActivity$1 -> com.test.d:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$10 -> com.test.e:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$2 -> com.test.f:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$3 -> com.test.g:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$4 -> com.test.h:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$5 -> com.test.i:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$5$1 -> com.test.j:
    com.test.TestActivity$5 this$1 -> a
    void onRedeem(java.lang.String,java.util.List) -> a
com.test.TestActivity$6 -> com.test.k:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$6$1 -> com.test.l:
    com.test.TestActivity$6 this$1 -> a
    void onClick(boolean) -> a
com.test.TestActivity$7 -> com.test.m:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$7$1 -> com.test.n:
    com.test.TestActivity$7 this$1 -> a
    void onClick(boolean) -> a
com.test.TestActivity$8 -> com.test.o:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestActivity$9 -> com.test.p:
    com.test.TestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.test.TestRewardsTextViews -> com.test.TestRewardsTextViews:
    com.test.TestRewardsTextViews$RewardsLayout mainLayout -> a
    void onCreate(android.os.Bundle) -> onCreate
com.test.TestRewardsTextViews$RewardsLayout -> com.test.q:
    android.widget.TextView reward -> b
    android.widget.TextView freePaid -> c
    com.test.TestRewardsTextViews this$0 -> a
com.test.VideoURLsTest -> com.test.VideoURLsTest:
    com.test.VideoURLsTest$CustomArrayAdapter adapter -> a
    void onCreate(android.os.Bundle) -> onCreate
com.test.VideoURLsTest$1 -> com.test.r:
    com.test.VideoURLsTest this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.test.VideoURLsTest$CustomArrayAdapter -> com.test.s:
    java.util.ArrayList items -> b
    com.test.VideoURLsTest this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.test.VideoURLsTest$URLNamePair -> com.test.t:
    java.lang.String url -> b
    java.lang.String name -> c
    com.test.VideoURLsTest this$0 -> a
    java.lang.String access$0(com.test.VideoURLsTest$URLNamePair) -> a
    java.lang.String access$1(com.test.VideoURLsTest$URLNamePair) -> b
com.test.VideoViewActivity -> com.test.VideoViewActivity:
    com.w3i.offerwall.custom.views.CustomVideoViewLayout videoView -> a
    void onCreate(android.os.Bundle) -> onCreate
com.test.WebViewActivity -> com.test.WebViewActivity:
    android.webkit.WebView webView -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.test.WebViewActivity$1 -> com.test.u:
    com.test.WebViewActivity this$0 -> a
    void onTaskCompleted(java.lang.String) -> a
com.w3i.advertiser.ActionTakenRequestData -> com.w3i.advertiser.a:
    com.w3i.common.UDIDs udids -> a
    java.lang.Integer actionId -> b
    java.lang.String isHacked -> c
    void setUdids(com.w3i.common.UDIDs) -> a
    void setActionId(int) -> a
    void setIsHacked(java.lang.String) -> a
com.w3i.advertiser.AdvertiserBaseAsyncTask -> com.w3i.advertiser.b:
    java.lang.String mUrl -> a
    java.lang.String mBody -> b
    com.w3i.advertiser.W3iAdvertiser mAdvListener -> c
    android.content.SharedPreferences sharedPreferences -> d
    java.lang.String doInBackground$4af589aa() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.w3i.advertiser.AdvertiserJsonRequestManager -> com.w3i.advertiser.c:
    java.lang.String getAppWasRunRequestBody(int) -> a
    java.lang.String getAppWasRunV2RequestBody(int) -> b
    java.lang.String getActionTakenRequestBody(int) -> c
com.w3i.advertiser.AdvertiserRequestManager -> com.w3i.advertiser.d:
    com.w3i.advertiser.AdvertiserBaseAsyncTask mTask -> a
    void appWasRun(int) -> a
com.w3i.advertiser.AdvertiserRequestManager$1 -> com.w3i.advertiser.e:
    com.w3i.advertiser.AdvertiserRequestManager this$0 -> a
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.advertiser.AdvertiserRequestManager$2 -> com.w3i.advertiser.f:
    com.w3i.advertiser.AdvertiserRequestManager this$0 -> a
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.advertiser.AdvertiserSharedData -> com.w3i.advertiser.g:
    android.content.Context contextInstance -> a
    com.w3i.advertiser.W3iAdvertiser listenerInstance -> b
    java.lang.String _request -> c
    java.lang.String _response -> d
    android.content.Context getContext() -> a
    void setContext(android.content.Context) -> a
    com.w3i.advertiser.W3iAdvertiser getListener() -> b
    void setListener(com.w3i.advertiser.W3iAdvertiser) -> a
    void setRequest(java.lang.String) -> a
    void setResponse(java.lang.String) -> b
com.w3i.advertiser.AppWasRunRequestData -> com.w3i.advertiser.h:
    com.w3i.common.UDIDs udids -> a
    java.lang.Integer appId -> b
    java.lang.Boolean isFirstRun -> c
    java.lang.String isHacked -> d
    void setAppId(int) -> a
    void setFirstRun(boolean) -> a
    void setIsHacked(java.lang.String) -> a
    void setUdids(com.w3i.common.UDIDs) -> a
com.w3i.advertiser.AppWasRunV2RequestData -> com.w3i.advertiser.i:
    com.w3i.common.UDIDs udids -> a
    java.lang.Integer appId -> b
    java.lang.Boolean isHacked -> c
    java.lang.Boolean isFirstRun -> d
    com.w3i.advertiser.AppWasRunV2RequestData$AndroidMarketInputs inputs -> e
    void setInputs(java.util.Map) -> a
    void setUdids(com.w3i.common.UDIDs) -> a
    void setAppId(java.lang.Integer) -> a
    void setIsHacked(java.lang.Boolean) -> a
    void setIsFirstRun(java.lang.Boolean) -> b
com.w3i.advertiser.AppWasRunV2RequestData$AndroidMarketInputs -> com.w3i.advertiser.j:
    java.lang.String source -> b
    java.lang.String medium -> c
    java.lang.String term -> d
    java.lang.String content -> e
    java.lang.String campaign -> f
    com.w3i.advertiser.AppWasRunV2RequestData this$0 -> a
    void setSource(java.lang.String) -> a
    void setMedium(java.lang.String) -> b
    void setTerm(java.lang.String) -> c
    void setContent(java.lang.String) -> d
    void setCampaign(java.lang.String) -> e
com.w3i.advertiser.AppWasRunV2ResponseData -> com.w3i.advertiser.k:
com.w3i.advertiser.Device -> com.w3i.advertiser.l:
    java.lang.String androidDeviceID -> a
    java.lang.String androidID -> b
    java.lang.String androidSerialNumber -> c
    java.lang.String macWlan -> d
    boolean isHacked -> e
    java.lang.String w3iDeviceId -> f
    java.lang.String deviceName -> g
    java.lang.String osVersion -> h
    boolean usingSdk -> i
    java.lang.String getAndroidDeviceID() -> a
    void setAndroidDeviceID(java.lang.String) -> a
    java.lang.String getAndroidID() -> b
    void setAndroidID(java.lang.String) -> b
    java.lang.String getAndroidSerialNumber() -> c
    void setAndroidSerialNumber(java.lang.String) -> c
    java.lang.String getWlanMacAddress() -> d
    void setWlanMacAddress(java.lang.String) -> d
    boolean isHacked() -> e
    java.lang.String isHackedAsString() -> f
    void setHacked$1385ff() -> g
    java.lang.String getW3iDeviceId() -> h
    void setW3iDeviceId(java.lang.String) -> e
    java.lang.String getDeviceName() -> i
    void setDeviceName(java.lang.String) -> f
    java.lang.String getOsVersion() -> j
    void setOsVersion(java.lang.String) -> g
    boolean isUsingSdk() -> k
    void setUsingSdk$1385ff() -> l
com.w3i.advertiser.DeviceManager -> com.w3i.advertiser.m:
    boolean IS_CHECKING_ROOTED -> a
    com.w3i.advertiser.Device device -> b
    android.content.Context context -> c
    com.w3i.advertiser.DeviceManager deviceManager -> d
    com.w3i.advertiser.Device getDeviceInstance(android.content.Context) -> a
    java.lang.String getMacAddress() -> a
    java.lang.String getDeviceId() -> b
    java.lang.String getAndroidId() -> c
    java.lang.String getAndroidSerialNumber() -> d
    java.lang.String getW3iDeviceId() -> e
com.w3i.advertiser.EasySSLSocketFactory -> com.w3i.advertiser.n:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.w3i.advertiser.EasySSLSocketFactory$1 -> com.w3i.advertiser.o:
    com.w3i.advertiser.EasySSLSocketFactory this$0 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.w3i.advertiser.HttpConnectionManager -> com.w3i.advertiser.p:
    java.security.KeyStore getDefaultKeyStore() -> b
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory(java.security.KeyStore) -> a
    org.apache.http.client.methods.HttpPost populatePost(java.lang.String,java.lang.String) -> b
    org.apache.http.client.HttpClient getHttpClient() -> a
    java.lang.StringBuilder getResponseAsString(org.apache.http.message.BasicHttpResponse) -> a
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> c
    java.lang.String executeServerRequest(java.lang.String,java.lang.String) -> a
com.w3i.advertiser.JsonRequestManager -> com.w3i.advertiser.q:
    com.w3i.advertiser.Device device -> a
    com.w3i.advertiser.Device getDevice() -> a
    com.w3i.common.UDIDs generateUdidJsonCollection() -> b
com.w3i.advertiser.NetworkConnectionManager -> com.w3i.advertiser.r:
    android.content.Context context -> a
    com.w3i.advertiser.NetworkConnectionManager instance -> b
    com.w3i.advertiser.NetworkConnectionManager getInstance(android.content.Context) -> a
    com.w3i.advertiser.NetworkConnectionManager getInstance() -> a
    boolean isOnCellular() -> b
    boolean isConnectedToWifi() -> e
    boolean isConnected() -> c
    boolean checkWifiAccessPermissions() -> f
    java.lang.String getMacAddress() -> d
    android.net.wifi.WifiInfo getWifiInfo() -> g
com.w3i.advertiser.ReferralReceiver -> com.w3i.advertiser.ReferralReceiver:
    java.lang.String[] EXPECTED_PARAMETERS -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void storeReferralParams(android.content.Context,java.util.Map) -> a
    void removeReferralParams(android.content.Context) -> a
    java.util.Map retrieveReferralParams(android.content.Context) -> b
com.w3i.advertiser.SerialNumberFactory -> com.w3i.advertiser.s:
    java.lang.String serialNumber -> a
    java.lang.String getSerialNumber() -> a
com.w3i.advertiser.SharedPreferenceManager -> com.w3i.advertiser.t:
    android.content.SharedPreferences sharedPreferences -> a
    boolean isFirstRun() -> a
    java.lang.String getW3iDeviceId() -> b
com.w3i.advertiser.W3iAdvertiser -> com.w3i.advertiser.u:
    void onActionComplete(java.lang.Boolean) -> a
com.w3i.advertiser.W3iConnect -> com.w3i.advertiser.v:
    int[] $SWITCH_TABLE$com$w3i$advertiser$W3iConnect$OperationType -> a
    void launchServerOperation(int,com.w3i.advertiser.W3iConnect$OperationType) -> a
    void appWasRun(int) -> a
    void actionTaken(int) -> b
    int[] $SWITCH_TABLE$com$w3i$advertiser$W3iConnect$OperationType() -> a
com.w3i.advertiser.W3iConnect$OperationType -> com.w3i.advertiser.w:
    com.w3i.advertiser.W3iConnect$OperationType APP_WAS_RUN -> a
    com.w3i.advertiser.W3iConnect$OperationType ACTION_TAKEN -> b
    com.w3i.advertiser.W3iConnect$OperationType APP_WAS_RUN_V2 -> c
    com.w3i.advertiser.W3iConnect$OperationType[] ENUM$VALUES -> d
    com.w3i.advertiser.W3iConnect$OperationType[] values() -> values
    com.w3i.advertiser.W3iConnect$OperationType valueOf(java.lang.String) -> valueOf
com.w3i.advertiser.communication.ActionTakenRequest -> com.w3i.advertiser.a.a:
    int appId -> a
    boolean shouldExecute -> b
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setAppId(int) -> a
com.w3i.advertiser.communication.ActionTakenResponse -> com.w3i.advertiser.a.b:
com.w3i.advertiser.communication.AppWasRunV2Request -> com.w3i.advertiser.a.c:
    int appId -> a
    boolean shouldExecute -> b
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setAppId(int) -> a
com.w3i.advertiser.communication.AppWasRunV2Response -> com.w3i.advertiser.a.d:
    com.w3i.advertiser.AppWasRunV2ResponseData getResponseObject() -> a
com.w3i.common.AsyncTaskManager -> com.w3i.a.a:
    com.w3i.common.AsyncTaskManager instance -> a
    com.w3i.common.BaseAsyncTask task -> b
    java.util.ArrayList requests -> c
    com.w3i.common.OnBaseTaskCompletedListener onTaskCompleted -> d
    com.w3i.common.AsyncTaskManager getInstance() -> a
    void executeRequest(com.w3i.common.Request) -> a
    void executeTasks() -> b
    void executeImmediate(com.w3i.common.Request) -> b
    boolean isApplicationInForeground() -> d
    void release() -> c
    java.util.ArrayList access$0(com.w3i.common.AsyncTaskManager) -> a
com.w3i.common.AsyncTaskManager$1 -> com.w3i.a.b:
    com.w3i.common.AsyncTaskManager this$0 -> a
    void taskCompleted$13462e() -> a
com.w3i.common.BaseAsyncTask -> com.w3i.a.c:
    com.w3i.common.BaseAsyncTask$STATUS status -> a
    com.w3i.common.IHTTPServiceManager restServiceManager -> b
    com.w3i.common.OnBaseTaskCompletedListener listener -> c
    java.lang.Integer doInBackground(com.w3i.common.Request[]) -> a
    void setOnTaskCompletedListener(com.w3i.common.OnBaseTaskCompletedListener) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.w3i.common.BaseAsyncTask$PostProgressHolder -> com.w3i.a.d:
    com.w3i.common.Request request -> a
    boolean success -> b
    com.w3i.common.Response response -> c
    com.w3i.common.BaseAsyncTask this$0 -> d
com.w3i.common.BaseAsyncTask$STATUS -> com.w3i.a.e:
    com.w3i.common.BaseAsyncTask$STATUS PENDING -> a
    com.w3i.common.BaseAsyncTask$STATUS RUNNING -> b
    com.w3i.common.BaseAsyncTask$STATUS[] ENUM$VALUES -> c
    com.w3i.common.BaseAsyncTask$STATUS[] values() -> values
    com.w3i.common.BaseAsyncTask$STATUS valueOf(java.lang.String) -> valueOf
com.w3i.common.HTTPServiceManager -> com.w3i.a.f:
    org.apache.http.client.HttpClient client -> a
    int[] $SWITCH_TABLE$com$w3i$common$Request$HTTP_ACTION -> b
    com.w3i.common.Response execute(com.w3i.common.Request) -> a
    com.w3i.common.Response httpPost(com.w3i.common.Request) -> b
    void release() -> a
    int[] $SWITCH_TABLE$com$w3i$common$Request$HTTP_ACTION() -> b
com.w3i.common.IHTTPServiceManager -> com.w3i.a.g:
    com.w3i.common.Response execute(com.w3i.common.Request) -> a
    void release() -> a
com.w3i.common.Log -> com.w3i.a.h:
    boolean showLog -> a
    java.lang.String TAG -> b
    void enableLogging(boolean) -> a
    void i(java.lang.String) -> a
    void e(java.lang.String) -> b
    void e(java.lang.String,java.lang.Throwable) -> a
    void d(java.lang.String) -> c
com.w3i.common.OnBaseTaskCompletedListener -> com.w3i.a.i:
    void taskCompleted$13462e() -> a
com.w3i.common.OnRequestCompletedListener -> com.w3i.a.j:
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.common.OnTaskCompletedListener -> com.w3i.a.k:
    void onTaskCompleted(java.lang.String) -> a
com.w3i.common.Request -> com.w3i.a.l:
    java.lang.String url -> a
    java.lang.String request -> b
    java.lang.String requestType -> c
    com.w3i.common.Request$HTTP_ACTION httpAction -> d
    com.w3i.common.OnRequestCompletedListener listener -> e
    org.apache.http.client.HttpClient httpClient -> f
    org.apache.http.client.HttpClient getHttpClient() -> d
    void setHttpClient(org.apache.http.client.HttpClient) -> a
    java.lang.String getRequest() -> e
    void setRequest(java.lang.String) -> a
    java.lang.String getUrl() -> f
    void setUrl(java.lang.String) -> b
    java.lang.String getRequestType() -> g
    void setRequestType(java.lang.String) -> c
    com.w3i.common.Request$HTTP_ACTION getHttpAction() -> h
    void setHttpAction(com.w3i.common.Request$HTTP_ACTION) -> a
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setListener(com.w3i.common.OnRequestCompletedListener) -> a
    void executeListener(boolean,com.w3i.common.Response) -> a
com.w3i.common.Request$HTTP_ACTION -> com.w3i.a.m:
    com.w3i.common.Request$HTTP_ACTION GET -> a
    com.w3i.common.Request$HTTP_ACTION POST -> b
    com.w3i.common.Request$HTTP_ACTION HEAD -> c
    com.w3i.common.Request$HTTP_ACTION[] ENUM$VALUES -> d
    com.w3i.common.Request$HTTP_ACTION[] values() -> values
    com.w3i.common.Request$HTTP_ACTION valueOf(java.lang.String) -> valueOf
com.w3i.common.Response -> com.w3i.a.n:
    int statusCode -> a
    java.lang.String response -> b
    java.lang.String url -> c
    com.w3i.common.Response$TYPE responseType -> d
    java.lang.String status -> e
    java.lang.String getResponse() -> b
    void setResponse(java.io.InputStream) -> a
    int getStatusCode() -> c
    void setStatusCode(int) -> a
    void setUrl(java.lang.String) -> a
    java.lang.String getUrl() -> d
    void setResponseType(com.w3i.common.Response$TYPE) -> a
    com.w3i.common.Response$TYPE getResponseType() -> e
    java.lang.String getStatus() -> f
    void setStatus(java.lang.String) -> b
com.w3i.common.Response$TYPE -> com.w3i.a.o:
    com.w3i.common.Response$TYPE STRING -> a
    com.w3i.common.Response$TYPE OTHER -> b
    com.w3i.common.Response$TYPE[] ENUM$VALUES -> c
    com.w3i.common.Response$TYPE[] values() -> values
    com.w3i.common.Response$TYPE valueOf(java.lang.String) -> valueOf
com.w3i.common.UDIDs -> com.w3i.a.p:
    void addUDID(java.lang.String,java.lang.String) -> a
com.w3i.common.UDIDs$UDID -> com.w3i.a.q:
    java.lang.String type -> b
    java.lang.String value -> c
    com.w3i.common.UDIDs this$0 -> a
    void access$0(com.w3i.common.UDIDs$UDID,java.lang.String) -> a
    void access$1(com.w3i.common.UDIDs$UDID,java.lang.String) -> b
com.w3i.offerwall.ApplicationInputs -> com.w3i.offerwall.a:
    java.lang.String applicationName -> a
    int appId -> b
    java.lang.String publisherUserId -> c
    java.lang.String packageName -> d
    java.lang.String getApplicationName() -> a
    void setApplicationName(java.lang.String) -> a
    int getAppId() -> b
    void setAppId(int) -> a
    java.lang.String getPublisherUserId() -> c
    void setPublisherUserId(java.lang.String) -> b
    java.lang.String getPackageName() -> d
    void setPackageName(java.lang.String) -> c
com.w3i.offerwall.DialogInputs -> com.w3i.offerwall.b:
    java.lang.String currencyName -> a
    android.graphics.drawable.Drawable icon -> b
    int currencyAmount -> c
    java.lang.String getCurrencyName() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    int getCurrencyAmount() -> c
com.w3i.offerwall.W3iClickListener -> com.w3i.offerwall.c:
    void onClick(boolean) -> a
com.w3i.offerwall.W3iCurrencyListener -> com.w3i.offerwall.d:
    void onRedeem(java.util.List) -> a
com.w3i.offerwall.W3iCurrencyListenerV2 -> com.w3i.offerwall.e:
    void onRedeem(java.lang.String,java.util.List) -> a
com.w3i.offerwall.W3iListener -> com.w3i.offerwall.f:
com.w3i.offerwall.W3iPublisher -> com.w3i.offerwall.g:
    void showOfferWall() -> a
    void release() -> b
    void rateMyApp(android.app.Activity,com.w3i.offerwall.DialogInputs,com.w3i.offerwall.W3iClickListener) -> a
    void upgradeMyApp(android.app.Activity,com.w3i.offerwall.DialogInputs,com.w3i.offerwall.W3iClickListener) -> b
    void showRateUpgradeDialog(android.app.Activity,android.graphics.drawable.Drawable,java.lang.String,java.lang.String,java.lang.String,com.w3i.offerwall.W3iClickListener) -> a
    void showFeaturedOffer(android.app.Activity) -> a
    void redeemCurrency(android.app.Activity,com.w3i.offerwall.W3iListener) -> a
    void createSession() -> c
com.w3i.offerwall.W3iPublisher$1 -> com.w3i.offerwall.h:
    java.lang.String val$packageName -> a
    android.app.Activity val$context -> b
    com.w3i.offerwall.W3iClickListener val$clickListener -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.offerwall.business.Balance -> com.w3i.offerwall.a.a:
    java.lang.String id -> a
    java.lang.String displayName -> b
    java.lang.String externalCurrencyId -> c
    java.lang.String amount -> d
    java.lang.String getId() -> a
    java.lang.String getDisplayName() -> b
    java.lang.String getAmount() -> c
com.w3i.offerwall.business.CTAOffer -> com.w3i.offerwall.a.b:
    java.lang.Long offerId -> a
    java.lang.String displayName -> b
    java.lang.String smallIconUrl -> c
    java.lang.String shortMessage -> d
    java.lang.Long parentOfferId -> e
    android.graphics.drawable.Drawable smallIconDrawable -> f
    android.graphics.drawable.Drawable getSmallIconDrawable() -> a
    java.lang.Long getParentOfferId() -> b
    void setParentOfferId(java.lang.Long) -> a
    java.lang.Long getOfferId() -> c
    void setOfferId(java.lang.Long) -> b
    java.lang.String getDisplayName() -> d
    void setDisplayName(java.lang.String) -> a
    java.lang.String getSmallIconUrl() -> e
    void setSmallIconUrl(java.lang.String) -> b
    java.lang.String getShortMessage() -> f
    void setShortMessage(java.lang.String) -> c
com.w3i.offerwall.business.CTAOfferClickRequestData -> com.w3i.offerwall.a.c:
    java.lang.Long offerId -> a
    java.lang.Long parentOfferId -> b
    com.w3i.offerwall.business.Session session -> c
    void setOfferId(java.lang.Long) -> a
    void setParentOfferId(java.lang.Long) -> b
    void setSession(com.w3i.offerwall.business.Session) -> a
com.w3i.offerwall.business.CTAOfferClickResponseData -> com.w3i.offerwall.a.d:
    java.lang.String redirectUrl -> a
    java.lang.String getRedirectUrl() -> a
com.w3i.offerwall.business.CreateSessionRequestData -> com.w3i.offerwall.a.e:
    com.w3i.common.UDIDs udids -> a
    long appId -> b
    java.lang.String deviceGenerationInfo -> c
    java.lang.Boolean isHacked -> d
    java.lang.Boolean isOnCellular -> e
    java.lang.Boolean isUsingSDK -> f
    java.lang.String osVersion -> g
    java.lang.String publisherUserId -> h
    java.lang.String publisherSDKVersion -> i
    java.lang.Long previousSessionId -> j
    java.lang.String previousSessionEndTime -> k
    void setUdids(com.w3i.common.UDIDs) -> a
    void setAppId(long) -> a
    void setDeviceGenerationInfo(java.lang.String) -> a
    void setHacked(boolean) -> a
    void setOnCellular(boolean) -> b
    void setUsingSDK(boolean) -> c
    void setOsVersion(java.lang.String) -> b
    void setPublisherUserId(java.lang.String) -> c
    void setPublisherSDKVersion(java.lang.String) -> d
    void setPreviousSessionEndTime(java.lang.String) -> e
    void setPreviousSessionId(long) -> b
com.w3i.offerwall.business.DeviceHistoryResponseData -> com.w3i.offerwall.a.f:
    int totalOfferCount -> a
    java.util.ArrayList offerHistories -> b
    java.util.ArrayList violations -> c
    java.util.ArrayList messages -> d
    int getTotalOfferCount() -> a
    java.util.ArrayList getOfferHistories() -> b
com.w3i.offerwall.business.EndSessionRequestData -> com.w3i.offerwall.a.g:
    java.lang.Long sessionID -> a
    void setSessionID(java.lang.Long) -> a
com.w3i.offerwall.business.GetCTAOffersRequestData -> com.w3i.offerwall.a.h:
    com.w3i.offerwall.business.Session session -> a
    java.lang.Long offerId -> b
    void setSession(com.w3i.offerwall.business.Session) -> a
    void setOfferId(java.lang.Long) -> a
com.w3i.offerwall.business.GetCTAOffersResponseData -> com.w3i.offerwall.a.i:
    java.util.ArrayList offers -> a
    java.util.ArrayList getOffers() -> a
com.w3i.offerwall.business.GetDeviceBalanceRequestData -> com.w3i.offerwall.a.j:
    com.w3i.offerwall.business.Session session -> a
    java.lang.String balanceDateTime -> b
    java.lang.String previousBalanceDateTime -> c
    void setSession(com.w3i.offerwall.business.Session) -> a
    void setBalanceDateTime(java.lang.String) -> a
    void setPreviousBalanceDateTime(java.lang.String) -> b
com.w3i.offerwall.business.GetDeviceBalanceResponseData -> com.w3i.offerwall.a.k:
    java.lang.String balanceDateTime -> a
    java.util.ArrayList balances -> b
    java.util.ArrayList violations -> c
    java.util.ArrayList messages -> d
    java.util.ArrayList getViolations() -> a
    java.util.ArrayList getMessages() -> b
    java.lang.String getBalanceDateTime() -> c
    java.util.ArrayList getBalances() -> d
com.w3i.offerwall.business.GetFeaturedOfferRequestData -> com.w3i.offerwall.a.l:
    com.w3i.offerwall.business.Session session -> a
    void setSession(com.w3i.offerwall.business.Session) -> a
com.w3i.offerwall.business.GetFeaturedOfferResponseData -> com.w3i.offerwall.a.m:
    com.w3i.offerwall.business.OfferFull offerFull -> a
    java.lang.String messageBoxTitle -> b
    java.lang.String messageBoxDescription -> c
    java.util.ArrayList violations -> d
    java.util.ArrayList messages -> e
    java.util.ArrayList getViolations() -> a
    java.util.ArrayList getMessages() -> b
    java.lang.String getMessageBoxTitle() -> c
    java.lang.String getMessageBoxDescription() -> d
    com.w3i.offerwall.business.OfferFull getOfferFull() -> e
com.w3i.offerwall.business.GetHistoryRequestData -> com.w3i.offerwall.a.n:
    com.w3i.offerwall.business.Session session -> a
    java.lang.Integer offerIndexStart -> b
    java.lang.Integer offerIndexStop -> c
    java.lang.Integer sortColumn -> d
    java.lang.Integer sortDirection -> e
    void setSession(com.w3i.offerwall.business.Session) -> a
    void setOfferIndexStart(java.lang.Integer) -> a
    void setOfferIndexStop(java.lang.Integer) -> b
    void setSortColumn(java.lang.Integer) -> c
    void setSortDirection(java.lang.Integer) -> d
com.w3i.offerwall.business.GetOfferHistoryResponseData -> com.w3i.offerwall.a.o:
    java.lang.String displayName -> a
    java.lang.String displayStatus -> b
    java.lang.String clickDate -> c
    com.w3i.offerwall.business.PublisherCurrency mDevicePayoutCurrency -> d
    java.lang.String getDisplayName() -> a
    java.lang.String getDisplayStatus() -> b
    java.lang.String getClickDate() -> c
    com.w3i.offerwall.business.PublisherCurrency getDevicePayoutCurrency() -> d
com.w3i.offerwall.business.GetQualifiedOffersRequestData -> com.w3i.offerwall.a.p:
    com.w3i.offerwall.business.Session session -> a
    com.w3i.offerwall.business.GetQualifiedOffersRequestData$GetQualifiedOffersInputs getQualifiedOffersInputs -> b
    void setSession(com.w3i.offerwall.business.Session) -> a
    void setGetQualifiedOffersInputs$3b4dfe4b(int,int,int) -> a
com.w3i.offerwall.business.GetQualifiedOffersRequestData$GetQualifiedOffersInputs -> com.w3i.offerwall.a.q:
    java.lang.Integer offerIndexStart -> b
    java.lang.Integer offerIndexStop -> c
    java.lang.Integer sortColumn -> d
    java.lang.Integer sortDirection -> e
    com.w3i.offerwall.business.GetQualifiedOffersRequestData this$0 -> a
    void setOfferIndexStart(java.lang.Integer) -> a
    void setOfferIndexStop(java.lang.Integer) -> b
    void setSortColumn(java.lang.Integer) -> c
    void setSortDirection(java.lang.Integer) -> d
com.w3i.offerwall.business.GetQualifiedOffersResponseData -> com.w3i.offerwall.a.r:
    java.util.ArrayList violations -> a
    java.util.ArrayList messages -> b
    java.lang.String totalOfferCount -> c
    java.util.ArrayList offers -> d
    java.util.ArrayList getViolations() -> a
    java.util.ArrayList getMessages() -> b
    java.lang.String getTotalOfferCount() -> c
    java.util.ArrayList getOffers() -> d
com.w3i.offerwall.business.Message -> com.w3i.offerwall.a.s:
    java.lang.String referenceName -> a
    java.lang.String displayName -> b
    java.lang.String displayText -> c
    java.lang.String getReferenceName() -> a
    java.lang.String getDisplayName() -> b
    java.lang.String getDisplayText() -> c
com.w3i.offerwall.business.OfferBasic -> com.w3i.offerwall.a.t:
    long id -> a
    java.lang.String displayName -> b
    boolean isFeatured -> c
    java.lang.String smallIconUrl -> d
    java.lang.String purchasePrice -> e
    java.lang.String shortConversionActionMessage -> f
    java.lang.String fullConversionActionMessage -> g
    java.util.ArrayList publisherCurrencies -> h
    int selectedCurrency -> i
    void setSelectedCurrencyIndex(int) -> a
    long getId() -> a
    void setId$1349ef() -> b
    java.lang.String getDisplayName() -> c
    void setDisplayName(java.lang.String) -> a
    void setFeatured$1385ff() -> d
    java.lang.String getSmallIconUrl() -> e
    void setSmallIconUrl(java.lang.String) -> b
    java.lang.String getPurchasePrice() -> f
    java.lang.String getShortConversionActionMessage() -> g
    void setShortConversionActionMessage(java.lang.String) -> c
    java.lang.String getFullConversionActionMessage() -> h
    void setFullConversionActionMessage(java.lang.String) -> d
    java.util.ArrayList getPublisherCurrencies() -> i
    void selectDefaultCurrency() -> j
    com.w3i.offerwall.business.PublisherCurrency getSelectedCurrency() -> k
com.w3i.offerwall.business.OfferFull -> com.w3i.offerwall.a.u:
com.w3i.offerwall.business.PublisherCurrency -> com.w3i.offerwall.a.v:
    java.lang.String id -> a
    java.lang.String displayName -> b
    java.lang.String amount -> c
    boolean isDefault -> d
    java.lang.String getId() -> a
    java.lang.String getDisplayName() -> b
    void setDisplayName(java.lang.String) -> a
    java.lang.String getAmount() -> c
    boolean getIsDefault() -> d
com.w3i.offerwall.business.RedeemDeviceBalanceRequestData -> com.w3i.offerwall.a.w:
    com.w3i.offerwall.business.Session session -> a
    java.lang.String balanceDateTime -> b
    void setSession(com.w3i.offerwall.business.Session) -> a
    void setBalanceDateTime(java.lang.String) -> a
com.w3i.offerwall.business.RedeemDeviceBalanceResponseData -> com.w3i.offerwall.a.x:
    java.lang.String receiptId -> a
    java.util.ArrayList messages -> b
    java.util.ArrayList violations -> c
    java.util.ArrayList getViolations() -> a
    java.lang.String getReceiptId() -> b
    java.util.ArrayList getMessages() -> c
com.w3i.offerwall.business.SaveOfferClickRequestData -> com.w3i.offerwall.a.y:
    com.w3i.offerwall.business.Session session -> a
    java.lang.Long offerId -> b
    java.lang.String publisherCurrencyId -> c
    void setSession(com.w3i.offerwall.business.Session) -> a
    void setOfferId(java.lang.Long) -> a
    void setPublisherCurrencyId(java.lang.String) -> a
com.w3i.offerwall.business.SaveOfferClickResponseData -> com.w3i.offerwall.a.z:
    java.lang.String redirectURL -> a
    java.lang.String fullConversionMessage -> b
    java.lang.String shortConversionMessage -> c
    java.util.ArrayList violations -> d
    java.util.ArrayList messages -> e
    java.lang.String videoUrl -> f
    java.lang.String actionUrl -> g
    java.util.ArrayList getViolations() -> a
    java.util.ArrayList getMessages() -> b
    java.lang.String getRedirectURL() -> c
    java.lang.String getVideoUrl() -> d
    java.lang.String getActionUrl() -> e
com.w3i.offerwall.business.Session -> com.w3i.offerwall.a.aa:
    long sessionId -> a
    long getSessionId() -> a
    void setSessionId(long) -> a
com.w3i.offerwall.business.SessionResponseData -> com.w3i.offerwall.a.ab:
    com.w3i.offerwall.business.Session session -> a
    java.util.ArrayList violations -> b
    java.util.ArrayList messages -> c
    long getSessionId() -> a
    com.w3i.offerwall.business.Session getSession() -> b
com.w3i.offerwall.business.Violation -> com.w3i.offerwall.a.ac:
    java.lang.String entity -> a
    java.lang.String message -> b
    java.lang.String type -> c
    java.lang.String getEntity() -> a
    java.lang.String getMessage() -> b
com.w3i.offerwall.communication.HttpRedirectResolver -> com.w3i.offerwall.b.a:
    java.lang.String userAgent -> a
    org.apache.http.impl.client.DefaultHttpClient client -> b
    com.w3i.common.OnTaskCompletedListener taskCompletedListener -> c
    android.net.Uri doInBackground(android.net.Uri[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.w3i.offerwall.communication.ServerRequestManager -> com.w3i.offerwall.b.b:
    com.w3i.offerwall.communication.ServerRequestManager instance -> a
    com.w3i.common.OnTaskCompletedListener endSessionListener -> b
    com.w3i.common.AsyncTaskManager asyncTaskManager -> c
    com.w3i.offerwall.interfaces.IServerResponseHandler responseHandler -> d
    boolean released -> e
    android.os.Handler handler -> f
    com.w3i.offerwall.communication.ServerRequestManager getInstance() -> a
    void createSession(com.w3i.common.OnTaskCompletedListener) -> a
    void createSession() -> b
    void getQualifiedOffers(android.content.Context,com.w3i.offerwall.manager.OfferDownloadParams,com.w3i.offerwall.listeners.ProcessCompleteListener) -> a
    void getFeaturedOffer(android.content.Context) -> a
    void saveOfferClick(android.content.Context,com.w3i.offerwall.business.OfferBasic,com.w3i.common.OnTaskCompletedListener) -> a
    void saveOfferClick(android.content.Context,com.w3i.offerwall.business.OfferBasic) -> a
    void actionTaken(java.lang.String,android.content.Context,com.w3i.common.OnTaskCompletedListener) -> a
    void endSession() -> c
    void getDeviceBalance$4676139a(android.content.Context,com.w3i.offerwall.W3iListener,boolean) -> a
    void getDeviceBalance$74de10d2(android.content.Context,com.w3i.offerwall.W3iListener) -> a
    void redeemCurrency(com.w3i.offerwall.business.GetDeviceBalanceResponseData,com.w3i.offerwall.W3iListener,android.content.Context,boolean) -> a
    void getHistory$301378bb(com.w3i.common.OnTaskCompletedListener) -> b
    void getCTAOffers(long,com.w3i.offerwall.listeners.OnGetCTAOffersCompletedListener) -> a
    void ctaOfferClick(com.w3i.offerwall.business.CTAOffer,com.w3i.common.OnTaskCompletedListener) -> a
    void release() -> d
    com.w3i.offerwall.interfaces.IServerResponseHandler access$0(com.w3i.offerwall.communication.ServerRequestManager) -> a
    com.w3i.common.OnTaskCompletedListener access$1(com.w3i.offerwall.communication.ServerRequestManager) -> b
    void access$2$39fa5cc7(com.w3i.offerwall.communication.ServerRequestManager) -> c
    com.w3i.common.AsyncTaskManager access$3(com.w3i.offerwall.communication.ServerRequestManager) -> d
    boolean access$4(com.w3i.offerwall.communication.ServerRequestManager) -> e
    void access$5$51663850(com.w3i.offerwall.communication.ServerRequestManager) -> f
com.w3i.offerwall.communication.ServerRequestManager$1 -> com.w3i.offerwall.b.c:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.w3i.offerwall.communication.ServerRequestManager access$0(com.w3i.offerwall.communication.ServerRequestManager$1) -> a
com.w3i.offerwall.communication.ServerRequestManager$1$1 -> com.w3i.offerwall.b.d:
    com.w3i.offerwall.communication.ServerRequestManager$1 this$1 -> a
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$10 -> com.w3i.offerwall.b.e:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    com.w3i.offerwall.listeners.OnGetCTAOffersCompletedListener val$listener -> b
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$11 -> com.w3i.offerwall.b.f:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    com.w3i.common.OnTaskCompletedListener val$listener -> b
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$2 -> com.w3i.offerwall.b.g:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    com.w3i.common.OnTaskCompletedListener val$listener -> b
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$3 -> com.w3i.offerwall.b.h:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    android.content.Context val$context -> b
    com.w3i.offerwall.listeners.ProcessCompleteListener val$listener -> c
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$4 -> com.w3i.offerwall.b.i:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    android.content.Context val$context -> b
    com.w3i.common.OnTaskCompletedListener val$listener -> c
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$5 -> com.w3i.offerwall.b.j:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    android.content.Context val$context -> b
    com.w3i.offerwall.business.OfferBasic val$offer -> c
    com.w3i.common.OnTaskCompletedListener val$listener -> d
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$6 -> com.w3i.offerwall.b.k:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    android.content.Context val$context -> b
    com.w3i.common.OnTaskCompletedListener val$listener -> c
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$7 -> com.w3i.offerwall.b.l:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    android.content.Context val$context -> b
    com.w3i.offerwall.W3iListener val$currencyListener -> c
    boolean val$showMessages -> d
    com.w3i.common.OnTaskCompletedListener val$listener -> e
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$8 -> com.w3i.offerwall.b.m:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    android.content.Context val$context -> b
    com.w3i.offerwall.W3iListener val$currencyListener -> c
    com.w3i.offerwall.business.GetDeviceBalanceResponseData val$balance -> d
    boolean val$showMessages -> e
    com.w3i.common.OnTaskCompletedListener val$listener -> f
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerRequestManager$9 -> com.w3i.offerwall.b.n:
    com.w3i.offerwall.communication.ServerRequestManager this$0 -> a
    com.w3i.common.OnTaskCompletedListener val$listener -> b
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.communication.ServerResponseHandler -> com.w3i.offerwall.b.o:
    void handleCreateSession(com.w3i.common.Response) -> a
    void handleEndSession$58fda917() -> a
    void handleGetDeviceBalance(com.w3i.common.Response,android.content.Context,com.w3i.offerwall.W3iListener,boolean) -> a
    void handleGetHistory(com.w3i.common.Response) -> b
    void handleGetFeaturedOffer(com.w3i.common.Response,android.content.Context) -> a
    void handleGetQualifiedOffers(com.w3i.common.Response,android.content.Context) -> b
    void handleRedeemCurrency(com.w3i.common.Response,android.content.Context,com.w3i.offerwall.W3iListener,com.w3i.offerwall.business.GetDeviceBalanceResponseData,boolean) -> a
    void handleSaveOfferClick(android.content.Context,com.w3i.common.Response,long) -> a
    void handleActionTaken$d48856f() -> b
com.w3i.offerwall.communication.requests.ActionTakenRequest -> com.w3i.offerwall.b.a.a:
    boolean shouldExecute -> a
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setUrl(java.lang.String) -> b
com.w3i.offerwall.communication.requests.CTAOfferClickRequest -> com.w3i.offerwall.b.a.b:
    com.w3i.offerwall.business.CTAOffer offer -> a
    boolean shouldExecute -> b
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setCTAOffer(com.w3i.offerwall.business.CTAOffer) -> a
com.w3i.offerwall.communication.requests.CreateSessionRequest -> com.w3i.offerwall.b.a.c:
    void generateRequest() -> b
    com.w3i.common.Response generateResponse() -> a
    boolean shouldExecute() -> c
com.w3i.offerwall.communication.requests.EndSessionRequest -> com.w3i.offerwall.b.a.d:
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
com.w3i.offerwall.communication.requests.GetCTAOffersRequest -> com.w3i.offerwall.b.a.e:
    long offerId -> a
    boolean shouldExecute -> b
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setOfferId(long) -> a
com.w3i.offerwall.communication.requests.GetDeviceBalanceRequest -> com.w3i.offerwall.b.a.f:
    boolean showMessages -> a
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
com.w3i.offerwall.communication.requests.GetFeaturedOfferRequest -> com.w3i.offerwall.b.a.g:
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
com.w3i.offerwall.communication.requests.GetHistoryRequest -> com.w3i.offerwall.b.a.h:
    com.w3i.offerwall.manager.HistoryDownloadParams params -> a
    boolean shouldExecute -> b
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setParams(com.w3i.offerwall.manager.HistoryDownloadParams) -> a
com.w3i.offerwall.communication.requests.GetImageRequest -> com.w3i.offerwall.b.a.i:
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
com.w3i.offerwall.communication.requests.GetQualifiedOffersRequest -> com.w3i.offerwall.b.a.j:
    com.w3i.offerwall.manager.OfferDownloadParams params -> a
    boolean shouldExecute -> b
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    boolean shouldExecute() -> c
    void setDownloadParams(com.w3i.offerwall.manager.OfferDownloadParams) -> a
com.w3i.offerwall.communication.requests.RedeemCurrencyRequest -> com.w3i.offerwall.b.a.k:
    com.w3i.offerwall.business.GetDeviceBalanceResponseData balance -> a
    boolean shouldExecute -> b
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    void setDeviceBalance(com.w3i.offerwall.business.GetDeviceBalanceResponseData) -> a
    boolean shouldExecute() -> c
com.w3i.offerwall.communication.requests.SaveOfferClickRequest -> com.w3i.offerwall.b.a.l:
    com.w3i.offerwall.business.OfferBasic offer -> a
    com.w3i.common.Response generateResponse() -> a
    void generateRequest() -> b
    void setOffer(com.w3i.offerwall.business.OfferBasic) -> a
    boolean shouldExecute() -> c
com.w3i.offerwall.communication.responses.ActionTakenResponse -> com.w3i.offerwall.b.b.a:
com.w3i.offerwall.communication.responses.CTAOfferClickResponse -> com.w3i.offerwall.b.b.b:
com.w3i.offerwall.communication.responses.CreateSessionResponse -> com.w3i.offerwall.b.b.c:
com.w3i.offerwall.communication.responses.EndSessionResponse -> com.w3i.offerwall.b.b.d:
com.w3i.offerwall.communication.responses.GetCTAOffersResponse -> com.w3i.offerwall.b.b.e:
com.w3i.offerwall.communication.responses.GetDeviceBalanceResponse -> com.w3i.offerwall.b.b.f:
com.w3i.offerwall.communication.responses.GetFeaturedOfferResponse -> com.w3i.offerwall.b.b.g:
com.w3i.offerwall.communication.responses.GetHistoryResponse -> com.w3i.offerwall.b.b.h:
com.w3i.offerwall.communication.responses.GetImageResponse -> com.w3i.offerwall.b.b.i:
    android.graphics.Bitmap bitmapResponse -> a
    void setResponse(java.io.InputStream) -> a
    android.graphics.Bitmap getBitmapResponse() -> a
com.w3i.offerwall.communication.responses.GetQualifiedOffersResponse -> com.w3i.offerwall.b.b.j:
com.w3i.offerwall.communication.responses.RedeemCurrencyResponse -> com.w3i.offerwall.b.b.k:
com.w3i.offerwall.communication.responses.SaveOfferClickResponse -> com.w3i.offerwall.b.b.l:
com.w3i.offerwall.custom.views.CustomImageView -> com.w3i.offerwall.custom.views.a:
    void setImageFromInternet(java.lang.String) -> a
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    android.view.animation.Animation setImageAnimation() -> b
    void release() -> a
com.w3i.offerwall.custom.views.CustomVideoViewLayout -> com.w3i.offerwall.custom.views.b:
    android.widget.VideoView videoView -> i
    com.w3i.offerwall.custom.views.CustomVideoViewLayout$Controls controls -> j
    java.lang.String videoURI -> k
    int ID_CHILD_VIDEO_VIEW -> a
    int ID_CUSTOM_VIDEO_VIEW -> b
    int ID_CONTROLS -> c
    int ID_CLOSE -> d
    int ID_PROGRESS_BAR -> e
    int ID_TIME_ELAPSED -> f
    int ID_TIME_DURATION -> g
    int ID_PROGRESS_CONTAINER -> h
    int PROGRESS_UPDATE_PERIOD -> l
    int CONTROLS_DEFAULT_TIMEOUT -> m
    int MARGIN_CONTROLS_TOP -> n
    int MARGIN_CONTROLS_LEFT -> o
    int MARGIN_CONTROLS_BOTTOM -> p
    int MARGIN_CONTROLS_RIGHT -> q
    int MSG_UPDATE_PROGRESS -> r
    int MSG_HIDE -> s
    int MSG_UPDATE_BUFFER -> t
    com.w3i.offerwall.ui.ScreenDependendSize closeButtonSize -> u
    boolean controlsAreDisplayed -> v
    int buffered -> w
    boolean errorOccured -> x
    com.w3i.offerwall.dialogs.CustomAlertDialog errorDialog -> y
    java.lang.String videoDuration -> z
    android.os.Handler handler -> A
    com.w3i.offerwall.custom.views.CustomVideoViewLayout$OnVideoCompleted userSetOnCompletionListener -> B
    android.media.MediaPlayer$OnCompletionListener onCompletionListener -> C
    android.view.View$OnClickListener onLayoutClick -> D
    android.media.MediaPlayer$OnErrorListener onError -> E
    android.view.View$OnClickListener onClose -> F
    void updateProgress() -> f
    java.lang.String convertTime(int) -> b
    void start() -> a
    void setVideoSource(java.lang.String) -> a
    void setOnCompletionListener(com.w3i.offerwall.custom.views.CustomVideoViewLayout$OnVideoCompleted) -> a
    void setOnCloseListener(android.view.View$OnClickListener) -> a
    boolean isPlaying() -> b
    void seekTo(int) -> a
    int getCurrentPosition() -> c
    void release() -> d
    void replay() -> e
    void access$0(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> a
    void access$1(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> b
    android.widget.VideoView access$2(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> c
    void access$3(com.w3i.offerwall.custom.views.CustomVideoViewLayout,int) -> a
    int access$4(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> d
    com.w3i.offerwall.custom.views.CustomVideoViewLayout$OnVideoCompleted access$5(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> e
    boolean access$6(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> f
    void access$7$137827cd(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> g
    void access$8$1377ebbd(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> h
    com.w3i.offerwall.dialogs.CustomAlertDialog access$9(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> i
    android.media.MediaPlayer$OnCompletionListener access$10(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> j
    void access$11(com.w3i.offerwall.custom.views.CustomVideoViewLayout,com.w3i.offerwall.dialogs.CustomAlertDialog) -> a
    com.w3i.offerwall.ui.ScreenDependendSize access$12(com.w3i.offerwall.custom.views.CustomVideoViewLayout) -> k
com.w3i.offerwall.custom.views.CustomVideoViewLayout$1 -> com.w3i.offerwall.custom.views.c:
    com.w3i.offerwall.custom.views.CustomVideoViewLayout this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.w3i.offerwall.custom.views.CustomVideoViewLayout$2 -> com.w3i.offerwall.custom.views.d:
    com.w3i.offerwall.custom.views.CustomVideoViewLayout this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.w3i.offerwall.custom.views.CustomVideoViewLayout$3 -> com.w3i.offerwall.custom.views.e:
    com.w3i.offerwall.custom.views.CustomVideoViewLayout this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.custom.views.CustomVideoViewLayout$4 -> com.w3i.offerwall.custom.views.f:
    com.w3i.offerwall.custom.views.CustomVideoViewLayout this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    com.w3i.offerwall.custom.views.CustomVideoViewLayout access$0(com.w3i.offerwall.custom.views.CustomVideoViewLayout$4) -> a
com.w3i.offerwall.custom.views.CustomVideoViewLayout$4$1 -> com.w3i.offerwall.custom.views.g:
    com.w3i.offerwall.custom.views.CustomVideoViewLayout$4 this$1 -> a
    android.media.MediaPlayer val$mPlayer -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.offerwall.custom.views.CustomVideoViewLayout$Controls -> com.w3i.offerwall.custom.views.h:
    android.widget.Button close -> b
    com.w3i.offerwall.custom.views.LinearProgressBar customProgress -> c
    android.widget.TextView elapsed -> d
    android.widget.TextView duration -> e
    android.widget.LinearLayout progressLayout -> f
    com.w3i.offerwall.custom.views.CustomVideoViewLayout this$0 -> a
    void release() -> a
    android.widget.Button access$0(com.w3i.offerwall.custom.views.CustomVideoViewLayout$Controls) -> a
    com.w3i.offerwall.custom.views.LinearProgressBar access$1(com.w3i.offerwall.custom.views.CustomVideoViewLayout$Controls) -> b
    android.widget.TextView access$2(com.w3i.offerwall.custom.views.CustomVideoViewLayout$Controls) -> c
    android.widget.TextView access$3(com.w3i.offerwall.custom.views.CustomVideoViewLayout$Controls) -> d
com.w3i.offerwall.custom.views.CustomVideoViewLayout$OnVideoCompleted -> com.w3i.offerwall.custom.views.i:
    void videoCompleted$4feb901e(boolean) -> a
com.w3i.offerwall.custom.views.FadingViewSwitcher -> com.w3i.offerwall.custom.views.FadingViewSwitcher:
    void init() -> a
com.w3i.offerwall.custom.views.LinearProgressBar -> com.w3i.offerwall.custom.views.j:
    int positionMax -> a
    int positionCurrent -> b
    int positionBuffer -> c
    android.graphics.drawable.Drawable progressDrawable -> d
    android.graphics.drawable.Drawable bufferDrawable -> e
    android.graphics.drawable.Drawable backgroundDrawable -> f
    android.graphics.drawable.Drawable emptyDrawable -> g
    android.widget.ImageView progressImage -> h
    android.widget.ImageView bufferImage -> i
    android.widget.ImageView emptyImage -> j
    int MARGIN_BAR_TOP -> k
    int MARGIN_BAR_RIGHT -> l
    int MARGIN_BAR_BOTTOM -> m
    int MARGIN_BAR_LEFT -> n
    int HEIGHT_BAR -> o
    int ID_PROGRESS_LAYOUT -> p
    int ID_PROGRESS_IMAGE -> q
    int ID_BUFFER_IMAGE -> r
    int ID_EMPTY_IMAGE -> s
    void release() -> a
    void setPosition(int) -> a
    void setBufferPosition(int) -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setMax$13462e() -> b
    void updateProgressBar() -> c
    android.widget.RelativeLayout$LayoutParams setBarParams$4d3522bd(int) -> c
    int getNewWidth(int,int) -> a
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
com.w3i.offerwall.custom.views.ScrollingTextView -> com.w3i.offerwall.custom.views.ScrollingTextView:
    void setupView() -> a
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean isFocused() -> isFocused
com.w3i.offerwall.dialogs.CustomAlertDialog -> com.w3i.offerwall.dialogs.a:
com.w3i.offerwall.dialogs.custom.BaseDialog -> com.w3i.offerwall.dialogs.custom.a:
    int dialogMaxWidth -> a
    int dialogMinWidth -> b
    int dialogMinHeight -> c
    int dialogMaxHeight -> d
    float dialogMaxScreenPercentage -> e
    com.w3i.offerwall.dialogs.custom.BaseDialog$DialogContent dialogContent -> f
    void addView(android.view.View) -> a
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void onOrientationChange() -> a
    void setDialogBackground(android.graphics.drawable.Drawable) -> a
    void dismiss() -> dismiss
    float access$0(com.w3i.offerwall.dialogs.custom.BaseDialog) -> a
    void access$1(com.w3i.offerwall.dialogs.custom.BaseDialog,int,int) -> a
    int access$2(com.w3i.offerwall.dialogs.custom.BaseDialog) -> b
    int access$3(com.w3i.offerwall.dialogs.custom.BaseDialog) -> c
    int access$4(com.w3i.offerwall.dialogs.custom.BaseDialog) -> d
    int access$5(com.w3i.offerwall.dialogs.custom.BaseDialog) -> e
com.w3i.offerwall.dialogs.custom.BaseDialog$DialogContent -> com.w3i.offerwall.dialogs.custom.b:
    com.w3i.offerwall.dialogs.custom.BaseDialog this$0 -> a
    void onMeasure(int,int) -> onMeasure
    void release() -> a
com.w3i.offerwall.dialogs.custom.CTADialog -> com.w3i.offerwall.dialogs.custom.c:
    com.w3i.offerwall.dialogs.custom.CTADialogTitle title -> a
    com.w3i.offerwall.dialogs.custom.CTADialogBody body -> b
    com.w3i.offerwall.dialogs.custom.CTADialog$OnOfferClickedListener onOfferClicked -> c
    android.graphics.drawable.Drawable dialogBackground -> d
    android.view.View$OnClickListener onOfferLayoutClicked -> e
    void addOffers(java.util.ArrayList) -> a
    void addOffer(com.w3i.offerwall.business.CTAOffer) -> a
    void setOnOfferClickedListener(com.w3i.offerwall.dialogs.custom.CTADialog$OnOfferClickedListener) -> a
    void startProgress() -> b
    void stopProgress() -> c
    void setRedeemedBalance(java.lang.String,java.lang.String) -> a
    void setOnCloseListener(android.view.View$OnClickListener) -> a
    void removeOffer(com.w3i.offerwall.business.CTAOffer) -> b
    com.w3i.offerwall.dialogs.custom.CTADialog$OnOfferClickedListener access$0(com.w3i.offerwall.dialogs.custom.CTADialog) -> a
com.w3i.offerwall.dialogs.custom.CTADialog$1 -> com.w3i.offerwall.dialogs.custom.d:
    com.w3i.offerwall.dialogs.custom.CTADialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.dialogs.custom.CTADialog$2 -> com.w3i.offerwall.dialogs.custom.e:
    com.w3i.offerwall.dialogs.custom.CTADialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.dialogs.custom.CTADialog$OnOfferClickedListener -> com.w3i.offerwall.dialogs.custom.f:
    void onClick(com.w3i.offerwall.business.CTAOffer) -> a
com.w3i.offerwall.dialogs.custom.CTADialogBody -> com.w3i.offerwall.dialogs.custom.g:
    com.egoclean.android.widget.flinger.ViewFlinger flipper -> a
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller scroller -> b
    android.widget.ProgressBar progressBar -> c
    android.widget.LinearLayout progressLayout -> d
    boolean animateOffer -> e
    boolean progressInFlinger -> f
    void addOffer(android.view.View) -> a
    void showProgress$3d09be26(boolean) -> a
    void removeOffer(com.w3i.offerwall.business.CTAOffer) -> a
    android.view.animation.Animation setFadeInAnimation(android.view.ViewGroup) -> a
    android.view.animation.Animation setFadeOutAnimation(android.view.ViewGroup) -> b
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller access$0(com.w3i.offerwall.dialogs.custom.CTADialogBody) -> a
    android.widget.LinearLayout access$1(com.w3i.offerwall.dialogs.custom.CTADialogBody) -> b
    void access$2(com.w3i.offerwall.dialogs.custom.CTADialogBody,android.view.View$OnClickListener) -> a
    void access$3(com.w3i.offerwall.dialogs.custom.CTADialogBody) -> c
    void access$4(com.w3i.offerwall.dialogs.custom.CTADialogBody) -> d
com.w3i.offerwall.dialogs.custom.CTADialogBody$1 -> com.w3i.offerwall.dialogs.custom.h:
    com.w3i.offerwall.dialogs.custom.CTADialogBody this$0 -> a
    void onScreenChanging$5359dc9a(int) -> a
com.w3i.offerwall.dialogs.custom.CTADialogBody$2 -> com.w3i.offerwall.dialogs.custom.i:
    com.w3i.offerwall.dialogs.custom.CTADialogBody this$0 -> a
    boolean val$show -> b
    android.view.View$OnClickListener val$listener -> c
    void run() -> run
com.w3i.offerwall.dialogs.custom.CTADialogTitle -> com.w3i.offerwall.dialogs.custom.j:
    com.w3i.offerwall.dialogs.custom.CTADialogTitle$Title title -> a
    android.widget.Button close -> b
    int EARNED_TEXT_SIZE -> c
    int EARNED_TEXT_COLOR -> d
    int QUANTITY_TEXT_SIZE -> e
    int QUANTITY_TEXT_COLOR -> f
    int CURRENCY_TEXT_SIZE -> g
    int CURRENCY_TEXT_COLOR -> h
    int THANKS_TEXT_SIZE -> i
    int THANKS_TEXT_COLOR -> j
    void setOnCloseListener(android.view.View$OnClickListener) -> a
    void setPrimaryText(java.lang.String) -> a
    void setSecondaryText(java.lang.String,java.lang.String) -> a
    void switchText() -> a
    int access$0() -> b
    int access$1() -> c
    int access$2() -> d
    int access$3() -> e
    int access$4() -> f
    int access$5() -> g
    int access$6() -> h
    int access$7() -> i
com.w3i.offerwall.dialogs.custom.CTADialogTitle$RewardTitle -> com.w3i.offerwall.dialogs.custom.k:
    android.widget.TextView earnedText -> b
    android.widget.TextView quantity -> c
    android.widget.TextView currency -> d
    com.w3i.offerwall.dialogs.custom.CTADialogTitle this$0 -> a
    void setText(java.lang.String,java.lang.String) -> a
com.w3i.offerwall.dialogs.custom.CTADialogTitle$ThanksTitle -> com.w3i.offerwall.dialogs.custom.l:
    android.widget.TextView titleText -> b
    com.w3i.offerwall.dialogs.custom.CTADialogTitle this$0 -> a
    void access$0(com.w3i.offerwall.dialogs.custom.CTADialogTitle$ThanksTitle,java.lang.String) -> a
com.w3i.offerwall.dialogs.custom.CTADialogTitle$Title -> com.w3i.offerwall.dialogs.custom.m:
    com.w3i.offerwall.dialogs.custom.CTADialogTitle$ThanksTitle primaryTitle -> a
    com.w3i.offerwall.dialogs.custom.CTADialogTitle$RewardTitle secondaryTitle -> b
    com.w3i.offerwall.dialogs.custom.CTADialogTitle this$0 -> c
    void setPrimaryText(java.lang.String) -> a
    void setSecondaryText(java.lang.String,java.lang.String) -> a
com.w3i.offerwall.dialogs.custom.FeaturedDialogBody -> com.w3i.offerwall.dialogs.custom.FeaturedDialogBody:
    com.w3i.offerwall.dialogs.custom.OfferLayout offerLayout -> a
    android.widget.Button getItButton -> b
    android.graphics.drawable.Drawable getItButtonUp -> c
    android.graphics.drawable.Drawable getItButtonDown -> d
    void init() -> a
    void setOffer(com.w3i.offerwall.business.OfferFull) -> a
    void setOfferDescription(java.lang.String) -> a
    void setOnButtonClickListener(android.view.View$OnClickListener) -> a
    android.widget.Button access$0(com.w3i.offerwall.dialogs.custom.FeaturedDialogBody) -> a
    android.graphics.drawable.Drawable access$1(com.w3i.offerwall.dialogs.custom.FeaturedDialogBody) -> b
    android.graphics.drawable.Drawable access$2(com.w3i.offerwall.dialogs.custom.FeaturedDialogBody) -> c
com.w3i.offerwall.dialogs.custom.FeaturedDialogBody$1 -> com.w3i.offerwall.dialogs.custom.n:
    com.w3i.offerwall.dialogs.custom.FeaturedDialogBody this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.w3i.offerwall.dialogs.custom.FeaturedDialogTitle -> com.w3i.offerwall.dialogs.custom.FeaturedDialogTitle:
    com.w3i.offerwall.custom.views.ScrollingTextView titleText -> a
    android.widget.ImageView closeButton -> b
    void init() -> b
    void setOnCloseClickListener(android.view.View$OnClickListener) -> a
    void setTitle(java.lang.String) -> a
    void release() -> a
com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog -> com.w3i.offerwall.dialogs.custom.o:
    com.w3i.offerwall.dialogs.custom.FeaturedDialogTitle title -> a
    com.w3i.offerwall.dialogs.custom.FeaturedDialogBody body -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    void setOffer(com.w3i.offerwall.business.OfferFull) -> a
    void setOfferDescription(java.lang.String) -> a
    void setOnButtonClickListener(android.view.View$OnClickListener) -> a
    void dismiss() -> dismiss
com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog$1 -> com.w3i.offerwall.dialogs.custom.p:
    com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.dialogs.custom.OfferLayout -> com.w3i.offerwall.dialogs.custom.q:
    com.w3i.offerwall.business.CTAOffer offerCTA -> a
    com.w3i.offerwall.business.OfferBasic offerBasic -> b
    com.w3i.offerwall.custom.views.CustomImageView icon -> c
    android.widget.TextView title -> d
    android.widget.TextView description -> e
    void createIcon() -> b
    void setOfferIcon(java.lang.String) -> b
    void setOfferName(java.lang.String) -> c
    void setOfferDescription(java.lang.String) -> a
    com.w3i.offerwall.business.CTAOffer getCTAOffer() -> a
    void setOffer(com.w3i.offerwall.business.CTAOffer) -> a
    void setOffer(com.w3i.offerwall.business.OfferBasic) -> a
com.w3i.offerwall.dialogs.custom.ViewFlingerScroller -> com.w3i.offerwall.dialogs.custom.r:
    android.graphics.drawable.Drawable selected -> a
    android.graphics.drawable.Drawable unselected -> b
    int selectedIndex -> c
    boolean noItems -> d
    int ITEM_ALPHA_SELECTED -> e
    int ITEM_ALPHA_UNSELECTED -> f
    int ITEM_SIZE_DEFAULT -> g
    int ITEM_SIZE_DRAWABLE -> h
    int[] $SWITCH_TABLE$com$w3i$offerwall$dialogs$custom$ViewFlingerScroller$ITEM_ICON_TYPE -> i
    void addItem() -> a
    void setSelected(int) -> a
    void selectChild(int) -> c
    void removeItem(int) -> b
    int[] $SWITCH_TABLE$com$w3i$offerwall$dialogs$custom$ViewFlingerScroller$ITEM_ICON_TYPE() -> b
com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE -> com.w3i.offerwall.dialogs.custom.s:
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE DEFAULT -> a
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE DRAWABLE -> b
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE URL -> c
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE INVALID -> d
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE[] ENUM$VALUES -> e
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE[] values() -> values
    com.w3i.offerwall.dialogs.custom.ViewFlingerScroller$ITEM_ICON_TYPE valueOf(java.lang.String) -> valueOf
com.w3i.offerwall.enums.SortOrder -> com.w3i.offerwall.c.a:
    com.w3i.offerwall.enums.SortOrder DEFAULT -> a
    com.w3i.offerwall.enums.SortOrder DISPLAY_NAME -> b
    com.w3i.offerwall.enums.SortOrder PURCHASE_PRICE -> c
    com.w3i.offerwall.enums.SortOrder DEVICE_PAYOUT -> d
    int value -> e
    com.w3i.offerwall.enums.SortOrder[] ENUM$VALUES -> f
    int getSortOrderValue() -> a
    com.w3i.offerwall.enums.SortOrder[] values() -> values
    com.w3i.offerwall.enums.SortOrder valueOf(java.lang.String) -> valueOf
com.w3i.offerwall.enums.SortOrder$1 -> com.w3i.offerwall.c.b:
    java.lang.String toString() -> toString
com.w3i.offerwall.enums.SortOrder$2 -> com.w3i.offerwall.c.c:
    java.lang.String toString() -> toString
com.w3i.offerwall.enums.SortOrder$3 -> com.w3i.offerwall.c.d:
    java.lang.String toString() -> toString
com.w3i.offerwall.enums.SortOrder$4 -> com.w3i.offerwall.c.e:
    java.lang.String toString() -> toString
com.w3i.offerwall.interfaces.IServerResponseHandler -> com.w3i.offerwall.d.a:
    void handleActionTaken$d48856f() -> b
    void handleCreateSession(com.w3i.common.Response) -> a
    void handleEndSession$58fda917() -> a
    void handleGetDeviceBalance(com.w3i.common.Response,android.content.Context,com.w3i.offerwall.W3iListener,boolean) -> a
    void handleGetFeaturedOffer(com.w3i.common.Response,android.content.Context) -> a
    void handleGetHistory(com.w3i.common.Response) -> b
    void handleGetQualifiedOffers(com.w3i.common.Response,android.content.Context) -> b
    void handleRedeemCurrency(com.w3i.common.Response,android.content.Context,com.w3i.offerwall.W3iListener,com.w3i.offerwall.business.GetDeviceBalanceResponseData,boolean) -> a
    void handleSaveOfferClick(android.content.Context,com.w3i.common.Response,long) -> a
com.w3i.offerwall.listeners.OnDialogButtonClick -> com.w3i.offerwall.e.a:
com.w3i.offerwall.listeners.OnGetCTAOffersCompletedListener -> com.w3i.offerwall.e.b:
    void onCompletion(boolean,java.util.ArrayList) -> a
com.w3i.offerwall.listeners.ProcessCompleteListener -> com.w3i.offerwall.e.c:
    void onSuccess() -> a
    void onFailure() -> b
com.w3i.offerwall.manager.ActivityManager -> com.w3i.offerwall.f.a:
    void startComplexVideoOfferActivity(android.content.Context,java.lang.String,java.lang.String,long) -> a
    void startOfferDescriptionActivity(android.content.Context) -> a
    void moveToMarket(android.content.Context,java.lang.String) -> a
    void startOfferwallActivity(android.content.Context) -> b
com.w3i.offerwall.manager.CurrencyRedemptionManager -> com.w3i.offerwall.f.b:
    com.w3i.offerwall.business.GetDeviceBalanceResponseData getDeviceBalance -> a
    com.w3i.offerwall.manager.SharedPreferenceManager spm -> b
    void setDeviceBalance(com.w3i.offerwall.business.GetDeviceBalanceResponseData) -> a
    java.lang.String getBalanceDateTime() -> a
com.w3i.offerwall.manager.DensityManager -> com.w3i.offerwall.f.c:
    com.w3i.offerwall.ui.DeviceScreenSize getDeviceScreenSize(android.app.Activity) -> a
com.w3i.offerwall.manager.DialogManager -> com.w3i.offerwall.f.d:
    com.w3i.offerwall.manager.DialogManager instance -> a
    com.w3i.offerwall.manager.DialogManager getInstance() -> a
    com.w3i.offerwall.dialogs.CustomAlertDialog showNoNetrowkConnectivityDialog(android.content.Context) -> a
    android.app.ProgressDialog showProgressDialog(android.content.Context) -> b
    com.w3i.offerwall.dialogs.CustomAlertDialog showMessagesDialog(android.content.Context,java.util.ArrayList,java.util.ArrayList) -> a
    com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog showFeaturedOfferDialog(android.content.Context,com.w3i.offerwall.business.GetFeaturedOfferResponseData) -> a
com.w3i.offerwall.manager.DialogManager$1 -> com.w3i.offerwall.f.e:
    com.w3i.offerwall.manager.DialogManager this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.offerwall.manager.DialogManager$2 -> com.w3i.offerwall.f.f:
    com.w3i.offerwall.manager.DialogManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.offerwall.manager.DialogManager$3 -> com.w3i.offerwall.f.g:
    com.w3i.offerwall.manager.DialogManager this$0 -> a
    com.w3i.offerwall.business.OfferFull val$offer -> b
    android.content.Context val$context -> c
    com.w3i.offerwall.dialogs.custom.FeaturedOfferDialog val$dialog -> d
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.manager.DialogManager$DialogTextHolder -> com.w3i.offerwall.f.h:
    java.lang.String title -> a
    java.lang.String body -> b
    com.w3i.offerwall.manager.DialogManager this$0 -> c
com.w3i.offerwall.manager.DownloadParams -> com.w3i.offerwall.f.i:
    int start -> a
    int stop -> b
    int getStart() -> a
    int getStop() -> b
com.w3i.offerwall.manager.HistoryDownloadParams -> com.w3i.offerwall.f.j:
com.w3i.offerwall.manager.HistoryManager -> com.w3i.offerwall.f.k:
    com.w3i.offerwall.manager.HistoryManager getInstance() -> a
    com.w3i.offerwall.manager.HistoryDownloadParams getDownloadParams() -> b
    java.lang.String calculateDate(java.lang.String) -> a
    com.w3i.offerwall.manager.DownloadParams getDownloadParams() -> c
com.w3i.offerwall.manager.ImageCacheManager -> com.w3i.offerwall.f.l:
    com.w3i.offerwall.manager.ImageCacheManager instance -> a
    java.util.HashMap storage -> b
    android.os.Handler handler -> c
    com.w3i.offerwall.manager.ImageCacheManager getInstance() -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void clear() -> b
    void release() -> c
    void add(java.lang.String,android.graphics.Bitmap) -> a
com.w3i.offerwall.manager.ImageCacheManager$1 -> com.w3i.offerwall.f.m:
    com.w3i.offerwall.manager.ImageCacheManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.w3i.offerwall.manager.ImageDownloadManager -> com.w3i.offerwall.f.n:
    com.w3i.offerwall.manager.ImageDownloadManager instance -> a
    java.util.HashMap storage -> b
    com.w3i.offerwall.manager.ImageDownloadManager getInstance() -> a
    void downloadBitmapToImageView$198fb689(android.widget.ImageView,java.lang.String) -> a
    void setImageViewBitmap(android.widget.ImageView,android.graphics.Bitmap,com.w3i.offerwall.manager.ImageDownloadManager$OnDownloadComplete) -> b
    void release() -> b
    java.util.HashMap access$0(com.w3i.offerwall.manager.ImageDownloadManager) -> a
    void access$1$66a102ad(android.widget.ImageView,android.graphics.Bitmap,com.w3i.offerwall.manager.ImageDownloadManager$OnDownloadComplete) -> a
com.w3i.offerwall.manager.ImageDownloadManager$1 -> com.w3i.offerwall.f.o:
    com.w3i.offerwall.manager.ImageDownloadManager this$0 -> a
    com.w3i.offerwall.manager.ImageDownloadManager$OnDownloadComplete val$listener -> b
    void requestCompleted(boolean,com.w3i.common.Response) -> a
com.w3i.offerwall.manager.ImageDownloadManager$OnDownloadComplete -> com.w3i.offerwall.f.p:
com.w3i.offerwall.manager.ImageService -> com.w3i.offerwall.f.q:
    android.graphics.drawable.Drawable getDrawableImage(android.content.Context,java.lang.String) -> a
    android.graphics.drawable.NinePatchDrawable getNinePatchDrawableImage(android.content.Context,java.lang.String) -> b
com.w3i.offerwall.manager.ItemManager -> com.w3i.offerwall.f.r:
    int ORIGINAL_MAX -> a
    java.util.List items -> b
    int maxItemsAvailable -> c
    int batchSize -> d
    void setMaxItemsAvailable(int) -> a
    void setOriginalMax$13462e() -> d
    void setBatchSize$13462e() -> e
    com.w3i.offerwall.manager.DownloadParams getDownloadParams() -> c
    void add(java.lang.Object) -> a
    java.util.List getItems() -> f
    void clear() -> g
    int size() -> h
    boolean hasMore() -> i
    java.lang.Object get(int) -> b
com.w3i.offerwall.manager.JsonParserFactory -> com.w3i.offerwall.f.s:
    com.w3i.offerwall.business.SessionResponseData getCreateSessionResponse(java.lang.String) -> a
    com.w3i.offerwall.business.GetDeviceBalanceResponseData getAvailableDeviceBalance(java.lang.String) -> b
    com.w3i.offerwall.business.RedeemDeviceBalanceResponseData getRedeemDeviceBalance(java.lang.String) -> c
    com.w3i.offerwall.business.GetQualifiedOffersResponseData getQualifiedOffers(java.lang.String) -> d
    com.w3i.offerwall.business.SaveOfferClickResponseData getSaveOfferClick(java.lang.String) -> e
    com.w3i.offerwall.business.DeviceHistoryResponseData getDeviceHistory(java.lang.String) -> f
    com.w3i.offerwall.business.GetFeaturedOfferResponseData getFeaturedOffer(java.lang.String) -> g
    com.w3i.offerwall.business.GetCTAOffersResponseData getCTAOffers(java.lang.String) -> h
    com.w3i.offerwall.business.CTAOfferClickResponseData getCTAOfferClick(java.lang.String) -> i
com.w3i.offerwall.manager.ManagementService -> com.w3i.offerwall.f.t:
    com.w3i.offerwall.manager.ManagementService INSTANCE -> a
    com.w3i.offerwall.manager.OfferManager offerManager -> b
    com.w3i.offerwall.manager.HistoryManager historyManager -> c
    com.w3i.offerwall.communication.ServerRequestManager serverRequestManager -> d
    com.w3i.offerwall.manager.SelectedCurrencyManager selectedCurrencyManager -> e
    com.w3i.offerwall.manager.DialogManager dialogManager -> f
    com.w3i.offerwall.manager.PublisherSharedDataManager publisherSharedDataManager -> g
    com.w3i.offerwall.manager.OfferManager getOfferManager() -> a
    void setOfferManager(com.w3i.offerwall.manager.OfferManager) -> a
    com.w3i.offerwall.manager.HistoryManager getHistoryManager() -> b
    void setHistoryManager(com.w3i.offerwall.manager.HistoryManager) -> a
    com.w3i.offerwall.manager.SelectedCurrencyManager getSelectedCurrencyManager() -> c
    void setSelectedCurrencyManager(com.w3i.offerwall.manager.SelectedCurrencyManager) -> a
    com.w3i.offerwall.manager.PublisherSharedDataManager getPublisherSharedDataManager() -> d
    void setPublisherSharedDataManager(com.w3i.offerwall.manager.PublisherSharedDataManager) -> a
    com.w3i.offerwall.manager.ManagementService getInstance() -> e
    void release() -> f
com.w3i.offerwall.manager.OfferDownloadParams -> com.w3i.offerwall.f.u:
    com.w3i.offerwall.enums.SortOrder sortDirection -> a
    com.w3i.offerwall.enums.SortOrder getSortDirection() -> c
com.w3i.offerwall.manager.OfferManager -> com.w3i.offerwall.f.v:
    com.w3i.offerwall.business.OfferBasic selectedOffer -> a
    com.w3i.offerwall.manager.OfferManager getInstance() -> a
    com.w3i.offerwall.manager.OfferDownloadParams getDownloadParams(com.w3i.offerwall.enums.SortOrder) -> a
    com.w3i.offerwall.business.OfferBasic getSelectedOffer() -> b
    void setSelectedOffer(com.w3i.offerwall.business.OfferBasic) -> a
com.w3i.offerwall.manager.PublisherJsonRequestManager -> com.w3i.offerwall.f.w:
    java.lang.String getEndSessionRequest(long) -> a
    java.lang.String getCreateSessionRequest(long,java.lang.String) -> a
    java.lang.String getAvailableDeviceBalanceRequest(long) -> b
    com.w3i.offerwall.business.Session getSession(long) -> e
    java.lang.String getRedeemCurrencyRequest(com.w3i.offerwall.business.GetDeviceBalanceResponseData,long) -> a
    java.lang.String getQualifiedOffersRequest(int,int,com.w3i.offerwall.enums.SortOrder,long) -> a
    java.lang.String getFeaturedOfferRequest(long) -> c
    java.lang.String getSaveOfferClickRequest(com.w3i.offerwall.business.OfferBasic,long) -> a
    java.lang.String getHistoryBody(com.w3i.offerwall.manager.HistoryDownloadParams,long) -> a
    java.lang.String getCTAOffersBody(long,long) -> a
    java.lang.String getCTAOffersBody(long) -> d
    java.lang.String getCTAOfferClickBody(com.w3i.offerwall.business.CTAOffer) -> a
    java.lang.String getCTAOfferClickBody(long,com.w3i.offerwall.business.CTAOffer) -> a
com.w3i.offerwall.manager.PublisherSharedDataManager -> com.w3i.offerwall.f.x:
    int appId -> a
    java.lang.String publisherUserId -> b
    android.content.Context contextInstance -> c
    java.lang.String applicationName -> d
    java.lang.String packageName -> e
    com.w3i.offerwall.W3iListener currencyListener -> f
    com.w3i.offerwall.manager.PublisherSharedDataManager getInstance() -> g
    android.content.Context getContext() -> a
    void setContext(android.content.Context) -> a
    int getAppId() -> b
    void setAppId(int) -> a
    java.lang.String getPublisherUserId() -> c
    void setPublisherUserId(java.lang.String) -> a
    java.lang.String getApplicationName() -> d
    void setApplicationName(java.lang.String) -> b
    java.lang.String getPackageName() -> e
    void setPackageName(java.lang.String) -> c
    com.w3i.offerwall.W3iListener getCurrencyListener() -> f
    void setCurrencyListener(com.w3i.offerwall.W3iListener) -> a
com.w3i.offerwall.manager.SelectedCurrencyManager -> com.w3i.offerwall.f.y:
    int selectedIndex -> a
    java.util.List currencies -> b
    com.w3i.offerwall.manager.SelectedCurrencyManager getInstance() -> a
    void setCurrencies(java.util.List) -> a
    java.util.List getCurrencies() -> b
    int getSelectedCurrencyIndex() -> c
    com.w3i.offerwall.business.PublisherCurrency getSelectedCurrency() -> d
    int getDefaultCurrencyIndex() -> e
    void setSelectedCurrencyIndex(int) -> a
com.w3i.offerwall.manager.SessionManager -> com.w3i.offerwall.f.z:
    com.w3i.offerwall.business.SessionResponseData sessionResponse -> a
    long getSessionId() -> a
    long getPreviousSessionId() -> b
    void setSessionResponse(com.w3i.offerwall.business.SessionResponseData) -> a
    boolean hasSession() -> c
com.w3i.offerwall.manager.SharedPreferenceManager -> com.w3i.offerwall.f.aa:
    android.content.SharedPreferences sharedPreferences -> a
    long getPreviousSessionId() -> a
    java.lang.String getAvailableBalanceResponse() -> b
    java.lang.String getPreviousSessionEndTime() -> c
com.w3i.offerwall.ui.ComplexVideoOfferActivity -> com.w3i.offerwall.ui.ComplexVideoOfferActivity:
    com.w3i.offerwall.custom.views.CustomVideoViewLayout video -> a
    java.lang.String videoUrl -> b
    java.lang.String actionUrl -> c
    long parentOfferId -> d
    com.w3i.offerwall.dialogs.custom.CTADialog ctaDialog -> e
    java.util.ArrayList ctaOffers -> f
    boolean isActionTaken -> g
    boolean isBalanceRedeemed -> h
    java.lang.String redeemedBalanceName -> i
    java.lang.String redeemedBalanceAmount -> j
    boolean urlRedirectExecuted -> k
    com.w3i.common.OnTaskCompletedListener onActionTakenResponse -> l
    android.view.View$OnClickListener onCTADialogClosed -> m
    com.w3i.offerwall.custom.views.CustomVideoViewLayout$OnVideoCompleted onVideoFinished -> n
    com.w3i.offerwall.W3iCurrencyListenerV2 onRedeemCurrencyResponse -> o
    com.w3i.common.OnTaskCompletedListener onCTAOffersClickResponse -> p
    com.w3i.offerwall.listeners.OnGetCTAOffersCompletedListener onGetCTAOffersResponse -> q
    com.w3i.offerwall.dialogs.custom.CTADialog$OnOfferClickedListener onCTAOfferClicked -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void access$0$5e7aec72(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> a
    com.w3i.offerwall.W3iCurrencyListenerV2 access$1(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> b
    java.lang.String access$2(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> c
    void access$3(com.w3i.offerwall.ui.ComplexVideoOfferActivity,com.w3i.offerwall.dialogs.custom.CTADialog) -> a
    java.util.ArrayList access$4(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> d
    long access$5(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> e
    com.w3i.offerwall.listeners.OnGetCTAOffersCompletedListener access$6(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> f
    com.w3i.offerwall.dialogs.custom.CTADialog access$7(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> g
    boolean access$8(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> h
    com.w3i.common.OnTaskCompletedListener access$9(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> i
    boolean access$10(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> j
    java.lang.String access$11(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> k
    java.lang.String access$12(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> l
    com.w3i.offerwall.dialogs.custom.CTADialog$OnOfferClickedListener access$13(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> m
    android.view.View$OnClickListener access$14(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> n
    void access$15$5e7aec72(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> o
    void access$16(com.w3i.offerwall.ui.ComplexVideoOfferActivity,java.lang.String) -> a
    void access$17(com.w3i.offerwall.ui.ComplexVideoOfferActivity,java.lang.String) -> b
    void access$18(com.w3i.offerwall.ui.ComplexVideoOfferActivity,java.util.ArrayList) -> a
    com.w3i.offerwall.custom.views.CustomVideoViewLayout access$19(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> p
    com.w3i.common.OnTaskCompletedListener access$20(com.w3i.offerwall.ui.ComplexVideoOfferActivity) -> q
    void access$21(com.w3i.offerwall.ui.ComplexVideoOfferActivity,java.lang.String) -> c
com.w3i.offerwall.ui.ComplexVideoOfferActivity$1 -> com.w3i.offerwall.ui.a:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onTaskCompleted(java.lang.String) -> a
com.w3i.offerwall.ui.ComplexVideoOfferActivity$2 -> com.w3i.offerwall.ui.b:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.ComplexVideoOfferActivity$3 -> com.w3i.offerwall.ui.c:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void videoCompleted$4feb901e(boolean) -> a
com.w3i.offerwall.ui.ComplexVideoOfferActivity$4 -> com.w3i.offerwall.ui.d:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onRedeem(java.lang.String,java.util.List) -> a
com.w3i.offerwall.ui.ComplexVideoOfferActivity$5 -> com.w3i.offerwall.ui.e:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onTaskCompleted(java.lang.String) -> a
com.w3i.offerwall.ui.ComplexVideoOfferActivity$6 -> com.w3i.offerwall.ui.f:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onCompletion(boolean,java.util.ArrayList) -> a
com.w3i.offerwall.ui.ComplexVideoOfferActivity$7 -> com.w3i.offerwall.ui.g:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onClick(com.w3i.offerwall.business.CTAOffer) -> a
com.w3i.offerwall.ui.ComplexVideoOfferActivity$8 -> com.w3i.offerwall.ui.h:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onTaskCompleted(java.lang.String) -> a
com.w3i.offerwall.ui.ComplexVideoOfferActivity$9 -> com.w3i.offerwall.ui.i:
    com.w3i.offerwall.ui.ComplexVideoOfferActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.DeviceScreenSize -> com.w3i.offerwall.ui.j:
    int widthPixels -> a
    int heightPixels -> b
    float widthInches -> c
    float heightInches -> d
    float diagonalInches -> e
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE screenSize -> f
    float density -> g
    float getDiagonalInches() -> a
    float getDensity() -> b
    void setDensity(float) -> a
    void setWidthPixels(int) -> a
    void setHeightPixels(int) -> b
    void setWidthInches(float) -> b
    void setHeightInches(float) -> c
    void setDiagonalInches(float) -> d
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE getScreenSize() -> c
com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE -> com.w3i.offerwall.ui.k:
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE SMALL -> a
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE NORMAL -> b
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE LARGE -> c
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE EXTRA_LARGE -> d
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE[] ENUM$VALUES -> e
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE[] values() -> values
    com.w3i.offerwall.ui.DeviceScreenSize$SCREEN_SIZE valueOf(java.lang.String) -> valueOf
com.w3i.offerwall.ui.HistoryActivity -> com.w3i.offerwall.ui.HistoryActivity:
    android.widget.RelativeLayout mainLayout -> a
    com.w3i.offerwall.ui.HistoryLayout history -> b
    void onCreate(android.os.Bundle) -> onCreate
    void setHistoryLayout(com.w3i.offerwall.ui.DeviceScreenSize) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
com.w3i.offerwall.ui.HistoryActivity$1 -> com.w3i.offerwall.ui.l:
    com.w3i.offerwall.ui.HistoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.HistoryActivity$2 -> com.w3i.offerwall.ui.m:
    com.w3i.offerwall.ui.HistoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.HistoryLayout -> com.w3i.offerwall.ui.n:
    android.app.ProgressDialog progress -> a
    com.w3i.offerwall.ui.OfferwallTopBar topBar -> b
    com.w3i.offerwall.ui.HistoryTable table -> c
    com.w3i.offerwall.ui.OfferwallBottomBar bottomBar -> d
    com.w3i.offerwall.ui.ScreenDependendSize topbarHeight -> e
    com.w3i.offerwall.ui.ScreenDependendSize bottomBarHeight -> f
    void loadHistory(com.w3i.offerwall.manager.ItemManager) -> a
    void release() -> a
    void downloadHistory() -> b
    void getHistory() -> c
    void setOnRewardClick(android.view.View$OnClickListener) -> a
    void setOnCloseClick(android.view.View$OnClickListener) -> b
    void access$0(com.w3i.offerwall.ui.HistoryLayout) -> a
    android.app.ProgressDialog access$1(com.w3i.offerwall.ui.HistoryLayout) -> b
    void access$2$752c7eec(com.w3i.offerwall.ui.HistoryLayout) -> c
com.w3i.offerwall.ui.HistoryLayout$1 -> com.w3i.offerwall.ui.o:
    com.w3i.offerwall.ui.HistoryLayout this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.HistoryLayout$2 -> com.w3i.offerwall.ui.p:
    com.w3i.offerwall.ui.HistoryLayout this$0 -> a
    void onTaskCompleted(java.lang.String) -> a
com.w3i.offerwall.ui.HistoryTable -> com.w3i.offerwall.ui.q:
    android.widget.TextView title -> a
    android.widget.TableLayout table -> b
    com.w3i.offerwall.ui.HistoryTable$HistoryHeader header -> c
    android.widget.ScrollView scroller -> d
    android.widget.LinearLayout scrollContainer -> e
    com.w3i.offerwall.ui.HistoryTable$LoadMore loadMore -> f
    android.view.View$OnClickListener loadMoreListener -> g
    int historyTextColor -> h
    int historyHeaderColumnTextColor -> i
    android.graphics.drawable.Drawable devider -> j
    android.graphics.drawable.Drawable loadMoreBackground -> k
    com.w3i.offerwall.ui.ScreenDependendSize loadMoreHeight -> l
    com.w3i.offerwall.ui.ScreenDependendSize loadMoreWidth -> m
    com.w3i.offerwall.ui.ScreenDependendSize headerHeight -> n
    com.w3i.offerwall.ui.ScreenDependendSize loadMoreTopMargin -> o
    com.w3i.offerwall.ui.HistoryTable$HistoryTableRow addRow(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void loadHistory(com.w3i.offerwall.manager.ItemManager) -> a
    void setOnLoadMore(android.view.View$OnClickListener) -> a
    void release() -> a
    void releaseTable() -> d
    int access$0() -> b
    android.graphics.drawable.Drawable access$1(com.w3i.offerwall.ui.HistoryTable) -> a
    int access$2() -> c
    com.w3i.offerwall.ui.ScreenDependendSize access$3(com.w3i.offerwall.ui.HistoryTable) -> b
    com.w3i.offerwall.ui.ScreenDependendSize access$4(com.w3i.offerwall.ui.HistoryTable) -> c
    com.w3i.offerwall.ui.ScreenDependendSize access$5(com.w3i.offerwall.ui.HistoryTable) -> d
    com.w3i.offerwall.ui.ScreenDependendSize access$6(com.w3i.offerwall.ui.HistoryTable) -> e
    android.graphics.drawable.Drawable access$7(com.w3i.offerwall.ui.HistoryTable) -> f
    android.view.View$OnClickListener access$8(com.w3i.offerwall.ui.HistoryTable) -> g
com.w3i.offerwall.ui.HistoryTable$HistoryHeader -> com.w3i.offerwall.ui.r:
    com.w3i.offerwall.ui.HistoryTable$HistoryHeader$HeaderItem name -> b
    com.w3i.offerwall.ui.HistoryTable$HistoryHeader$HeaderItem date -> c
    com.w3i.offerwall.ui.HistoryTable$HistoryHeader$HeaderItem reward -> d
    com.w3i.offerwall.ui.HistoryTable$HistoryHeader$HeaderItem status -> e
    android.graphics.drawable.Drawable separatorImage -> f
    com.w3i.offerwall.ui.HistoryTable this$0 -> a
    void release() -> a
    android.graphics.drawable.Drawable access$0(com.w3i.offerwall.ui.HistoryTable$HistoryHeader) -> a
    com.w3i.offerwall.ui.HistoryTable access$1(com.w3i.offerwall.ui.HistoryTable$HistoryHeader) -> b
com.w3i.offerwall.ui.HistoryTable$HistoryHeader$HeaderItem -> com.w3i.offerwall.ui.s:
    android.widget.TextView text -> b
    android.widget.ImageView separator -> c
    com.w3i.offerwall.ui.HistoryTable$HistoryHeader this$1 -> a
    void setText(java.lang.String) -> a
    void release() -> a
    android.widget.ImageView access$0(com.w3i.offerwall.ui.HistoryTable$HistoryHeader$HeaderItem) -> a
com.w3i.offerwall.ui.HistoryTable$HistoryTableRow -> com.w3i.offerwall.ui.t:
    android.widget.TextView name -> b
    android.widget.TextView date -> c
    android.widget.TextView reward -> d
    android.widget.TextView status -> e
    com.w3i.offerwall.ui.HistoryTable this$0 -> a
    void setupRow(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void release() -> a
com.w3i.offerwall.ui.HistoryTable$LoadMore -> com.w3i.offerwall.ui.u:
    android.widget.ImageView row -> b
    com.w3i.offerwall.ui.HistoryTable this$0 -> a
    void release() -> a
    void setOnLoadMore(android.view.View$OnClickListener) -> a
com.w3i.offerwall.ui.HistoryTable$SeparatorRow -> com.w3i.offerwall.ui.v:
    android.widget.ImageView separator -> b
    com.w3i.offerwall.ui.HistoryTable this$0 -> a
    void release() -> a
com.w3i.offerwall.ui.MainLayoutParams -> com.w3i.offerwall.ui.w:
    int[] $SWITCH_TABLE$com$w3i$offerwall$ui$DeviceScreenSize$SCREEN_SIZE -> a
    int[] $SWITCH_TABLE$com$w3i$offerwall$ui$DeviceScreenSize$SCREEN_SIZE() -> a
com.w3i.offerwall.ui.OfferDescriptionActivity -> com.w3i.offerwall.ui.OfferDescriptionActivity:
    com.w3i.offerwall.ui.OfferDescriptionLayout offerDescription -> a
    android.widget.RelativeLayout mainLayout -> b
    com.w3i.offerwall.business.OfferBasic offer -> c
    com.w3i.offerwall.ui.DeviceScreenSize screenSize -> d
    boolean isFinished -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void setLayoutParams() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
    com.w3i.offerwall.ui.OfferDescriptionLayout access$0(com.w3i.offerwall.ui.OfferDescriptionActivity) -> a
    com.w3i.offerwall.business.OfferBasic access$1(com.w3i.offerwall.ui.OfferDescriptionActivity) -> b
    boolean access$2(com.w3i.offerwall.ui.OfferDescriptionActivity) -> c
com.w3i.offerwall.ui.OfferDescriptionActivity$1 -> com.w3i.offerwall.ui.x:
    com.w3i.offerwall.ui.OfferDescriptionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.w3i.offerwall.ui.OfferDescriptionActivity access$0(com.w3i.offerwall.ui.OfferDescriptionActivity$1) -> a
com.w3i.offerwall.ui.OfferDescriptionActivity$1$1 -> com.w3i.offerwall.ui.y:
    com.w3i.offerwall.ui.OfferDescriptionActivity$1 this$1 -> a
    void onTaskCompleted(java.lang.String) -> a
com.w3i.offerwall.ui.OfferDescriptionActivity$2 -> com.w3i.offerwall.ui.z:
    com.w3i.offerwall.ui.OfferDescriptionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.OfferDescriptionLayout -> com.w3i.offerwall.ui.aa:
    com.w3i.offerwall.ui.OfferwallTopBar topBar -> a
    com.w3i.offerwall.ui.OfferDescriptionLayout$OfferDescription description -> b
    android.widget.ImageView separator -> c
    com.w3i.offerwall.ui.OfferDescriptionLayout$ScrollTextView fullDescription -> d
    android.widget.ImageView proceed -> e
    com.w3i.offerwall.ui.OfferwallBottomBar bottomBar -> f
    android.widget.LinearLayout offerDescriptionLayout -> g
    com.w3i.offerwall.business.OfferBasic offer -> h
    int backgroundColor -> i
    int titleColor -> j
    int shortDescriptionColor -> k
    android.graphics.drawable.Drawable proceedBackground -> l
    android.graphics.drawable.Drawable separatorBackground -> m
    android.app.ProgressDialog progressDialog -> n
    com.w3i.offerwall.ui.ScreenDependendSize topBarHeight -> o
    com.w3i.offerwall.ui.ScreenDependendSize bottomBarHeight -> p
    com.w3i.offerwall.ui.ScreenDependendSize proceedHeight -> q
    com.w3i.offerwall.ui.ScreenDependendSize proceedWidth -> r
    com.w3i.offerwall.ui.ScreenDependendSize iconSize -> s
    com.w3i.offerwall.ui.ScreenDependendSize proceedPadding -> t
    com.w3i.offerwall.ui.ScreenDependendSize descriptionPadding -> u
    void setOffer(com.w3i.offerwall.business.OfferBasic) -> a
    void setOnCloseListener(android.view.View$OnClickListener) -> a
    void release() -> a
    void setOnProceedClicked(android.view.View$OnClickListener) -> b
    void showProgressDialog() -> b
    void dismissProgressDialog() -> c
    com.w3i.offerwall.ui.ScreenDependendSize access$0(com.w3i.offerwall.ui.OfferDescriptionLayout) -> a
    com.w3i.offerwall.ui.ScreenDependendSize access$1(com.w3i.offerwall.ui.OfferDescriptionLayout) -> b
    int access$2(com.w3i.offerwall.ui.OfferDescriptionLayout) -> c
    int access$3(com.w3i.offerwall.ui.OfferDescriptionLayout) -> d
com.w3i.offerwall.ui.OfferDescriptionLayout$OfferDescription -> com.w3i.offerwall.ui.ab:
    com.w3i.offerwall.custom.views.CustomImageView icon -> b
    android.widget.TextView title -> c
    android.widget.TextView shortDescription -> d
    com.w3i.offerwall.ui.OfferDescriptionLayout this$0 -> a
    void release() -> a
    void setIcon(java.lang.String) -> a
    void setTitle(java.lang.String) -> b
    void setShortDescription(java.lang.String) -> c
com.w3i.offerwall.ui.OfferDescriptionLayout$ScrollTextView -> com.w3i.offerwall.ui.ac:
    android.webkit.WebView textView -> b
    com.w3i.offerwall.ui.OfferDescriptionLayout this$0 -> a
    void setText(java.lang.String) -> a
    void setTextSize$13462e() -> a
com.w3i.offerwall.ui.OfferwallActivity -> com.w3i.offerwall.ui.OfferwallActivity:
    android.widget.RelativeLayout offerwallLayout -> a
    com.w3i.offerwall.ui.OfferwallLayout offerwall -> b
    com.w3i.offerwall.ui.DeviceScreenSize screenSize -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setLayoutParams() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.w3i.offerwall.ui.OfferwallActivity$1 -> com.w3i.offerwall.ui.ad:
    com.w3i.offerwall.ui.OfferwallActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.OfferwallActivity$2 -> com.w3i.offerwall.ui.ae:
    com.w3i.offerwall.ui.OfferwallActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.OfferwallBottomBar -> com.w3i.offerwall.ui.af:
    android.widget.TextView poweredBy -> a
    android.widget.TextView privacy -> b
    android.widget.ImageView questionMark -> c
    android.graphics.drawable.Drawable questionMarkDrawable -> d
    android.graphics.drawable.Drawable backgroundDrawable -> e
    boolean createLog -> f
    android.text.SpannableString privacyContent -> g
    int privacyTextColor -> h
    java.lang.Object datetime -> i
    java.lang.String appId -> j
    java.lang.String w3ideviceId -> k
    java.lang.String deviceId -> l
    java.lang.String androidId -> m
    java.lang.String serialnumber -> n
    java.lang.String maclan -> o
    com.w3i.offerwall.ui.ScreenDependendSize questionMarkSize -> p
    com.w3i.offerwall.ui.ScreenDependendSize horizontalPadding -> q
    void release() -> a
    void access$0$133bafcc(com.w3i.offerwall.ui.OfferwallBottomBar) -> a
    boolean access$1(com.w3i.offerwall.ui.OfferwallBottomBar) -> b
    java.lang.Object access$2(com.w3i.offerwall.ui.OfferwallBottomBar) -> c
    java.lang.String access$3(com.w3i.offerwall.ui.OfferwallBottomBar) -> d
    java.lang.String access$4(com.w3i.offerwall.ui.OfferwallBottomBar) -> e
    java.lang.String access$5(com.w3i.offerwall.ui.OfferwallBottomBar) -> f
    java.lang.String access$6(com.w3i.offerwall.ui.OfferwallBottomBar) -> g
    java.lang.String access$7(com.w3i.offerwall.ui.OfferwallBottomBar) -> h
    java.lang.String access$8(com.w3i.offerwall.ui.OfferwallBottomBar) -> i
com.w3i.offerwall.ui.OfferwallBottomBar$1 -> com.w3i.offerwall.ui.ag:
    com.w3i.offerwall.ui.OfferwallBottomBar this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.OfferwallBottomBar$2 -> com.w3i.offerwall.ui.ah:
    com.w3i.offerwall.ui.OfferwallBottomBar this$0 -> a
    void onClick(android.view.View) -> onClick
    com.w3i.offerwall.ui.OfferwallBottomBar access$0(com.w3i.offerwall.ui.OfferwallBottomBar$2) -> a
com.w3i.offerwall.ui.OfferwallBottomBar$2$1 -> com.w3i.offerwall.ui.ai:
    com.w3i.offerwall.ui.OfferwallBottomBar$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.offerwall.ui.OfferwallLayout -> com.w3i.offerwall.ui.aj:
    com.w3i.offerwall.ui.OfferwallTopBar topBar -> a
    com.w3i.offerwall.ui.OfferwallOfferList offerList -> b
    com.w3i.offerwall.ui.OfferwallBottomBar bottomBar -> c
    com.w3i.offerwall.ui.SortingBar sortingBar -> d
    android.app.ProgressDialog progress -> e
    com.w3i.offerwall.ui.ScreenDependendSize topbarHeight -> f
    com.w3i.offerwall.ui.ScreenDependendSize bottomBarHeight -> g
    com.w3i.offerwall.ui.ScreenDependendSize sortingBarHeight -> h
    com.w3i.offerwall.ui.SortByListener sortByListener -> i
    void downloadOffers() -> a
    void getQualifiedOffers() -> d
    void setHistoryListener(android.view.View$OnClickListener) -> a
    void setCloseListener(android.view.View$OnClickListener) -> b
    void setRewardsSelected() -> b
    void release() -> c
    com.w3i.offerwall.ui.OfferwallOfferList access$0(com.w3i.offerwall.ui.OfferwallLayout) -> a
    void access$1(com.w3i.offerwall.ui.OfferwallLayout) -> b
    void access$2(com.w3i.offerwall.ui.OfferwallLayout) -> c
    android.app.ProgressDialog access$3(com.w3i.offerwall.ui.OfferwallLayout) -> d
    void access$4$474e04be(com.w3i.offerwall.ui.OfferwallLayout) -> e
    com.w3i.offerwall.ui.SortingBar access$5(com.w3i.offerwall.ui.OfferwallLayout) -> f
com.w3i.offerwall.ui.OfferwallLayout$1 -> com.w3i.offerwall.ui.ak:
    com.w3i.offerwall.ui.OfferwallLayout this$0 -> a
    void onSortSelectionChange$13462e() -> a
    void onCurrencyChange(int) -> a
com.w3i.offerwall.ui.OfferwallLayout$2 -> com.w3i.offerwall.ui.al:
    com.w3i.offerwall.ui.OfferwallLayout this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.offerwall.ui.OfferwallLayout$3 -> com.w3i.offerwall.ui.am:
    com.w3i.offerwall.ui.OfferwallLayout this$0 -> a
    void onSuccess() -> a
    void onFailure() -> b
com.w3i.offerwall.ui.OfferwallOfferList -> com.w3i.offerwall.ui.an:
    android.graphics.drawable.Drawable separator -> c
    android.widget.LinearLayout layout -> d
    com.w3i.offerwall.ui.DeviceScreenSize screenSize -> e
    com.w3i.offerwall.ui.OfferwallOfferList$LoadMore loadMore -> f
    android.app.ProgressDialog progressDialog -> g
    int COLOR_LAYOUT -> h
    int ID_SEPARATOR -> a
    int ID_ROW -> b
    com.w3i.offerwall.ui.ScreenDependendSize rowHeight -> i
    com.w3i.offerwall.ui.ScreenDependendSize loadMoreHeight -> j
    com.w3i.offerwall.ui.ScreenDependendSize loadMoreWidth -> k
    void addRow(int,boolean) -> a
    void addLoadMore(android.view.View$OnClickListener) -> a
    void release() -> a
    void clear() -> b
    void showProgressDialog() -> c
    void dismissProgressDialog() -> d
    com.w3i.offerwall.ui.DeviceScreenSize access$0(com.w3i.offerwall.ui.OfferwallOfferList) -> a
    android.graphics.drawable.Drawable access$1(com.w3i.offerwall.ui.OfferwallOfferList) -> b
    com.w3i.offerwall.ui.ScreenDependendSize access$2(com.w3i.offerwall.ui.OfferwallOfferList) -> c
    com.w3i.offerwall.ui.ScreenDependendSize access$3(com.w3i.offerwall.ui.OfferwallOfferList) -> d
com.w3i.offerwall.ui.OfferwallOfferList$1 -> com.w3i.offerwall.ui.ao:
    com.w3i.offerwall.ui.OfferwallOfferList this$0 -> a
    void onClick(android.view.View) -> onClick
    com.w3i.offerwall.ui.OfferwallOfferList access$0(com.w3i.offerwall.ui.OfferwallOfferList$1) -> a
com.w3i.offerwall.ui.OfferwallOfferList$1$1 -> com.w3i.offerwall.ui.ap:
    com.w3i.offerwall.ui.OfferwallOfferList$1 this$1 -> a
    void onTaskCompleted(java.lang.String) -> a
com.w3i.offerwall.ui.OfferwallOfferList$LoadMore -> com.w3i.offerwall.ui.aq:
    android.widget.ImageView row -> b
    android.widget.ImageView sep -> c
    com.w3i.offerwall.ui.OfferwallOfferList this$0 -> a
    void release() -> a
com.w3i.offerwall.ui.OfferwallOfferList$OfferRow -> com.w3i.offerwall.ui.ar:
    com.w3i.offerwall.ui.OfferwallRow row -> b
    android.widget.ImageView sep -> c
    com.w3i.offerwall.ui.OfferwallOfferList this$0 -> a
    void setData(com.w3i.offerwall.business.OfferBasic) -> a
    void release() -> a
    android.widget.ImageView access$0(com.w3i.offerwall.ui.OfferwallOfferList$OfferRow) -> a
com.w3i.offerwall.ui.OfferwallRow -> com.w3i.offerwall.ui.as:
    com.w3i.offerwall.ui.OfferwallRow$RewardLayout rewardBox -> d
    com.w3i.offerwall.custom.views.CustomImageView icon -> e
    com.w3i.offerwall.ui.OfferwallRow$OfferDescriptionLayout offerDesctiptionLayout -> f
    int CURRENCY_AWARDER_TEXT_SIZE -> g
    int OFFER_COST_TEXT_SIZE -> h
    int OFFER_TITLE_COLOR -> a
    int OFFER_DESCRIPTION_COLOR -> b
    java.lang.String PRICE_FREE -> c
    java.lang.String REWARD_TOP_BG -> i
    java.lang.String REWARD_TOP_BG_SMALL -> j
    java.lang.String REWARD_TOP_BG_NORMAL -> k
    java.lang.String REWARD_BOTTOM_BG -> l
    java.lang.String REWARD_BOTTOM_BG_SMALL -> m
    java.lang.String REWARD_BOTTOM_BG_NORMAL -> n
    com.w3i.offerwall.ui.ScreenDependendSize rewardRightPadding -> o
    com.w3i.offerwall.ui.ScreenDependendSize rewardBottomHeight -> p
    com.w3i.offerwall.ui.ScreenDependendSize rowPaddingHorizontal -> q
    com.w3i.offerwall.ui.ScreenDependendSize rowPaddingVertical -> r
    com.w3i.offerwall.ui.ScreenDependendSize iconSize -> s
    com.w3i.offerwall.ui.ScreenDependendSize rewardBoxWidth -> t
    com.w3i.offerwall.ui.ScreenDependendSize rewardBoxHeight -> u
    int[] $SWITCH_TABLE$com$w3i$offerwall$ui$DeviceScreenSize$SCREEN_SIZE -> v
    void settingListData(com.w3i.offerwall.business.OfferBasic) -> a
    void release() -> a
    int access$0(com.w3i.offerwall.ui.OfferwallRow) -> a
    java.lang.String access$1(com.w3i.offerwall.ui.OfferwallRow) -> b
    com.w3i.offerwall.ui.ScreenDependendSize access$2(com.w3i.offerwall.ui.OfferwallRow) -> c
    int access$3(com.w3i.offerwall.ui.OfferwallRow) -> d
    java.lang.String access$4(com.w3i.offerwall.ui.OfferwallRow) -> e
    int[] $SWITCH_TABLE$com$w3i$offerwall$ui$DeviceScreenSize$SCREEN_SIZE() -> b
com.w3i.offerwall.ui.OfferwallRow$OfferDescriptionLayout -> com.w3i.offerwall.ui.at:
    com.w3i.offerwall.custom.views.ScrollingTextView offerTitle -> b
    android.widget.TextView offerDescription -> c
    com.w3i.offerwall.ui.OfferwallRow this$0 -> a
    void release() -> a
    android.widget.TextView access$1(com.w3i.offerwall.ui.OfferwallRow$OfferDescriptionLayout) -> a
    com.w3i.offerwall.custom.views.ScrollingTextView access$2(com.w3i.offerwall.ui.OfferwallRow$OfferDescriptionLayout) -> b
com.w3i.offerwall.ui.OfferwallRow$RewardLayout -> com.w3i.offerwall.ui.au:
    com.w3i.offerwall.custom.views.ScrollingTextView reward -> b
    android.widget.TextView offerCost -> c
    com.w3i.offerwall.ui.OfferwallRow this$0 -> a
    android.widget.TextView access$0(com.w3i.offerwall.ui.OfferwallRow$RewardLayout) -> a
    com.w3i.offerwall.custom.views.ScrollingTextView access$1(com.w3i.offerwall.ui.OfferwallRow$RewardLayout) -> b
    void access$2(com.w3i.offerwall.ui.OfferwallRow$RewardLayout) -> c
com.w3i.offerwall.ui.OfferwallTopBar -> com.w3i.offerwall.ui.av:
    com.w3i.offerwall.custom.views.ScrollingTextView title -> e
    android.widget.ImageView closeButton -> f
    android.widget.Button rewards -> g
    android.widget.Button history -> h
    android.graphics.drawable.Drawable buttonNormalBackground -> i
    android.graphics.drawable.Drawable buttonPushedBackground -> j
    android.graphics.drawable.Drawable buttonCloseBackground -> k
    int ID_CLOSE -> a
    int ID_TITLE -> b
    int ID_REWARDS -> c
    int ID_HISTORY -> d
    com.w3i.offerwall.ui.ScreenDependendSize closeSize -> l
    com.w3i.offerwall.ui.ScreenDependendSize buttonWidth -> m
    com.w3i.offerwall.ui.ScreenDependendSize titleHorizontalMargins -> n
    int inactiveColor -> o
    int activeColor -> p
    void release() -> a
    void hideButton() -> b
    void setHistoryListener(android.view.View$OnClickListener) -> a
    void setRewardsListener(android.view.View$OnClickListener) -> b
    void setCloseListener(android.view.View$OnClickListener) -> c
    void setRewardsSelected() -> c
    void setHistorySelected() -> d
com.w3i.offerwall.ui.ScreenDependendSize -> com.w3i.offerwall.ui.aw:
    int SMALL -> a
    int NORMAL -> b
    int LARGE -> c
    int XLARGE -> d
    int size -> e
    int[] $SWITCH_TABLE$com$w3i$offerwall$ui$DeviceScreenSize$SCREEN_SIZE -> f
    void setScreensizes(com.w3i.offerwall.ui.DeviceScreenSize,com.w3i.offerwall.ui.ScreenDependendSize[]) -> a
    int[] $SWITCH_TABLE$com$w3i$offerwall$ui$DeviceScreenSize$SCREEN_SIZE() -> a
com.w3i.offerwall.ui.SortByListener -> com.w3i.offerwall.ui.ax:
    void onCurrencyChange(int) -> a
    void onSortSelectionChange$13462e() -> a
com.w3i.offerwall.ui.SortingBar -> com.w3i.offerwall.ui.ay:
    com.w3i.offerwall.ui.SortingBar$CustomCurrencySpinnerAdapter currencyAdapter -> a
    android.widget.Spinner currencySelectSpinner -> b
    android.widget.Spinner sortByTypeSpinner -> c
    com.w3i.offerwall.ui.SortByListener sortListener -> d
    int spinnerlock -> e
    android.widget.LinearLayout currencyLayout -> f
    android.widget.LinearLayout mainLayout -> g
    android.widget.LinearLayout sortByLayout -> h
    android.widget.TextView currencyLabel -> i
    android.widget.TextView sortByLabel -> j
    com.w3i.offerwall.ui.SortingBar$CustomSortBySpinnerAdapter sortByTypeSpinnerAdapter -> k
    void notifyCurrenciesChanged() -> a
    void release() -> b
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    com.w3i.offerwall.enums.SortOrder getSelectedSortOrder() -> c
    com.w3i.offerwall.ui.SortByListener access$0(com.w3i.offerwall.ui.SortingBar) -> a
    int access$1(com.w3i.offerwall.ui.SortingBar) -> b
    void access$2(com.w3i.offerwall.ui.SortingBar,int) -> a
com.w3i.offerwall.ui.SortingBar$1 -> com.w3i.offerwall.ui.az:
    com.w3i.offerwall.ui.SortingBar this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.w3i.offerwall.ui.SortingBar$2 -> com.w3i.offerwall.ui.ba:
    com.w3i.offerwall.ui.SortingBar this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.w3i.offerwall.ui.SortingBar$CustomCurrencySpinnerAdapter -> com.w3i.offerwall.ui.bb:
    java.util.List items -> b
    android.content.Context context -> c
    com.w3i.offerwall.ui.SortingBar this$0 -> a
    void release() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    java.util.List access$0(com.w3i.offerwall.ui.SortingBar$CustomCurrencySpinnerAdapter) -> a
    void access$1(com.w3i.offerwall.ui.SortingBar$CustomCurrencySpinnerAdapter,java.util.List) -> a
com.w3i.offerwall.ui.SortingBar$CustomSortBySpinnerAdapter -> com.w3i.offerwall.ui.bc:
    com.w3i.offerwall.enums.SortOrder[] items -> b
    android.content.Context context -> c
    com.w3i.offerwall.ui.SortingBar this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    void release() -> a
com.w3i.offerwall.ui.ThemeManager -> com.w3i.offerwall.ui.bd:
    com.w3i.offerwall.ui.ThemeManager INSTANCE -> a
    java.util.Map colorSettings -> b
    java.lang.String backgroundPortraitImage -> c
    java.lang.String backgroundLandscapeImage -> d
    java.lang.String offerBackgroundImage -> e
    java.lang.String buttonNormal -> f
    java.lang.String buttonPressed -> g
    java.lang.String closeButton -> h
    java.lang.String topBarPortraitLowResolution -> i
    java.lang.String topBarPortraitHighResolution -> j
    java.lang.String topBarLandscapeLowResolution -> k
    java.lang.String topBarLandscapeHighResolution -> l
    com.w3i.offerwall.ui.ThemeManager getInstance() -> a
    int getColor(int) -> a
    void setColor(int,int) -> a
    int parseColor$505cff29(java.lang.String) -> a
    java.lang.String getButtonNormal() -> b
    java.lang.String getButtonPressed() -> c
    java.lang.String getCloseButton() -> d
    java.lang.String getTopBarLandscapeHighResolution() -> e
com.w3i.offerwall.util.Unbinder -> com.w3i.offerwall.g.a:
    void unbindReferences(android.view.ViewGroup) -> a
    void unbindViewGroupReferences(android.view.ViewGroup) -> b
    void unbindViewReferences(android.view.View) -> a
com.w3i.torch.AABoxCollisionVolume -> com.w3i.torch.a:
    com.w3i.torch.Vector2 mWidthHeight -> c
    com.w3i.torch.Vector2 mBottomLeft -> d
    float getMaxX() -> a
    float getMinX() -> b
    float getMaxY() -> c
    float getMinY() -> d
    boolean intersects(com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo,com.w3i.torch.CollisionVolume,com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo) -> a
    boolean boxIntersect(float,float,float,float,float,float,float,float) -> a
com.w3i.torch.AdultsDifficultyConstants -> com.w3i.torch.b:
    float getFuelAirRefillSpeed() -> a
    float getFuelGroundRefillSpeed() -> b
    int getMaxPlayerLife() -> c
    int getCoinsPerPowerup() -> d
    float getGlowDuration() -> e
    int getDDAStage1Attempts() -> f
    int getDDAStage2Attempts() -> g
    int getDDAStage2LifeBoost() -> h
    float getDDAStage1FuelAirRefillSpeed() -> i
    float getDDAStage2FuelAirRefillSpeed() -> j
com.w3i.torch.AllocationGuard -> com.w3i.torch.c:
    boolean sGuardActive -> a
com.w3i.torch.AnimationComponent -> com.w3i.torch.d:
    com.w3i.torch.SpriteComponent mSprite -> d
    com.w3i.torch.SpriteComponent mJetSprite -> e
    com.w3i.torch.SpriteComponent mSparksSprite -> f
    com.w3i.torch.PlayerComponent mPlayer -> g
    float mLastFlickerTime -> h
    boolean mFlickerOn -> i
    float mFlickerTimeRemaining -> k
    com.w3i.torch.GameObject$ActionType mPreviousAction -> l
    float mLastRocketsOnTime -> m
    boolean mExplodingDeath -> n
    com.w3i.torch.ChangeComponentsComponent mDamageSwap -> o
    com.w3i.torch.SoundSystem$Sound mLandThump -> p
    com.w3i.torch.SoundSystem$Sound mRocketSound -> q
    com.w3i.torch.SoundSystem$Sound mExplosionSound -> r
    float mLandThumpDelay -> s
    int mRocketSoundStream -> t
    boolean mRocketSoundPaused -> u
    int mLastRubyCount -> v
    com.w3i.torch.SoundSystem$Sound mRubySound1 -> w
    com.w3i.torch.SoundSystem$Sound mRubySound2 -> x
    com.w3i.torch.SoundSystem$Sound mRubySound3 -> y
    com.w3i.torch.InventoryComponent mInventory -> z
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setSprite(com.w3i.torch.SpriteComponent) -> a
    void setJetSprite(com.w3i.torch.SpriteComponent) -> b
    void setSparksSprite(com.w3i.torch.SpriteComponent) -> c
    void setPlayer(com.w3i.torch.PlayerComponent) -> a
    void setDamageSwap(com.w3i.torch.ChangeComponentsComponent) -> a
    void setLandThump(com.w3i.torch.SoundSystem$Sound) -> a
    void setRocketSound(com.w3i.torch.SoundSystem$Sound) -> b
    void setRubySounds(com.w3i.torch.SoundSystem$Sound,com.w3i.torch.SoundSystem$Sound,com.w3i.torch.SoundSystem$Sound) -> a
    void setInventory(com.w3i.torch.InventoryComponent) -> a
    void setExplosionSound(com.w3i.torch.SoundSystem$Sound) -> c
com.w3i.torch.AnimationComponent$PlayerAnimations -> com.w3i.torch.e:
    com.w3i.torch.AnimationComponent$PlayerAnimations IDLE -> a
    com.w3i.torch.AnimationComponent$PlayerAnimations MOVE -> b
    com.w3i.torch.AnimationComponent$PlayerAnimations MOVE_FAST -> c
    com.w3i.torch.AnimationComponent$PlayerAnimations BOOST_UP -> d
    com.w3i.torch.AnimationComponent$PlayerAnimations BOOST_MOVE -> e
    com.w3i.torch.AnimationComponent$PlayerAnimations BOOST_MOVE_FAST -> f
    com.w3i.torch.AnimationComponent$PlayerAnimations STOMP -> g
    com.w3i.torch.AnimationComponent$PlayerAnimations HIT_REACT -> h
    com.w3i.torch.AnimationComponent$PlayerAnimations DEATH -> i
    com.w3i.torch.AnimationComponent$PlayerAnimations FROZEN -> j
    com.w3i.torch.AnimationComponent$PlayerAnimations[] ENUM$VALUES -> k
    com.w3i.torch.AnimationComponent$PlayerAnimations[] values() -> values
    com.w3i.torch.AnimationComponent$PlayerAnimations valueOf(java.lang.String) -> valueOf
com.w3i.torch.AnimationFrame -> com.w3i.torch.f:
    com.w3i.torch.Texture texture -> b
    float holdTime -> c
    com.w3i.torch.FixedSizeArray attackVolumes -> d
    com.w3i.torch.FixedSizeArray vulnerabilityVolumes -> e
com.w3i.torch.AttackAtDistanceComponent -> com.w3i.torch.g:
    float mAttackDistance -> d
    float mAttackDelay -> e
    float mAttackLength -> f
    float mAttackStartTime -> g
    boolean mRequireFacing -> h
    com.w3i.torch.Vector2 mDistance -> i
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setupAttack$4097ebf7() -> b
com.w3i.torch.BabyDifficultyConstants -> com.w3i.torch.h:
    float getFuelAirRefillSpeed() -> a
    float getFuelGroundRefillSpeed() -> b
    int getMaxPlayerLife() -> c
    int getCoinsPerPowerup() -> d
    float getGlowDuration() -> e
    int getDDAStage1Attempts() -> f
    int getDDAStage2Attempts() -> g
    int getDDAStage2LifeBoost() -> h
    float getDDAStage1FuelAirRefillSpeed() -> i
    float getDDAStage2FuelAirRefillSpeed() -> j
com.w3i.torch.BackgroundCollisionComponent -> com.w3i.torch.i:
    com.w3i.torch.Vector2 mPreviousPosition -> d
    int mWidth -> e
    int mHeight -> f
    int mHorizontalOffset -> g
    int mVerticalOffset -> h
    com.w3i.torch.Vector2 mCurrentPosition -> i
    com.w3i.torch.Vector2 mPreviousCenter -> k
    com.w3i.torch.Vector2 mDelta -> l
    com.w3i.torch.Vector2 mFilterDirection -> m
    com.w3i.torch.Vector2 mHorizontalHitPoint -> n
    com.w3i.torch.Vector2 mHorizontalHitNormal -> o
    com.w3i.torch.Vector2 mVerticalHitPoint -> p
    com.w3i.torch.Vector2 mVerticalHitNormal -> q
    com.w3i.torch.Vector2 mRayStart -> r
    com.w3i.torch.Vector2 mRayEnd -> s
    com.w3i.torch.Vector2 mTestPointStart -> t
    com.w3i.torch.Vector2 mTestPointEnd -> u
    com.w3i.torch.Vector2 mMergedNormal -> v
    void reset() -> a
    void setSize(int,int) -> a
    void setOffset(int,int) -> b
    void update(float,com.w3i.torch.BaseObject) -> a
    boolean sweepHorizontal(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,int,int,float,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.GameObject) -> a
    boolean sweepVertical(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,int,int,float,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.GameObject) -> b
com.w3i.torch.BaseObject -> com.w3i.torch.j:
    com.w3i.torch.ObjectRegistry sSystemRegistry -> b
    void update(float,com.w3i.torch.BaseObject) -> a
    com.w3i.torch.ObjectRegistry getSystemRegistry() -> c
    void reset() -> a
com.w3i.torch.BufferLibrary -> com.w3i.torch.k:
    com.w3i.torch.FixedSizeArray mGridList -> c
    void reset() -> a
    void add(com.w3i.torch.Grid) -> a
    void removeAll() -> b
    void generateHardwareBuffers(javax.microedition.khronos.opengles.GL10) -> a
    void releaseHardwareBuffers(javax.microedition.khronos.opengles.GL10) -> b
    void invalidateHardwareBuffers() -> d
com.w3i.torch.ButtonAnimationComponent -> com.w3i.torch.l:
    com.w3i.torch.ChannelSystem$Channel mChannel -> d
    com.w3i.torch.SpriteComponent mSprite -> e
    com.w3i.torch.ChannelSystem$ChannelFloatValue mLastPressedTime -> f
    com.w3i.torch.SoundSystem$Sound mDepressSound -> g
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setSprite(com.w3i.torch.SpriteComponent) -> a
    void setChannel(com.w3i.torch.ChannelSystem$Channel) -> a
    void setDepressSound(com.w3i.torch.SoundSystem$Sound) -> a
com.w3i.torch.CameraBiasComponent -> com.w3i.torch.m:
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.CameraSystem -> com.w3i.torch.n:
    com.w3i.torch.GameObject mTarget -> c
    float mShakeTime -> d
    float mShakeMagnitude -> e
    float mShakeOffsetY -> f
    com.w3i.torch.Vector2 mCurrentCameraPosition -> g
    com.w3i.torch.Vector2 mFocalPosition -> h
    com.w3i.torch.Vector2 mPreInterpolateCameraPosition -> i
    com.w3i.torch.Vector2 mTargetPosition -> j
    com.w3i.torch.Vector2 mBias -> k
    float mTargetChangedTime -> l
    int SHAKE_FREQUENCY -> m
    float BIAS_SPEED -> n
    void reset() -> a
    void setTarget(com.w3i.torch.GameObject) -> a
    com.w3i.torch.GameObject getTarget() -> b
    void shake(float,float) -> a
    boolean shaking() -> d
    void update(float,com.w3i.torch.BaseObject) -> a
    float getFocusPositionX() -> e
    float getFocusPositionY() -> f
    boolean pointVisible(com.w3i.torch.Vector2,float) -> a
    void addCameraBias(com.w3i.torch.Vector2) -> a
com.w3i.torch.ChangeComponentsComponent -> com.w3i.torch.o:
    com.w3i.torch.FixedSizeArray mComponentsToInsert -> d
    com.w3i.torch.FixedSizeArray mComponentsToRemove -> e
    boolean mPingPong -> f
    boolean mActivated -> g
    boolean mCurrentlySwapped -> h
    com.w3i.torch.GameObject$ActionType mSwapOnAction -> i
    com.w3i.torch.GameObject$ActionType mLastAction -> k
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void addSwapInComponent(com.w3i.torch.GameComponent) -> a
    void addSwapOutComponent(com.w3i.torch.GameComponent) -> b
    void setPingPongBehavior$1385ff() -> b
    void setSwapAction(com.w3i.torch.GameObject$ActionType) -> a
    void activate(com.w3i.torch.GameObject) -> a
    boolean getCurrentlySwapped() -> d
com.w3i.torch.ChannelSystem -> com.w3i.torch.p:
    com.w3i.torch.ChannelSystem$ChannelComparator sChannelComparator -> d
    com.w3i.torch.FixedSizeArray mChannels -> e
    com.w3i.torch.ChannelSystem$Channel mSearchDummy -> f
    int mRegisteredChannelCount -> g
    boolean $assertionsDisabled -> c
    void reset() -> a
    com.w3i.torch.ChannelSystem$Channel registerChannel(java.lang.String) -> a
com.w3i.torch.ChannelSystem$Channel -> com.w3i.torch.q:
    java.lang.String name -> a
    java.lang.Object value -> b
    com.w3i.torch.ChannelSystem this$0 -> c
com.w3i.torch.ChannelSystem$ChannelBooleanValue -> com.w3i.torch.r:
    boolean value -> a
com.w3i.torch.ChannelSystem$ChannelComparator -> com.w3i.torch.s:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.w3i.torch.ChannelSystem$ChannelFloatValue -> com.w3i.torch.t:
    float value -> a
com.w3i.torch.CollisionSystem -> com.w3i.torch.u:
    com.w3i.torch.TiledWorld mWorld -> c
    com.w3i.torch.CollisionSystem$CollisionTile[] mCollisionTiles -> d
    com.w3i.torch.CollisionSystem$LineSegmentPool mSegmentPool -> e
    int mTileWidth -> f
    int mTileHeight -> g
    com.w3i.torch.CollisionSystem$TileTestVisitor mTileSegmentTester -> h
    com.w3i.torch.FixedSizeArray mTemporarySegments -> i
    com.w3i.torch.FixedSizeArray mPendingTemporarySegments -> j
    byte[] mWorkspaceBytes -> k
    void reset() -> a
    void initialize(com.w3i.torch.TiledWorld,int,int) -> a
    boolean castRay(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.GameObject) -> a
    void addTemporarySurface(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.GameObject) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    int worldToTileColumn(float,int) -> a
    int worldToTileRow(float,int) -> b
    boolean testSegmentAgainstList(com.w3i.torch.FixedSizeArray,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.GameObject) -> a
    boolean loadCollisionTiles(java.io.InputStream) -> a
com.w3i.torch.CollisionSystem$CollisionTile -> com.w3i.torch.v:
    com.w3i.torch.FixedSizeArray segments -> b
    com.w3i.torch.CollisionSystem this$0 -> c
com.w3i.torch.CollisionSystem$LineSegment -> com.w3i.torch.w:
    com.w3i.torch.Vector2 mStartPoint -> e
    com.w3i.torch.Vector2 mEndPoint -> f
    com.w3i.torch.Vector2 mNormal -> b
    com.w3i.torch.GameObject owner -> c
    com.w3i.torch.CollisionSystem this$0 -> d
    void set(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2) -> a
    boolean calculateIntersection(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2) -> b
    com.w3i.torch.Vector2 access$0(com.w3i.torch.CollisionSystem$LineSegment) -> a
    com.w3i.torch.Vector2 access$1(com.w3i.torch.CollisionSystem$LineSegment) -> b
com.w3i.torch.CollisionSystem$LineSegmentPool -> com.w3i.torch.x:
    com.w3i.torch.CollisionSystem this$0 -> c
    void reset() -> a
    void fill() -> b
    void release(java.lang.Object) -> a
com.w3i.torch.CollisionSystem$TileTestVisitor -> com.w3i.torch.y:
    com.w3i.torch.Vector2 mDelta -> d
    com.w3i.torch.Vector2 mTileSpaceStart -> e
    com.w3i.torch.Vector2 mTileSpaceEnd -> f
    com.w3i.torch.Vector2 mTileSpaceOffset -> g
    int mTileHeight -> h
    int mTileWidth -> i
    com.w3i.torch.CollisionSystem this$0 -> b
    void setup(com.w3i.torch.Vector2,int,int) -> a
    boolean visit(com.w3i.torch.CollisionSystem$CollisionTile,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,int,int) -> a
com.w3i.torch.CollisionSystem$TileVisitor -> com.w3i.torch.z:
    com.w3i.torch.CollisionSystem this$0 -> c
    boolean visit(com.w3i.torch.CollisionSystem$CollisionTile,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2,int,int) -> a
com.w3i.torch.CollisionVolume -> com.w3i.torch.aa:
    int mHitType -> b
    void setHitType$13462e() -> e
    boolean intersects(com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo,com.w3i.torch.CollisionVolume,com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo) -> a
    float getMinXPosition(com.w3i.torch.CollisionVolume$FlipInfo) -> a
    float getMaxXPosition(com.w3i.torch.CollisionVolume$FlipInfo) -> b
    float getMinYPosition(com.w3i.torch.CollisionVolume$FlipInfo) -> c
    float getMaxYPosition(com.w3i.torch.CollisionVolume$FlipInfo) -> d
    float getMinX() -> b
    float getMaxX() -> a
    float getMinY() -> d
    float getMaxY() -> c
com.w3i.torch.CollisionVolume$FlipInfo -> com.w3i.torch.ab:
    boolean flipX -> a
    boolean flipY -> b
    float parentWidth -> c
    float parentHeight -> d
com.w3i.torch.ContextParameters -> com.w3i.torch.ac:
    int viewWidth -> c
    int viewHeight -> d
    android.content.Context context -> e
    int gameWidth -> f
    int gameHeight -> g
    float viewScaleX -> h
    float viewScaleY -> i
    boolean supportsDrawTexture -> j
    boolean supportsVBOs -> k
    int difficulty -> l
    void reset() -> a
com.w3i.torch.ConversationUtils -> com.w3i.torch.ad:
    java.util.ArrayList loadDialog(int,android.content.Context) -> a
com.w3i.torch.ConversationUtils$Conversation -> com.w3i.torch.ae:
    java.util.ArrayList pages -> a
    boolean splittingComplete -> b
com.w3i.torch.ConversationUtils$ConversationPage -> com.w3i.torch.af:
    int imageResource -> a
    java.lang.CharSequence text -> b
    java.lang.String title -> c
com.w3i.torch.CrusherAndouComponent -> com.w3i.torch.ag:
    com.w3i.torch.ChangeComponentsComponent mSwap -> d
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setSwap(com.w3i.torch.ChangeComponentsComponent) -> a
com.w3i.torch.CustomToastSystem -> com.w3i.torch.ah:
    android.view.View mView -> c
    android.widget.TextView mText -> d
    android.widget.Toast mToast -> e
    void reset() -> a
    void toast(java.lang.String,int) -> a
com.w3i.torch.DebugLog -> com.w3i.torch.ai:
    boolean mLoggingEnabled -> a
    void setDebugLogging(boolean) -> a
    int v(java.lang.String,java.lang.String) -> a
    int d(java.lang.String,java.lang.String) -> b
    int i(java.lang.String,java.lang.String) -> c
    int w(java.lang.String,java.lang.String) -> d
    int e(java.lang.String,java.lang.String) -> e
com.w3i.torch.DebugSystem -> com.w3i.torch.aj:
    com.w3i.torch.Texture mRedBoxTexture -> c
    com.w3i.torch.Texture mBlueBoxTexture -> d
    com.w3i.torch.Texture mOutlineBoxTexture -> e
    com.w3i.torch.Texture mRedCircleTexture -> f
    com.w3i.torch.Texture mBlueCircleTexture -> g
    com.w3i.torch.Texture mOutlineCircleTexture -> h
    com.w3i.torch.Vector2 mWorkVector -> i
    void reset() -> a
    void drawShape(float,float,float,float,int,int) -> a
com.w3i.torch.DifficultyConstants -> com.w3i.torch.ak:
    float getFuelAirRefillSpeed() -> a
    float getFuelGroundRefillSpeed() -> b
    int getMaxPlayerLife() -> c
    int getCoinsPerPowerup() -> d
    float getGlowDuration() -> e
    int getDDAStage1Attempts() -> f
    int getDDAStage2Attempts() -> g
    int getDDAStage2LifeBoost() -> h
    float getDDAStage1FuelAirRefillSpeed() -> i
    float getDDAStage2FuelAirRefillSpeed() -> j
com.w3i.torch.DoorAnimationComponent -> com.w3i.torch.al:
    com.w3i.torch.SpriteComponent mSprite -> d
    int mState -> e
    com.w3i.torch.ChannelSystem$Channel mChannel -> f
    com.w3i.torch.SolidSurfaceComponent mSolidSurface -> g
    float mStayOpenTime -> h
    com.w3i.torch.SoundSystem$Sound mCloseSound -> i
    com.w3i.torch.SoundSystem$Sound mOpenSound -> k
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setSprite(com.w3i.torch.SpriteComponent) -> a
    void setChannel(com.w3i.torch.ChannelSystem$Channel) -> a
    void setSolidSurface(com.w3i.torch.SolidSurfaceComponent) -> a
    void setSounds(com.w3i.torch.SoundSystem$Sound,com.w3i.torch.SoundSystem$Sound) -> a
com.w3i.torch.DrawableBitmap -> com.w3i.torch.am:
    com.w3i.torch.Texture mTexture -> c
    int mWidth -> d
    int mHeight -> e
    int[] mCrop -> f
    int mViewWidth -> g
    int mViewHeight -> h
    float mOpacity -> i
    boolean $assertionsDisabled -> b
    void reset() -> a
    void setViewSize(int,int) -> a
    void setOpacity(float) -> a
    void beginDrawing(javax.microedition.khronos.opengles.GL10,float,float) -> a
    void draw(float,float,float,float) -> a
    void endDrawing(javax.microedition.khronos.opengles.GL10) -> a
    void resize(int,int) -> b
    int getWidth() -> b
    void setWidth(int) -> a
    int getHeight() -> c
    void setHeight(int) -> b
    void setCrop(int,int,int,int) -> a
    int[] getCrop() -> d
    void setTexture(com.w3i.torch.Texture) -> a
    com.w3i.torch.Texture getTexture() -> e
    boolean visibleAtPosition(com.w3i.torch.Vector2) -> a
    void setFlip(boolean,boolean) -> a
com.w3i.torch.DrawableFactory -> com.w3i.torch.an:
    com.w3i.torch.DrawableFactory$DrawableBitmapPool mBitmapPool -> c
    com.w3i.torch.DrawableFactory$ScrollableBitmapPool mScrollableBitmapPool -> d
    com.w3i.torch.DrawableFactory$TiledBackgroundVertexGridPool mTiledBackgroundVertexGridPool -> e
    void reset() -> a
    com.w3i.torch.DrawableBitmap allocateDrawableBitmap() -> b
    com.w3i.torch.TiledBackgroundVertexGrid allocateTiledBackgroundVertexGrid() -> d
    com.w3i.torch.ScrollableBitmap allocateScrollableBitmap() -> e
com.w3i.torch.DrawableFactory$DrawableBitmapPool -> com.w3i.torch.ao:
    com.w3i.torch.DrawableFactory this$0 -> c
    void reset() -> a
    void fill() -> b
    void release(java.lang.Object) -> a
    com.w3i.torch.DrawableBitmap allocate() -> d
    java.lang.Object allocate() -> e
com.w3i.torch.DrawableFactory$ScrollableBitmapPool -> com.w3i.torch.ap:
    com.w3i.torch.DrawableFactory this$0 -> c
    void reset() -> a
    void fill() -> b
    void release(java.lang.Object) -> a
com.w3i.torch.DrawableFactory$TiledBackgroundVertexGridPool -> com.w3i.torch.aq:
    com.w3i.torch.DrawableFactory this$0 -> c
    void reset() -> a
    void fill() -> b
    void release(java.lang.Object) -> a
com.w3i.torch.DrawableObject -> com.w3i.torch.ar:
    float mPriority -> b
    com.w3i.torch.ObjectPool mParentPool -> c
    void draw(float,float,float,float) -> a
    float getPriority() -> f
    void setParentPool(com.w3i.torch.ObjectPool) -> a
    com.w3i.torch.ObjectPool getParentPool() -> g
    com.w3i.torch.Texture getTexture() -> e
    boolean visibleAtPosition(com.w3i.torch.Vector2) -> a
com.w3i.torch.DynamicCollisionComponent -> com.w3i.torch.as:
    com.w3i.torch.FixedSizeArray mAttackVolumes -> d
    com.w3i.torch.FixedSizeArray mVulnerabilityVolumes -> e
    com.w3i.torch.SphereCollisionVolume mBoundingVolume -> f
    com.w3i.torch.HitReactionComponent mHitReactionComponent -> g
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setHitReactionComponent(com.w3i.torch.HitReactionComponent) -> a
    void setCollisionVolumes(com.w3i.torch.FixedSizeArray,com.w3i.torch.FixedSizeArray) -> a
com.w3i.torch.EnemyAnimationComponent -> com.w3i.torch.at:
    com.w3i.torch.SpriteComponent mSprite -> d
    com.w3i.torch.EnemyAnimationComponent$AnimationState mState -> e
    boolean mFacePlayer -> f
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$EnemyAnimationComponent$AnimationState -> g
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void facePlayer(com.w3i.torch.GameObject) -> a
    void setSprite(com.w3i.torch.SpriteComponent) -> a
    void setFacePlayer$1385ff() -> b
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$EnemyAnimationComponent$AnimationState() -> d
com.w3i.torch.EnemyAnimationComponent$AnimationState -> com.w3i.torch.au:
    com.w3i.torch.EnemyAnimationComponent$AnimationState IDLING -> a
    com.w3i.torch.EnemyAnimationComponent$AnimationState MOVING -> b
    com.w3i.torch.EnemyAnimationComponent$AnimationState HIDING -> c
    com.w3i.torch.EnemyAnimationComponent$AnimationState APPEARING -> d
    com.w3i.torch.EnemyAnimationComponent$AnimationState ATTACKING -> e
    com.w3i.torch.EnemyAnimationComponent$AnimationState[] ENUM$VALUES -> f
    com.w3i.torch.EnemyAnimationComponent$AnimationState[] values() -> values
    com.w3i.torch.EnemyAnimationComponent$AnimationState valueOf(java.lang.String) -> valueOf
com.w3i.torch.EnemyAnimationComponent$EnemyAnimations -> com.w3i.torch.av:
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations IDLE -> a
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations MOVE -> b
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations ATTACK -> c
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations HIDDEN -> d
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations APPEAR -> e
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations[] ENUM$VALUES -> f
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations[] values() -> values
    com.w3i.torch.EnemyAnimationComponent$EnemyAnimations valueOf(java.lang.String) -> valueOf
com.w3i.torch.EventRecorder -> com.w3i.torch.aw:
    com.w3i.torch.Vector2 mLastDeathPosition -> c
    int mLastEnding -> d
    int mRobotsDestroyed -> e
    int mPearlsCollected -> f
    int mPearlsTotal -> g
    void reset() -> a
    void setLastDeathPosition(com.w3i.torch.Vector2) -> a
    com.w3i.torch.Vector2 getLastDeathPosition() -> b
    void setLastEnding(int) -> a
    int getLastEnding() -> d
    void incrementEventCounter(int) -> b
    int getRobotsDestroyed() -> e
    int getPearlsCollected() -> f
    int getPearlsTotal() -> g
com.w3i.torch.EventReporter -> com.w3i.torch.ax:
    java.lang.String REPORT_SERVER -> a
    java.lang.Object mLock -> b
    java.util.ArrayList mEvents -> c
    java.util.ArrayList mProcessedEvents -> d
    boolean mDone -> e
    void run() -> run
    void addEvent$7fd2f93d(int,float,float,float,java.lang.String,long) -> a
    void stop() -> a
com.w3i.torch.EventReporter$Event -> com.w3i.torch.ay:
    java.lang.String eventType -> a
    float x -> b
    float y -> c
    float time -> d
    java.lang.String level -> e
    int version -> f
    long session -> g
    com.w3i.torch.EventReporter this$0 -> h
com.w3i.torch.FadeDrawableComponent -> com.w3i.torch.az:
    com.w3i.torch.Texture mTexture -> d
    com.w3i.torch.RenderComponent mRenderComponent -> e
    float mInitialOpacity -> f
    float mTargetOpacity -> g
    float mStartTime -> h
    float mDuration -> i
    int mLoopType -> k
    int mFunction -> l
    float mInitialDelay -> m
    float mInitialDelayTimer -> n
    float mActivateTime -> o
    float mPhaseDuration -> p
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setupFade(float,float,float,int,int,float) -> a
    void setPhaseDuration(float) -> a
    void setTexture(com.w3i.torch.Texture) -> a
    void setRenderComponent(com.w3i.torch.RenderComponent) -> a
    void resetPhase() -> b
com.w3i.torch.FixedAnimationComponent -> com.w3i.torch.ba:
    int mAnimationIndex -> d
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.FixedSizeArray -> com.w3i.torch.bb:
    java.lang.Object[] mContents -> c
    int mCount -> d
    java.util.Comparator mComparator -> e
    boolean mSorted -> f
    com.w3i.torch.Sorter mSorter -> g
    boolean $assertionsDisabled -> b
    void add(java.lang.Object) -> a
    void remove$4cfd3ce3(java.lang.Object) -> b
    void remove(int) -> a
    java.lang.Object removeLast() -> a
    void swapWithLast(int) -> b
    void set(int,java.lang.Object) -> a
    void clear() -> b
    java.lang.Object get(int) -> c
    java.lang.Object[] getArray() -> c
    int find(java.lang.Object,boolean) -> a
    void sort(boolean) -> a
    int getCount() -> d
    int getCapacity() -> e
    void setComparator(java.util.Comparator) -> a
com.w3i.torch.FrameRateWatcherComponent -> com.w3i.torch.bc:
    com.w3i.torch.RenderComponent mRenderComponent -> d
    com.w3i.torch.DrawableObject mDrawable -> e
    float mMaxFrameTime -> f
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setup(com.w3i.torch.RenderComponent,com.w3i.torch.DrawableObject) -> a
com.w3i.torch.GLSurfaceView -> com.w3i.torch.GLSurfaceView:
    com.w3i.torch.GLSurfaceView$GLThreadManager sGLThreadManager -> a
    boolean mSizeChanged -> b
    com.w3i.torch.GLSurfaceView$GLThread mGLThread -> c
    com.w3i.torch.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> d
    com.w3i.torch.GLSurfaceView$EGLContextFactory mEGLContextFactory -> e
    com.w3i.torch.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> f
    com.w3i.torch.GLSurfaceView$GLWrapper mGLWrapper -> g
    int mDebugFlags -> h
    int mEGLContextClientVersion -> i
    void setRenderer(com.w3i.torch.GLSurfaceView$Renderer) -> a
    void setEGLConfigChooser$1385ff() -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> b
    void onResume() -> c
    void flushTextures(com.w3i.torch.TextureLibrary) -> a
    void loadTextures(com.w3i.torch.TextureLibrary) -> b
    void flushBuffers(com.w3i.torch.BufferLibrary) -> a
    void loadBuffers(com.w3i.torch.BufferLibrary) -> b
    void setSafeMode(boolean) -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> e
    int access$0(com.w3i.torch.GLSurfaceView) -> a
    com.w3i.torch.GLSurfaceView$EGLConfigChooser access$1(com.w3i.torch.GLSurfaceView) -> b
    com.w3i.torch.GLSurfaceView$EGLContextFactory access$2(com.w3i.torch.GLSurfaceView) -> c
    com.w3i.torch.GLSurfaceView$EGLWindowSurfaceFactory access$3(com.w3i.torch.GLSurfaceView) -> d
    com.w3i.torch.GLSurfaceView$GLWrapper access$4(com.w3i.torch.GLSurfaceView) -> e
    int access$5(com.w3i.torch.GLSurfaceView) -> f
    com.w3i.torch.GLSurfaceView$GLThreadManager access$6() -> d
    boolean access$7(com.w3i.torch.GLSurfaceView) -> g
    void access$8(com.w3i.torch.GLSurfaceView,boolean) -> a
com.w3i.torch.GLSurfaceView$BaseConfigChooser -> com.w3i.torch.bd:
    int[] mConfigSpec -> a
    com.w3i.torch.GLSurfaceView this$0 -> b
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
com.w3i.torch.GLSurfaceView$ComponentSizeChooser -> com.w3i.torch.be:
    int[] mValue -> j
    int mRedSize -> c
    int mGreenSize -> d
    int mBlueSize -> e
    int mAlphaSize -> f
    int mDepthSize -> g
    int mStencilSize -> h
    com.w3i.torch.GLSurfaceView this$0 -> i
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
com.w3i.torch.GLSurfaceView$DefaultContextFactory -> com.w3i.torch.bf:
    int EGL_CONTEXT_CLIENT_VERSION -> b
    com.w3i.torch.GLSurfaceView this$0 -> a
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.w3i.torch.GLSurfaceView$DefaultWindowSurfaceFactory -> com.w3i.torch.bg:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.w3i.torch.GLSurfaceView$EGLConfigChooser -> com.w3i.torch.bh:
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
com.w3i.torch.GLSurfaceView$EGLContextFactory -> com.w3i.torch.bi:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.w3i.torch.GLSurfaceView$EGLWindowSurfaceFactory -> com.w3i.torch.bj:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.w3i.torch.GLSurfaceView$EglHelper -> com.w3i.torch.bk:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    com.w3i.torch.GLSurfaceView this$0 -> f
    void start() -> a
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> a
    void finish() -> b
    void throwEglException(java.lang.String) -> a
com.w3i.torch.GLSurfaceView$GLThread -> com.w3i.torch.bl:
    boolean mShouldExit -> c
    boolean mExited -> d
    boolean mPaused -> e
    boolean mHasSurface -> f
    boolean mWaitingForSurface -> g
    boolean mHaveEglContext -> h
    boolean mHaveEglSurface -> i
    int mWidth -> j
    int mHeight -> k
    int mRenderMode -> l
    boolean mRequestRender -> m
    boolean mRenderComplete -> n
    java.util.ArrayList mEventQueue -> o
    javax.microedition.khronos.opengles.GL10 mGL -> p
    boolean mHasFocus -> q
    boolean mSafeMode -> r
    com.w3i.torch.GLSurfaceView$Renderer mRenderer -> s
    com.w3i.torch.GLSurfaceView$EglHelper mEglHelper -> t
    com.w3i.torch.GLSurfaceView this$0 -> a
    boolean $assertionsDisabled -> b
    void run() -> run
    void stopEglLocked() -> f
    void guardedRun() -> g
    void surfaceCreated() -> a
    void surfaceDestroyed() -> b
    void onPause() -> c
    void onResume() -> d
    void onWindowResize(int,int) -> a
    void loadTextures(com.w3i.torch.TextureLibrary) -> a
    void flushTextures(com.w3i.torch.TextureLibrary) -> b
    void loadBuffers(com.w3i.torch.BufferLibrary) -> a
    void flushBuffers(com.w3i.torch.BufferLibrary) -> b
    void onWindowFocusChanged(boolean) -> a
    void requestExitAndWait() -> e
    void setSafeMode(boolean) -> b
    void access$0$2a4f44bf(com.w3i.torch.GLSurfaceView$GLThread) -> a
com.w3i.torch.GLSurfaceView$GLThreadManager -> com.w3i.torch.bm:
    boolean mGLESVersionCheckComplete -> a
    int mGLESVersion -> b
    boolean mGLESDriverCheckComplete -> c
    boolean mMultipleGLESContextsAllowed -> d
    com.w3i.torch.GLSurfaceView$GLThread mEglOwner -> e
    void threadExiting(com.w3i.torch.GLSurfaceView$GLThread) -> a
    boolean tryAcquireEglSurfaceLocked(com.w3i.torch.GLSurfaceView$GLThread) -> b
    void releaseEglSurfaceLocked(com.w3i.torch.GLSurfaceView$GLThread) -> c
    void checkGLDriver(javax.microedition.khronos.opengles.GL10) -> a
    void checkGLESVersion() -> a
com.w3i.torch.GLSurfaceView$GLWrapper -> com.w3i.torch.bn:
    javax.microedition.khronos.opengles.GL wrap$40ce139f() -> a
com.w3i.torch.GLSurfaceView$LogWriter -> com.w3i.torch.bo:
    java.lang.StringBuilder mBuilder -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
com.w3i.torch.GLSurfaceView$Renderer -> com.w3i.torch.bp:
    void onSurfaceCreated$4a9c201c(javax.microedition.khronos.opengles.GL10) -> a
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void onSurfaceLost() -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> b
    void loadTextures(javax.microedition.khronos.opengles.GL10,com.w3i.torch.TextureLibrary) -> a
    void flushTextures(javax.microedition.khronos.opengles.GL10,com.w3i.torch.TextureLibrary) -> b
    void loadBuffers(javax.microedition.khronos.opengles.GL10,com.w3i.torch.BufferLibrary) -> a
    void flushBuffers(javax.microedition.khronos.opengles.GL10,com.w3i.torch.BufferLibrary) -> b
com.w3i.torch.GLSurfaceView$SimpleEGLConfigChooser -> com.w3i.torch.bq:
    com.w3i.torch.GLSurfaceView this$0 -> j
com.w3i.torch.Game -> com.w3i.torch.br:
    com.w3i.torch.GameThread mGameThread -> c
    java.lang.Thread mGame -> d
    com.w3i.torch.ObjectManager mGameRoot -> e
    com.w3i.torch.GameRenderer mRenderer -> f
    com.w3i.torch.GLSurfaceView mSurfaceView -> g
    boolean mRunning -> h
    boolean mBootstrapComplete -> i
    com.w3i.torch.LevelTree$Level mPendingLevel -> j
    com.w3i.torch.LevelTree$Level mCurrentLevel -> k
    com.w3i.torch.LevelTree$Level mLastLevel -> l
    boolean mGLDataLoaded -> m
    com.w3i.torch.ContextParameters mContextParameters -> n
    com.w3i.torch.TouchFilter mTouchFilter -> o
    boolean $assertionsDisabled -> b
    void bootstrap$74a42bd0(android.content.Context,int,int,int,int) -> a
    void stopLevel() -> p
    void requestNewLevel() -> a
    void restartLevel() -> b
    void goToLevel(com.w3i.torch.LevelTree$Level) -> b
    void start() -> q
    void stop() -> c
    boolean onTrackballEvent(android.view.MotionEvent) -> a
    boolean onOrientationEvent(float,float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> b
    boolean onKeyDownEvent(int) -> a
    boolean onKeyUpEvent(int) -> b
    com.w3i.torch.GameRenderer getRenderer() -> d
    void onPause() -> e
    void onResume(android.content.Context,boolean) -> a
    void onSurfaceReady() -> f
    void setSurfaceView(com.w3i.torch.GLSurfaceView) -> a
    void onSurfaceLost() -> g
    void onSurfaceCreated() -> h
    void setPendingLevel(com.w3i.torch.LevelTree$Level) -> a
    void setSoundEnabled(boolean) -> a
    void setControlOptions(boolean,boolean,int,int,boolean) -> a
    void setSafeMode(boolean) -> b
    float getGameTime() -> i
    com.w3i.torch.Vector2 getLastDeathPosition() -> j
    void setLastEnding(int) -> c
    int getLastEnding() -> k
    boolean isPaused() -> l
    void setKeyConfig(int,int,int,int) -> a
    int getRobotsDestroyed() -> m
    int getPearlsCollected() -> n
    int getPearlsTotal() -> o
com.w3i.torch.GameComponent -> com.w3i.torch.bs:
    boolean shared -> c
com.w3i.torch.GameComponent$ComponentPhases -> com.w3i.torch.bt:
    com.w3i.torch.GameComponent$ComponentPhases THINK -> a
    com.w3i.torch.GameComponent$ComponentPhases PHYSICS -> b
    com.w3i.torch.GameComponent$ComponentPhases POST_PHYSICS -> c
    com.w3i.torch.GameComponent$ComponentPhases MOVEMENT -> d
    com.w3i.torch.GameComponent$ComponentPhases COLLISION_DETECTION -> e
    com.w3i.torch.GameComponent$ComponentPhases COLLISION_RESPONSE -> f
    com.w3i.torch.GameComponent$ComponentPhases POST_COLLISION -> g
    com.w3i.torch.GameComponent$ComponentPhases ANIMATION -> h
    com.w3i.torch.GameComponent$ComponentPhases PRE_DRAW -> i
    com.w3i.torch.GameComponent$ComponentPhases DRAW -> j
    com.w3i.torch.GameComponent$ComponentPhases FRAME_END -> k
    com.w3i.torch.GameComponent$ComponentPhases[] ENUM$VALUES -> l
    com.w3i.torch.GameComponent$ComponentPhases[] values() -> values
    com.w3i.torch.GameComponent$ComponentPhases valueOf(java.lang.String) -> valueOf
com.w3i.torch.GameComponentPool -> com.w3i.torch.bu:
    java.lang.Class objectClass -> c
    void fill() -> b
com.w3i.torch.GameFlowEvent -> com.w3i.torch.bv:
    int mEventCode -> a
    int mDataIndex -> b
    com.w3i.torch.activities.AndouKun mMainActivity -> c
    void post(int,int,android.content.Context) -> a
    void postImmediate(int,int,android.content.Context) -> b
    void run() -> run
com.w3i.torch.GameObject -> com.w3i.torch.bw:
    com.w3i.torch.Vector2 mPosition -> m
    com.w3i.torch.Vector2 mVelocity -> n
    com.w3i.torch.Vector2 mTargetVelocity -> o
    com.w3i.torch.Vector2 mAcceleration -> p
    com.w3i.torch.Vector2 mImpulse -> q
    com.w3i.torch.Vector2 mBackgroundCollisionNormal -> r
    float mLastTouchedFloorTime -> s
    float mLastTouchedCeilingTime -> t
    float mLastTouchedLeftWallTime -> u
    float mLastTouchedRightWallTime -> v
    boolean positionLocked -> c
    float activationRadius -> d
    boolean destroyOnDeactivation -> e
    int life -> f
    int lastReceivedHitType -> g
    com.w3i.torch.Vector2 facingDirection -> h
    float width -> i
    float height -> j
    com.w3i.torch.GameObject$ActionType mCurrentAction -> w
    com.w3i.torch.GameObject$Team team -> k
    void reset() -> a
    boolean touchingGround() -> a_
    boolean touchingCeiling() -> d
    boolean touchingLeftWall() -> e
    boolean touchingRightWall() -> f
    com.w3i.torch.Vector2 getPosition() -> g
    void setPosition(com.w3i.torch.Vector2) -> a
    float getCenteredPositionX() -> h
    float getCenteredPositionY() -> i
    com.w3i.torch.Vector2 getVelocity() -> j
    void setVelocity(com.w3i.torch.Vector2) -> b
    com.w3i.torch.Vector2 getTargetVelocity() -> k
    void setTargetVelocity(com.w3i.torch.Vector2) -> c
    com.w3i.torch.Vector2 getAcceleration() -> l
    void setAcceleration(com.w3i.torch.Vector2) -> d
    com.w3i.torch.Vector2 getImpulse() -> m
    void setImpulse(com.w3i.torch.Vector2) -> e
    com.w3i.torch.Vector2 getBackgroundCollisionNormal() -> n
    void setBackgroundCollisionNormal(com.w3i.torch.Vector2) -> f
    float getLastTouchedFloorTime() -> o
    void setLastTouchedFloorTime(float) -> a
    void setLastTouchedCeilingTime(float) -> b
    void setLastTouchedLeftWallTime(float) -> c
    void setLastTouchedRightWallTime(float) -> d
    com.w3i.torch.GameObject$ActionType getCurrentAction() -> p
    void setCurrentAction(com.w3i.torch.GameObject$ActionType) -> a
com.w3i.torch.GameObject$ActionType -> com.w3i.torch.bx:
    com.w3i.torch.GameObject$ActionType INVALID -> a
    com.w3i.torch.GameObject$ActionType IDLE -> b
    com.w3i.torch.GameObject$ActionType MOVE -> c
    com.w3i.torch.GameObject$ActionType ATTACK -> d
    com.w3i.torch.GameObject$ActionType HIT_REACT -> e
    com.w3i.torch.GameObject$ActionType DEATH -> f
    com.w3i.torch.GameObject$ActionType HIDE -> g
    com.w3i.torch.GameObject$ActionType FROZEN -> h
    com.w3i.torch.GameObject$ActionType[] ENUM$VALUES -> i
    com.w3i.torch.GameObject$ActionType[] values() -> values
    com.w3i.torch.GameObject$ActionType valueOf(java.lang.String) -> valueOf
com.w3i.torch.GameObject$Team -> com.w3i.torch.by:
    com.w3i.torch.GameObject$Team NONE -> a
    com.w3i.torch.GameObject$Team PLAYER -> b
    com.w3i.torch.GameObject$Team ENEMY -> c
    com.w3i.torch.GameObject$Team[] ENUM$VALUES -> d
    com.w3i.torch.GameObject$Team[] values() -> values
    com.w3i.torch.GameObject$Team valueOf(java.lang.String) -> valueOf
com.w3i.torch.GameObjectCollisionSystem -> com.w3i.torch.bz:
    com.w3i.torch.GameObjectCollisionSystem$CollisionVolumeComparator sCollisionVolumeComparator -> e
    com.w3i.torch.CollisionVolume$FlipInfo sFlip -> f
    com.w3i.torch.CollisionVolume$FlipInfo sOtherFlip -> g
    com.w3i.torch.FixedSizeArray mObjects -> c
    com.w3i.torch.GameObjectCollisionSystem$CollisionVolumeRecordPool mRecordPool -> d
    boolean mDrawDebugBoundingVolume -> h
    boolean mDrawDebugCollisionVolumes -> i
    void reset() -> a
    void registerForCollisions(com.w3i.torch.GameObject,com.w3i.torch.HitReactionComponent,com.w3i.torch.CollisionVolume,com.w3i.torch.FixedSizeArray,com.w3i.torch.FixedSizeArray) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    int testAttackAgainstVulnerability(com.w3i.torch.FixedSizeArray,com.w3i.torch.FixedSizeArray,com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo,com.w3i.torch.CollisionVolume$FlipInfo) -> a
com.w3i.torch.GameObjectCollisionSystem$CollisionVolumeComparator -> com.w3i.torch.ca:
    com.w3i.torch.CollisionVolume$FlipInfo sCompareFlip -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.w3i.torch.GameObjectCollisionSystem$CollisionVolumeRecord -> com.w3i.torch.cb:
    com.w3i.torch.GameObject object -> b
    com.w3i.torch.HitReactionComponent reactionComponent -> c
    com.w3i.torch.CollisionVolume boundingVolume -> d
    com.w3i.torch.FixedSizeArray attackVolumes -> e
    com.w3i.torch.FixedSizeArray vulnerabilityVolumes -> f
    com.w3i.torch.GameObjectCollisionSystem this$0 -> g
com.w3i.torch.GameObjectCollisionSystem$CollisionVolumeRecordPool -> com.w3i.torch.cc:
    com.w3i.torch.GameObjectCollisionSystem this$0 -> c
    void fill() -> b
    void release(java.lang.Object) -> a
com.w3i.torch.GameObjectFactory -> com.w3i.torch.cd:
    com.w3i.torch.GameObjectFactory$ComponentPoolComparator sComponentPoolComparator -> d
    com.w3i.torch.FixedSizeArray mStaticData -> e
    com.w3i.torch.FixedSizeArray mComponentPools -> f
    com.w3i.torch.GameComponentPool mPoolSearchDummy -> g
    com.w3i.torch.GameObjectFactory$GameObjectPool mGameObjectPool -> h
    float mTightActivationRadius -> i
    float mNormalActivationRadius -> j
    float mWideActivationRadius -> k
    float mAlwaysActive -> l
    boolean $assertionsDisabled -> c
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$GameObjectFactory$GameObjectType -> m
    void reset() -> a
    com.w3i.torch.GameComponentPool getComponentPool(java.lang.Class) -> a
    com.w3i.torch.GameComponent allocateComponent(java.lang.Class) -> b
    void releaseComponent(com.w3i.torch.GameComponent) -> a
    boolean componentAvailable(java.lang.Class,int) -> a
    void preloadEffects() -> b
    void destroy(com.w3i.torch.GameObject) -> a
    com.w3i.torch.GameObject spawn(com.w3i.torch.GameObjectFactory$GameObjectType,float,float,boolean) -> a
    void spawnFromWorld(com.w3i.torch.TiledWorld,int,int) -> a
    com.w3i.torch.FixedSizeArray getStaticData(com.w3i.torch.GameObjectFactory$GameObjectType) -> a
    void setStaticData(com.w3i.torch.GameObjectFactory$GameObjectType,com.w3i.torch.FixedSizeArray) -> a
    void addStaticData(com.w3i.torch.GameObjectFactory$GameObjectType,com.w3i.torch.GameObject,com.w3i.torch.SpriteComponent) -> a
    void clearStaticData() -> d
    void sanityCheckPools() -> e
    com.w3i.torch.GameObject spawnEnemyBrobot(float,float,boolean) -> b
    com.w3i.torch.GameObject spawnEnemySnailBomb(float,float,boolean) -> c
    com.w3i.torch.GameObject spawnEnemyShadowSlime(float,float,boolean) -> d
    com.w3i.torch.GameObject spawnEnemyMudman(float,float,boolean) -> e
    com.w3i.torch.GameObject spawnEnemySkeleton(float,float,boolean) -> f
    com.w3i.torch.GameObject spawnEnemyKaraguin(float,float,boolean) -> g
    com.w3i.torch.GameObject spawnEnemyPinkNamazu(float,float,boolean) -> h
    com.w3i.torch.GameObject spawnEnemyBat(float,float,boolean) -> i
    com.w3i.torch.GameObject spawnEnemySting(float,float,boolean) -> j
    com.w3i.torch.GameObject spawnEnemyOnion(float,float,boolean) -> k
    com.w3i.torch.GameObject spawnEnemyWanda$46ca91ac(float,float) -> b
    com.w3i.torch.GameObject spawnEnemyKyleDead(float,float) -> c
    com.w3i.torch.GameObject spawnEnemyAndouDead(float,float) -> d
    com.w3i.torch.GameObject spawnEnemyKabocha$46ca91ac(float,float) -> e
    com.w3i.torch.GameObject spawnRokudouTerminal(float,float) -> f
    com.w3i.torch.GameObject spawnKabochaTerminal(float,float) -> g
    com.w3i.torch.GameObject spawnEnemyEvilKabocha$46ca91ac(float,float) -> h
    com.w3i.torch.GameObject spawnEnemyRokudou$46ca91ac(float,float) -> i
    com.w3i.torch.GameObject spawnPlayerGhost$56ad00cb(float,float,float) -> a
    com.w3i.torch.GameObject spawnEnergyBall(float,float,boolean) -> l
    com.w3i.torch.GameObject spawnWandaShot(float,float,boolean) -> m
    com.w3i.torch.GameObject spawnCannonBall(float,float,boolean) -> n
    com.w3i.torch.GameObject spawnTurretBullet(float,float,boolean) -> o
    com.w3i.torch.GameObject spawnBrobotBullet(float,float,boolean) -> p
    com.w3i.torch.GameObject spawnObjectDoor(float,float,com.w3i.torch.GameObjectFactory$GameObjectType,boolean) -> a
    com.w3i.torch.GameObject spawnObjectButton(float,float,com.w3i.torch.GameObjectFactory$GameObjectType) -> a
    com.w3i.torch.GameObject spawnObjectCannon(float,float) -> j
    com.w3i.torch.GameObject spawnObjectBrobotSpawner(float,float,boolean) -> q
    com.w3i.torch.GameObject spawnObjectCrusherAndou(float,float) -> k
    com.w3i.torch.GameObject spawnObjectBreakableBlock(float,float) -> l
    com.w3i.torch.GameObject spawnObjectTheSource(float,float) -> m
    com.w3i.torch.GameObject spawnObjectSign(float,float) -> n
    com.w3i.torch.GameObject spawnObjectTurret(float,float,boolean) -> r
    com.w3i.torch.GameObject spawnDust(float,float,boolean) -> a
    com.w3i.torch.GameObject spawnEffectExplosionSmall(float,float) -> o
    com.w3i.torch.GameObject spawnEffectExplosionLarge(float,float) -> p
    com.w3i.torch.GameObject spawnEffectExplosionGiant(float,float) -> a
    com.w3i.torch.GameObject spawnEffectSmokeBig(float,float) -> q
    com.w3i.torch.GameObject spawnEffectSmokeSmall(float,float) -> r
    com.w3i.torch.GameObject spawnEffectCrushFlash(float,float) -> s
    com.w3i.torch.GameObject spawnEffectFlash(float,float) -> t
    com.w3i.torch.GameObject spawnBreakableBlockPiece(float,float) -> u
    com.w3i.torch.GameObject spawnBreakableBlockPieceSpawner(float,float) -> v
    com.w3i.torch.GameObject spawnSmokePoof(float,float) -> w
    com.w3i.torch.GameObject spawnGemEffect(float,float) -> x
    com.w3i.torch.GameObject spawnGemEffectSpawner(float,float) -> y
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$GameObjectFactory$GameObjectType() -> f
com.w3i.torch.GameObjectFactory$1ComponentClass -> com.w3i.torch.ce:
    java.lang.Class type -> a
    int poolSize -> b
    com.w3i.torch.GameObjectFactory this$0 -> c
com.w3i.torch.GameObjectFactory$ComponentPoolComparator -> com.w3i.torch.cf:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.w3i.torch.GameObjectFactory$GameObjectPool -> com.w3i.torch.cg:
    com.w3i.torch.GameObjectFactory this$0 -> c
    void fill() -> b
    void release(java.lang.Object) -> a
com.w3i.torch.GameObjectFactory$GameObjectType -> com.w3i.torch.ch:
    com.w3i.torch.GameObjectFactory$GameObjectType INVALID -> a
    com.w3i.torch.GameObjectFactory$GameObjectType PLAYER -> b
    com.w3i.torch.GameObjectFactory$GameObjectType COIN -> c
    com.w3i.torch.GameObjectFactory$GameObjectType RUBY -> d
    com.w3i.torch.GameObjectFactory$GameObjectType DIARY -> e
    com.w3i.torch.GameObjectFactory$GameObjectType WANDA -> f
    com.w3i.torch.GameObjectFactory$GameObjectType KYLE -> g
    com.w3i.torch.GameObjectFactory$GameObjectType KYLE_DEAD -> h
    com.w3i.torch.GameObjectFactory$GameObjectType ANDOU_DEAD -> i
    com.w3i.torch.GameObjectFactory$GameObjectType KABOCHA -> j
    com.w3i.torch.GameObjectFactory$GameObjectType ROKUDOU_TERMINAL -> k
    com.w3i.torch.GameObjectFactory$GameObjectType KABOCHA_TERMINAL -> l
    com.w3i.torch.GameObjectFactory$GameObjectType EVIL_KABOCHA -> m
    com.w3i.torch.GameObjectFactory$GameObjectType ROKUDOU -> n
    com.w3i.torch.GameObjectFactory$GameObjectType BROBOT -> o
    com.w3i.torch.GameObjectFactory$GameObjectType SNAILBOMB -> p
    com.w3i.torch.GameObjectFactory$GameObjectType SHADOWSLIME -> q
    com.w3i.torch.GameObjectFactory$GameObjectType MUDMAN -> r
    com.w3i.torch.GameObjectFactory$GameObjectType SKELETON -> s
    com.w3i.torch.GameObjectFactory$GameObjectType KARAGUIN -> t
    com.w3i.torch.GameObjectFactory$GameObjectType PINK_NAMAZU -> u
    com.w3i.torch.GameObjectFactory$GameObjectType TURRET -> v
    com.w3i.torch.GameObjectFactory$GameObjectType TURRET_LEFT -> w
    com.w3i.torch.GameObjectFactory$GameObjectType BAT -> x
    com.w3i.torch.GameObjectFactory$GameObjectType STING -> y
    com.w3i.torch.GameObjectFactory$GameObjectType ONION -> z
    com.w3i.torch.GameObjectFactory$GameObjectType DOOR_RED -> A
    com.w3i.torch.GameObjectFactory$GameObjectType DOOR_BLUE -> B
    com.w3i.torch.GameObjectFactory$GameObjectType DOOR_GREEN -> C
    com.w3i.torch.GameObjectFactory$GameObjectType BUTTON_RED -> D
    com.w3i.torch.GameObjectFactory$GameObjectType BUTTON_BLUE -> E
    com.w3i.torch.GameObjectFactory$GameObjectType BUTTON_GREEN -> F
    com.w3i.torch.GameObjectFactory$GameObjectType CANNON -> G
    com.w3i.torch.GameObjectFactory$GameObjectType BROBOT_SPAWNER -> H
    com.w3i.torch.GameObjectFactory$GameObjectType BROBOT_SPAWNER_LEFT -> I
    com.w3i.torch.GameObjectFactory$GameObjectType BREAKABLE_BLOCK -> J
    com.w3i.torch.GameObjectFactory$GameObjectType THE_SOURCE -> K
    com.w3i.torch.GameObjectFactory$GameObjectType HINT_SIGN -> L
    com.w3i.torch.GameObjectFactory$GameObjectType DUST -> M
    com.w3i.torch.GameObjectFactory$GameObjectType EXPLOSION_SMALL -> N
    com.w3i.torch.GameObjectFactory$GameObjectType EXPLOSION_LARGE -> O
    com.w3i.torch.GameObjectFactory$GameObjectType EXPLOSION_GIANT -> P
    com.w3i.torch.GameObjectFactory$GameObjectType DOOR_RED_NONBLOCKING -> Q
    com.w3i.torch.GameObjectFactory$GameObjectType DOOR_BLUE_NONBLOCKING -> R
    com.w3i.torch.GameObjectFactory$GameObjectType DOOR_GREEN_NONBLOCKING -> S
    com.w3i.torch.GameObjectFactory$GameObjectType GHOST_NPC -> T
    com.w3i.torch.GameObjectFactory$GameObjectType CAMERA_BIAS -> U
    com.w3i.torch.GameObjectFactory$GameObjectType FRAMERATE_WATCHER -> V
    com.w3i.torch.GameObjectFactory$GameObjectType INFINITE_SPAWNER -> W
    com.w3i.torch.GameObjectFactory$GameObjectType CRUSHER_ANDOU -> X
    com.w3i.torch.GameObjectFactory$GameObjectType ENERGY_BALL -> Y
    com.w3i.torch.GameObjectFactory$GameObjectType CANNON_BALL -> Z
    com.w3i.torch.GameObjectFactory$GameObjectType TURRET_BULLET -> aa
    com.w3i.torch.GameObjectFactory$GameObjectType BROBOT_BULLET -> ab
    com.w3i.torch.GameObjectFactory$GameObjectType BREAKABLE_BLOCK_PIECE -> ac
    com.w3i.torch.GameObjectFactory$GameObjectType BREAKABLE_BLOCK_PIECE_SPAWNER -> ad
    com.w3i.torch.GameObjectFactory$GameObjectType WANDA_SHOT -> ae
    com.w3i.torch.GameObjectFactory$GameObjectType SMOKE_BIG -> af
    com.w3i.torch.GameObjectFactory$GameObjectType SMOKE_SMALL -> ag
    com.w3i.torch.GameObjectFactory$GameObjectType CRUSH_FLASH -> ah
    com.w3i.torch.GameObjectFactory$GameObjectType FLASH -> ai
    com.w3i.torch.GameObjectFactory$GameObjectType PLAYER_JETS -> aj
    com.w3i.torch.GameObjectFactory$GameObjectType PLAYER_SPARKS -> ak
    com.w3i.torch.GameObjectFactory$GameObjectType PLAYER_GLOW -> al
    com.w3i.torch.GameObjectFactory$GameObjectType ENEMY_SPARKS -> am
    com.w3i.torch.GameObjectFactory$GameObjectType GHOST -> an
    com.w3i.torch.GameObjectFactory$GameObjectType SMOKE_POOF -> ao
    com.w3i.torch.GameObjectFactory$GameObjectType GEM_EFFECT -> ap
    com.w3i.torch.GameObjectFactory$GameObjectType GEM_EFFECT_SPAWNER -> aq
    com.w3i.torch.GameObjectFactory$GameObjectType OBJECT_COUNT -> ar
    int mIndex -> as
    com.w3i.torch.GameObjectFactory$GameObjectType[] ENUM$VALUES -> at
    com.w3i.torch.GameObjectFactory$GameObjectType indexToType(int) -> a
    com.w3i.torch.GameObjectFactory$GameObjectType[] values() -> values
    com.w3i.torch.GameObjectFactory$GameObjectType valueOf(java.lang.String) -> valueOf
com.w3i.torch.GameObjectManager -> com.w3i.torch.ci:
    float mMaxActivationRadius -> d
    com.w3i.torch.GameObjectManager$HorizontalPositionComparator sGameObjectComparator -> e
    com.w3i.torch.FixedSizeArray mInactiveObjects -> f
    com.w3i.torch.FixedSizeArray mMarkedForDeathObjects -> g
    com.w3i.torch.GameObject mPlayer -> h
    boolean mVisitingGraph -> i
    com.w3i.torch.Vector2 mCameraFocus -> j
    boolean $assertionsDisabled -> c
    void commitUpdates() -> b
    void update(float,com.w3i.torch.BaseObject) -> a
    void add(com.w3i.torch.BaseObject) -> a
    void remove(com.w3i.torch.BaseObject) -> b
    void destroy(com.w3i.torch.GameObject) -> a
    void destroyAll() -> d
    void setPlayer(com.w3i.torch.GameObject) -> b
    com.w3i.torch.GameObject getPlayer() -> e
com.w3i.torch.GameObjectManager$HorizontalPositionComparator -> com.w3i.torch.cj:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.w3i.torch.GameRenderer -> com.w3i.torch.ck:
    int mWidth -> d
    int mHeight -> e
    int mHalfWidth -> f
    int mHalfHeight -> g
    float mScaleX -> h
    float mScaleY -> i
    android.content.Context mContext -> j
    long mLastTime -> k
    int mProfileFrames -> l
    long mProfileWaitTime -> m
    long mProfileFrameTime -> n
    long mProfileSubmitTime -> o
    int mProfileObjectCount -> p
    com.w3i.torch.ObjectManager mDrawQueue -> q
    boolean mDrawQueueChanged -> r
    com.w3i.torch.Game mGame -> s
    java.lang.Object mDrawLock -> t
    float mCameraX -> a
    float mCameraY -> b
    boolean mCallbackRequested -> c
    void onSurfaceCreated$4a9c201c(javax.microedition.khronos.opengles.GL10) -> a
    void loadTextures(javax.microedition.khronos.opengles.GL10,com.w3i.torch.TextureLibrary) -> a
    void flushTextures(javax.microedition.khronos.opengles.GL10,com.w3i.torch.TextureLibrary) -> b
    void loadBuffers(javax.microedition.khronos.opengles.GL10,com.w3i.torch.BufferLibrary) -> a
    void flushBuffers(javax.microedition.khronos.opengles.GL10,com.w3i.torch.BufferLibrary) -> b
    void onSurfaceLost() -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> b
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void setDrawQueue(com.w3i.torch.ObjectManager,float,float) -> a
    void onPause() -> b
    void waitDrawingComplete() -> c
    void setContext(android.content.Context) -> a
com.w3i.torch.GameThread -> com.w3i.torch.cl:
    long mLastTime -> a
    com.w3i.torch.ObjectManager mGameRoot -> b
    com.w3i.torch.GameRenderer mRenderer -> c
    java.lang.Object mPauseLock -> d
    boolean mFinished -> e
    boolean mPaused -> f
    int mProfileFrames -> g
    long mProfileTime -> h
    void run() -> run
    void stopGame() -> a
    void pauseGame() -> b
    void resumeGame() -> c
    boolean getPaused() -> d
    void setGameRoot(com.w3i.torch.ObjectManager) -> a
com.w3i.torch.GenericAnimationComponent -> com.w3i.torch.cm:
    com.w3i.torch.SpriteComponent mSprite -> d
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$GameObject$ActionType -> e
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setSprite(com.w3i.torch.SpriteComponent) -> a
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$GameObject$ActionType() -> b
com.w3i.torch.GhostComponent -> com.w3i.torch.cn:
    float mMovementSpeed -> d
    float mJumpImpulse -> e
    float mAcceleration -> f
    boolean mUseOrientationSensor -> g
    float mDelayOnRelease -> h
    boolean mKillOnRelease -> i
    com.w3i.torch.GameObject$ActionType mTargetAction -> k
    float mLifeTime -> l
    boolean mChangeActionOnButton -> m
    com.w3i.torch.GameObject$ActionType mButtonPressedAction -> n
    com.w3i.torch.SoundSystem$Sound mAmbientSound -> o
    int mAmbientSoundStream -> p
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void releaseControl(com.w3i.torch.GameObject) -> a
    void setMovementSpeed(float) -> a
    void setJumpImpulse$133aeb() -> b
    void setAcceleration(float) -> b
    void setUseOrientationSensor$1385ff() -> d
    void setDelayOnRelease$133aeb() -> e
    void setKillOnRelease$1385ff() -> f
    void setTargetAction(com.w3i.torch.GameObject$ActionType) -> a
    void setLifeTime(float) -> c
    void changeActionOnButton(com.w3i.torch.GameObject$ActionType) -> b
    void setAmbientSound(com.w3i.torch.SoundSystem$Sound) -> a
com.w3i.torch.GravityComponent -> com.w3i.torch.co:
    com.w3i.torch.Vector2 mGravity -> d
    com.w3i.torch.Vector2 mScaledGravity -> e
    com.w3i.torch.Vector2 sDefaultGravity -> f
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    com.w3i.torch.Vector2 getGravity() -> b
com.w3i.torch.Grid -> com.w3i.torch.cp:
    java.nio.FloatBuffer mFloatVertexBuffer -> b
    java.nio.FloatBuffer mFloatTexCoordBuffer -> c
    java.nio.IntBuffer mFixedVertexBuffer -> d
    java.nio.IntBuffer mFixedTexCoordBuffer -> e
    java.nio.CharBuffer mIndexBuffer -> f
    java.nio.Buffer mVertexBuffer -> g
    java.nio.Buffer mTexCoordBuffer -> h
    int mCoordinateSize -> i
    int mCoordinateType -> j
    int mVertsAcross -> k
    int mVertsDown -> l
    int mIndexCount -> m
    boolean mUseHardwareBuffers -> n
    int mVertBufferIndex -> o
    int mIndexBufferIndex -> p
    int mTextureCoordBufferIndex -> q
    boolean $assertionsDisabled -> a
    void set(int,int,float[][],float[][]) -> a
    void setVertex(int,int,float,float,float,float,float) -> a
    void beginDrawingStrips$abc13ad(javax.microedition.khronos.opengles.GL10) -> a
    void drawStrip$4bf77c0d(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void endDrawing(javax.microedition.khronos.opengles.GL10) -> b
    void invalidateHardwareBuffers() -> a
    void releaseHardwareBuffers(javax.microedition.khronos.opengles.GL10) -> c
    void generateHardwareBuffers(javax.microedition.khronos.opengles.GL10) -> d
com.w3i.torch.HitPlayerComponent -> com.w3i.torch.cq:
    float mDistance2 -> d
    com.w3i.torch.Vector2 mPlayerPosition -> e
    com.w3i.torch.Vector2 mMyPosition -> f
    com.w3i.torch.HitReactionComponent mHitReact -> g
    int mHitType -> h
    boolean mHitDirection -> i
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setup$60f6c61f(com.w3i.torch.HitReactionComponent) -> a
com.w3i.torch.HitPoint -> com.w3i.torch.cr:
    com.w3i.torch.Vector2 hitPoint -> b
    com.w3i.torch.Vector2 hitNormal -> c
com.w3i.torch.HitPointPool -> com.w3i.torch.cs:
    void fill() -> b
    void release(java.lang.Object) -> a
com.w3i.torch.HitReactionComponent -> com.w3i.torch.ct:
    boolean mPauseOnAttack -> d
    float mPauseOnAttackTime -> e
    boolean mBounceOnHit -> f
    float mBounceMagnitude -> g
    float mInvincibleAfterHitTime -> h
    float mLastHitTime -> i
    boolean mInvincible -> k
    boolean mDieOnCollect -> l
    boolean mDieOnAttack -> m
    com.w3i.torch.ChangeComponentsComponent mPossessionComponent -> n
    com.w3i.torch.InventoryComponent$UpdateRecord mInventoryUpdate -> o
    com.w3i.torch.LauncherComponent mLauncherComponent -> p
    int mLauncherHitType -> q
    float mInvincibleTime -> r
    int mGameEventHitType -> s
    int mGameEventOnHit -> t
    int mGameEventIndexData -> u
    float mLastGameEventTime -> v
    boolean mForceInvincibility -> w
    com.w3i.torch.SoundSystem$Sound mTakeHitSound -> x
    com.w3i.torch.SoundSystem$Sound mDealHitSound -> y
    int mDealHitSoundHitType -> z
    int mTakeHitSoundHitType -> A
    com.w3i.torch.GameObjectFactory$GameObjectType mSpawnOnDealHitObjectType -> B
    int mSpawnOnDealHitHitType -> C
    boolean mAlignDealHitObjectToVictimX -> D
    boolean mAlignDealHitObjectToVictimY -> E
    void reset() -> a
    void hitVictim(com.w3i.torch.GameObject,com.w3i.torch.GameObject,int,boolean) -> a
    boolean receivedHit(com.w3i.torch.GameObject,com.w3i.torch.GameObject,int) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setPauseOnAttack$1385ff() -> b
    void setBounceOnHit$1385ff() -> d
    void setInvincibleTime(float) -> a
    void setDieWhenCollected$1385ff() -> e
    void setDieOnAttack$1385ff() -> f
    void setInvincible(boolean) -> a
    void setPossessionComponent(com.w3i.torch.ChangeComponentsComponent) -> a
    void setInventoryUpdate(com.w3i.torch.InventoryComponent$UpdateRecord) -> a
    void setLauncherComponent(com.w3i.torch.LauncherComponent,int) -> a
    void setSpawnGameEventOnHit(int,int,int) -> a
    void setForceInvincible(boolean) -> b
    void setTakeHitSound(int,com.w3i.torch.SoundSystem$Sound) -> a
    void setSpawnOnDealHit$682860fe(com.w3i.torch.GameObjectFactory$GameObjectType) -> a
com.w3i.torch.HotSpotSystem -> com.w3i.torch.cu:
    com.w3i.torch.TiledWorld mWorld -> c
    void reset() -> a
    int getHotSpot(float,float) -> a
    int getHitTileX(float) -> a
    int getHitTileY(float) -> b
com.w3i.torch.HudSystem -> com.w3i.torch.cv:
    com.w3i.torch.DrawableBitmap mFuelDrawable -> c
    com.w3i.torch.DrawableBitmap mFuelBackgroundDrawable -> d
    float mFuelPercent -> e
    float mFuelTargetPercent -> f
    com.w3i.torch.Texture mFadeTexture -> g
    float mFadeStartTime -> h
    float mFadeDuration -> i
    boolean mFadeIn -> j
    boolean mFading -> k
    int mFadePendingEventType -> l
    int mFadePendingEventIndex -> m
    com.w3i.torch.DrawableBitmap mFlyButtonEnabledDrawable -> n
    com.w3i.torch.DrawableBitmap mFlyButtonDisabledDrawable -> o
    com.w3i.torch.DrawableBitmap mFlyButtonDepressedDrawable -> p
    com.w3i.torch.DrawableBitmap mStompButtonEnabledDrawable -> q
    com.w3i.torch.DrawableBitmap mStompButtonDepressedDrawable -> r
    com.w3i.torch.DrawableBitmap mMovementSliderBaseDrawable -> s
    com.w3i.torch.DrawableBitmap mMovementSliderButtonDrawable -> t
    com.w3i.torch.DrawableBitmap mMovementSliderButtonDepressedDrawable -> u
    com.w3i.torch.Vector2 mFlyButtonLocation -> v
    boolean mFlyButtonActive -> w
    boolean mFlyButtonPressed -> x
    com.w3i.torch.Vector2 mStompButtonLocation -> y
    boolean mStompButtonPressed -> z
    com.w3i.torch.Vector2 mMovementSliderBaseLocation -> A
    com.w3i.torch.Vector2 mMovementSliderButtonLocation -> B
    boolean mMovementSliderMode -> C
    boolean mMovementSliderButtonPressed -> D
    com.w3i.torch.DrawableBitmap mRubyDrawable -> E
    com.w3i.torch.DrawableBitmap mCoinDrawable -> F
    com.w3i.torch.DrawableBitmap mLifetimeCoinDrawable -> G
    int mCoinCount -> H
    int mRubyCount -> I
    int mLifetimeCoinCount -> J
    com.w3i.torch.Vector2 mCoinLocation -> K
    com.w3i.torch.Vector2 mLifetimeCoinLocation -> L
    com.w3i.torch.Vector2 mRubyLocation -> M
    int[] mCoinDigits -> N
    int[] mLifetimeCoinDigits -> O
    int[] mRubyDigits -> P
    boolean mCoinDigitsChanged -> Q
    boolean mLifetimeCoinDigitsChanged -> R
    boolean mRubyDigitsChanged -> S
    int mFPS -> T
    com.w3i.torch.Vector2 mFPSLocation -> U
    int[] mFPSDigits -> V
    boolean mFPSDigitsChanged -> W
    boolean mShowFPS -> X
    com.w3i.torch.DrawableBitmap[] mDigitDrawables -> Y
    com.w3i.torch.DrawableBitmap mXDrawable -> Z
    void reset() -> a
    void setFuelPercent(float) -> a
    void setFuelDrawable(com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap) -> a
    void setFadeTexture(com.w3i.torch.Texture) -> a
    void setButtonDrawables(com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap) -> a
    void setDigitDrawables(com.w3i.torch.DrawableBitmap[],com.w3i.torch.DrawableBitmap) -> a
    void setCollectableDrawables(com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap,com.w3i.torch.DrawableBitmap) -> a
    void setButtonState(boolean,boolean,boolean) -> a
    void startFade(boolean,float) -> a
    boolean isFading() -> b
    void updateInventory(com.w3i.torch.InventoryComponent$UpdateRecord) -> a
    void setFPS(int) -> a
    void setMovementSliderMode(boolean) -> a
    void setMovementSliderOffset(float) -> b
    void update(float,com.w3i.torch.BaseObject) -> a
    void drawNumber(com.w3i.torch.Vector2,int[],boolean) -> a
    int intToDigitArray(int,int[]) -> a
    void sendGameEventOnFadeComplete(int,int) -> a
com.w3i.torch.InputButton -> com.w3i.torch.cw:
    boolean mDown -> a
    float mLastPressedTime -> b
    float mDownTime -> c
    float mMagnitude -> d
    void press(float,float) -> a
    void release() -> a
    boolean getPressed() -> b
    boolean getTriggered(float) -> a
    float getLastPressedTime() -> c
    float getMagnitude() -> d
    void setMagnitude(float) -> b
    void reset() -> e
com.w3i.torch.InputGameInterface -> com.w3i.torch.cx:
    com.w3i.torch.InputButton mJumpButton -> c
    com.w3i.torch.InputButton mAttackButton -> d
    com.w3i.torch.InputXY mDirectionalPad -> e
    com.w3i.torch.InputXY mTilt -> f
    int mLeftKeyCode -> g
    int mRightKeyCode -> h
    int mJumpKeyCode -> i
    int mAttackKeyCode -> j
    float mOrientationDeadZoneMin -> k
    float mOrientationDeadZoneMax -> l
    float mOrientationDeadZoneScale -> m
    float mOrientationSensitivity -> n
    float mOrientationSensitivityFactor -> o
    float mMovementSensitivity -> p
    boolean mUseClickButtonForAttack -> q
    boolean mUseOrientationForMovement -> r
    boolean mUseOnScreenControls -> s
    float mLastRollTime -> t
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    float filterOrientationForMovement(float) -> c
    com.w3i.torch.InputXY getDirectionalPad() -> b
    com.w3i.torch.InputXY getTilt() -> d
    com.w3i.torch.InputButton getJumpButton() -> e
    com.w3i.torch.InputButton getAttackButton() -> f
    void setKeys(int,int,int,int) -> a
    void setUseClickForAttack(boolean) -> a
    void setUseOrientationForMovement(boolean) -> b
    void setOrientationMovementSensitivity(float) -> a
    void setMovementSensitivity(float) -> b
    void setUseOnScreenControls(boolean) -> c
com.w3i.torch.InputKeyboard -> com.w3i.torch.cy:
    com.w3i.torch.InputButton[] mKeys -> b
    boolean $assertionsDisabled -> a
    void press(float,int) -> a
    void release(int) -> a
    void releaseAll() -> a
    com.w3i.torch.InputButton[] getKeys() -> b
    void resetAll() -> c
com.w3i.torch.InputSystem -> com.w3i.torch.cz:
    com.w3i.torch.InputTouchScreen mTouchScreen -> c
    com.w3i.torch.InputXY mOrientationSensor -> d
    com.w3i.torch.InputXY mTrackball -> e
    com.w3i.torch.InputKeyboard mKeyboard -> f
    int mScreenRotation -> g
    float[] mOrientationInput -> h
    float[] mOrientationOutput -> i
    void reset() -> a
    void roll(float,float) -> a
    void touchDown(int,float,float) -> a
    void touchUp$48676aae(int) -> a
    void setOrientation(float,float,float) -> a
    void keyDown(int) -> b
    void keyUp(int) -> c
    void releaseAllKeys() -> b
    com.w3i.torch.InputTouchScreen getTouchScreen() -> d
    com.w3i.torch.InputXY getOrientationSensor() -> e
    com.w3i.torch.InputXY getTrackball() -> f
    com.w3i.torch.InputKeyboard getKeyboard() -> g
    void setScreenRotation(int) -> d
com.w3i.torch.InputTouchScreen -> com.w3i.torch.da:
    int MAX_TOUCH_POINTS -> d
    com.w3i.torch.InputXY[] mTouchPoints -> e
    boolean $assertionsDisabled -> c
    void reset() -> a
    void press(int,float,float,float) -> a
    void release(int) -> a
    void resetAll() -> b
    com.w3i.torch.InputXY findPointerInRegion$a7fbf5c(float,float,float) -> a
    boolean getTriggered(float) -> a
com.w3i.torch.InputXY -> com.w3i.torch.db:
    com.w3i.torch.InputButton mXAxis -> a
    com.w3i.torch.InputButton mYAxis -> b
    void press(float,float,float) -> a
    void release() -> a
    boolean getTriggered(float) -> a
    boolean getPressed() -> b
    float getX() -> c
    float getY() -> d
    float getLastPressedTime() -> e
    void releaseX() -> f
    void releaseY() -> g
    void setMagnitude(float,float) -> a
    void reset() -> h
    void clone(com.w3i.torch.InputXY) -> a
com.w3i.torch.Interpolator -> com.w3i.torch.dc:
    float mCurrent -> b
    float mTarget -> c
    float mAcceleration -> d
    void set(float,float,float) -> a
    float interpolate(float) -> a
    float getCurrent() -> a
com.w3i.torch.InventoryComponent -> com.w3i.torch.dd:
    com.w3i.torch.InventoryComponent$UpdateRecord mInventory -> d
    boolean mInventoryChanged -> e
    void reset() -> a
    void applyUpdate(com.w3i.torch.InventoryComponent$UpdateRecord) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    com.w3i.torch.InventoryComponent$UpdateRecord getRecord() -> b
    void setChanged() -> d
com.w3i.torch.InventoryComponent$UpdateRecord -> com.w3i.torch.de:
    int rubyCount -> c
    int coinCount -> d
    int diaryCount -> e
    int lifetimeCoinCount -> f
    void reset() -> a
com.w3i.torch.KeyboardConfigDialogPreference -> com.w3i.torch.KeyboardConfigDialogPreference:
    android.content.SharedPreferences mSharedPrefs -> a
    android.content.Context mContext -> b
    java.lang.String mLeftPrefKey -> c
    java.lang.String mRightPrefKey -> d
    java.lang.String mJumpPrefKey -> e
    java.lang.String mAttackPrefKey -> f
    java.lang.String[] mKeyLabels -> g
    int mListeningId -> h
    android.view.View mLeftBorder -> i
    android.view.View mRightBorder -> j
    android.view.View mJumpBorder -> k
    android.view.View mAttackBorder -> l
    android.graphics.drawable.Drawable mUnselectedBorder -> m
    android.graphics.drawable.Drawable mSelectedBorder -> n
    int mLeftKeyCode -> o
    int mRightKeyCode -> p
    int mJumpKeyCode -> q
    int mAttackKeyCode -> r
    android.widget.TextView mLeftText -> s
    android.widget.TextView mRightText -> t
    android.widget.TextView mJumpText -> u
    android.widget.TextView mAttackText -> v
    void onBindDialogView(android.view.View) -> onBindDialogView
    void showDialog(android.os.Bundle) -> showDialog
    java.lang.String getKeyLabel(int) -> b
    void selectId(int) -> a
    android.view.View getConfigViewById(int) -> c
    void onDialogClosed(boolean) -> onDialogClosed
    void setPrefs(android.content.SharedPreferences) -> a
    void setContext(android.content.Context) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.w3i.torch.KeyboardConfigDialogPreference$ConfigClickListener -> com.w3i.torch.df:
    int mId -> b
    com.w3i.torch.KeyboardConfigDialogPreference this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.KidsDifficultyConstants -> com.w3i.torch.dg:
    float getFuelAirRefillSpeed() -> a
    float getFuelGroundRefillSpeed() -> b
    int getMaxPlayerLife() -> c
    int getCoinsPerPowerup() -> d
    float getGlowDuration() -> e
    int getDDAStage1Attempts() -> f
    int getDDAStage2Attempts() -> g
    int getDDAStage2LifeBoost() -> h
    float getDDAStage1FuelAirRefillSpeed() -> i
    float getDDAStage2FuelAirRefillSpeed() -> j
com.w3i.torch.LaunchProjectileComponent -> com.w3i.torch.dh:
    com.w3i.torch.GameObjectFactory$GameObjectType mObjectTypeToSpawn -> e
    float mOffsetX -> f
    float mOffsetY -> g
    float mVelocityX -> h
    float mVelocityY -> i
    float mThetaError -> k
    com.w3i.torch.GameObject$ActionType mRequiredAction -> l
    float mDelayBetweenShots -> m
    int mProjectilesInSet -> n
    float mDelayBetweenSets -> o
    int mSetsPerActivation -> p
    float mDelayBeforeFirstSet -> q
    float mLastProjectileTime -> r
    float mSetStartedTime -> s
    int mLaunchedCount -> t
    int mSetCount -> u
    boolean mTrackProjectiles -> v
    int mMaxTrackedProjectiles -> w
    int mTrackedProjectileCount -> x
    com.w3i.torch.Vector2 mWorkingVector -> y
    com.w3i.torch.SoundSystem$Sound mShootSound -> z
    boolean $assertionsDisabled -> d
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setObjectTypeToSpawn(com.w3i.torch.GameObjectFactory$GameObjectType) -> a
    void setOffsetX(float) -> a
    void setOffsetY(float) -> b
    void setVelocityX(float) -> c
    void setVelocityY(float) -> d
    void setRequiredAction(com.w3i.torch.GameObject$ActionType) -> a
    void setDelayBetweenShots(float) -> e
    void setDelayBetweenSets(float) -> f
    void setDelayBeforeFirstSet(float) -> g
    void setShotsPerSet(int) -> a
    void setSetsPerActivation(int) -> b
    void enableProjectileTracking$13462e() -> b
    void disableProjectileTracking() -> d
    void trackedProjectileDestroyed() -> e
    void setThetaError(float) -> h
    void setShootSound(com.w3i.torch.SoundSystem$Sound) -> a
com.w3i.torch.LauncherComponent -> com.w3i.torch.di:
    com.w3i.torch.GameObject mShot -> d
    float mLaunchTime -> e
    float mAngle -> f
    float mLaunchDelay -> g
    com.w3i.torch.Vector2 mLaunchDirection -> h
    float mLaunchMagnitude -> i
    float mPostLaunchDelay -> k
    boolean mDriveActions -> l
    com.w3i.torch.GameObjectFactory$GameObjectType mLaunchEffect -> m
    float mLaunchEffectOffsetX -> n
    float mLaunchEffectOffsetY -> o
    com.w3i.torch.SoundSystem$Sound mLaunchSound -> p
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void prepareToLaunch(com.w3i.torch.GameObject,com.w3i.torch.GameObject) -> a
    void fire(com.w3i.torch.GameObject,com.w3i.torch.GameObject,float) -> a
    void setup$2d92087f() -> b
    void setLaunchEffect(com.w3i.torch.GameObjectFactory$GameObjectType,float,float) -> a
    void setLaunchSound(com.w3i.torch.SoundSystem$Sound) -> a
com.w3i.torch.Lerp -> com.w3i.torch.dj:
    float ease(float,float,float,float) -> a
com.w3i.torch.LevelBuilder -> com.w3i.torch.dk:
    boolean $assertionsDisabled -> c
    void reset() -> a
    com.w3i.torch.GameObject buildBackground(int,int,int) -> a
    void addTileMapLayer(com.w3i.torch.GameObject,int,float,int,int,int,int,com.w3i.torch.TiledWorld,int) -> a
    void promoteForegroundLayer(com.w3i.torch.GameObject) -> a
com.w3i.torch.LevelSystem -> com.w3i.torch.dl:
    int mWidthInTiles -> c
    int mHeightInTiles -> d
    int mTileWidth -> e
    int mTileHeight -> f
    com.w3i.torch.GameObject mBackgroundObject -> g
    com.w3i.torch.ObjectManager mRoot -> h
    byte[] mWorkspaceBytes -> j
    com.w3i.torch.TiledWorld mSpawnLocations -> k
    com.w3i.torch.GameFlowEvent mGameFlowEvent -> l
    int mAttempts -> m
    com.w3i.torch.LevelTree$Level mCurrentLevel -> n
    boolean $assertionsDisabled -> i
    void reset() -> a
    float getLevelWidth() -> b
    float getLevelHeight() -> d
    void sendGameEvent(int,int,boolean) -> a
    boolean loadLevel(com.w3i.torch.LevelTree$Level,java.io.InputStream,com.w3i.torch.ObjectManager) -> a
    void spawnObjects() -> e
    void incrementAttemptsCount() -> f
    int getAttemptsCount() -> g
    com.w3i.torch.LevelTree$Level getCurrentLevel() -> h
com.w3i.torch.LevelTree -> com.w3i.torch.dm:
    java.util.ArrayList levels -> a
    boolean mLoaded -> b
    int mLoadedResource -> c
    com.w3i.torch.LevelTree$Level get(int,int) -> a
    boolean isLoaded(int) -> a
    void loadLevelTree(int,android.content.Context) -> a
    void loadAllDialog(android.content.Context) -> a
    void updateCompletedState(int,int) -> b
    int packCompletedLevels(int) -> b
    boolean levelIsValid(int,int) -> c
    boolean rowIsValid(int) -> c
com.w3i.torch.LevelTree$DialogEntry -> com.w3i.torch.dn:
    int diaryEntry -> a
    int character1Entry -> b
    int character2Entry -> c
    java.util.ArrayList character1Conversations -> d
    java.util.ArrayList character2Conversations -> e
com.w3i.torch.LevelTree$Level -> com.w3i.torch.do:
    int resource -> a
    com.w3i.torch.LevelTree$DialogEntry dialogResources -> b
    java.lang.String name -> c
    java.lang.String timeStamp -> d
    boolean completed -> e
    boolean inThePast -> f
    boolean diaryCollected -> g
    boolean restartable -> h
    boolean showWaitMessage -> i
com.w3i.torch.LevelTree$LevelGroup -> com.w3i.torch.dp:
    java.util.ArrayList levels -> a
com.w3i.torch.LifetimeComponent -> com.w3i.torch.dq:
    boolean mDieWhenInvisible -> d
    float mTimeUntilDeath -> e
    com.w3i.torch.GameObjectFactory$GameObjectType mSpawnOnDeathType -> f
    com.w3i.torch.LaunchProjectileComponent mTrackingSpawner -> g
    com.w3i.torch.Vector2 mHotSpotTestPoint -> h
    boolean mReleaseGhostOnDeath -> i
    boolean mVulnerableToDeathTiles -> k
    boolean mDieOnHitBackground -> l
    com.w3i.torch.SoundSystem$Sound mDeathSound -> m
    boolean mIncrementEventCounter -> n
    int mEventCounter -> o
    void reset() -> a
    void setDieWhenInvisible$1385ff() -> b
    void setTimeUntilDeath(float) -> a
    void setObjectToSpawnOnDeath(com.w3i.torch.GameObjectFactory$GameObjectType) -> a
    void setIncrementEventCounter(int) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void die(com.w3i.torch.GameObject) -> a
    void setTrackingSpawner(com.w3i.torch.LaunchProjectileComponent) -> a
    void setReleaseGhostOnDeath$1385ff() -> d
    void setVulnerableToDeathTiles$1385ff() -> e
    void setDieOnHitBackground$1385ff() -> f
    void setDeathSound(com.w3i.torch.SoundSystem$Sound) -> a
com.w3i.torch.MainLoop -> com.w3i.torch.dr:
    com.w3i.torch.TimeSystem mTimeSystem -> c
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.MotionBlurComponent -> com.w3i.torch.ds:
    com.w3i.torch.MotionBlurComponent$BlurRecord[] mHistory -> d
    com.w3i.torch.RenderComponent mBlurTarget -> e
    float mStepDelay -> f
    int mCurrentStep -> g
    float mTimeSinceLastStep -> h
    int mTargetPriority -> i
    void reset() -> a
    void setTarget(com.w3i.torch.RenderComponent) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.MotionBlurComponent$BlurRecord -> com.w3i.torch.dt:
    com.w3i.torch.Vector2 position -> a
    com.w3i.torch.Texture texture -> b
    int width -> c
    int height -> d
    int[] crop -> e
    com.w3i.torch.MotionBlurComponent this$0 -> f
com.w3i.torch.MovementComponent -> com.w3i.torch.du:
    com.w3i.torch.Interpolator sInterpolator -> d
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.MultiTouchFilter -> com.w3i.torch.dv:
    boolean mCheckedForMultitouch -> c
    boolean mSupportsMultitouch -> d
    void updateTouch(android.view.MotionEvent) -> a
    boolean supportsMultitouch(android.content.Context) -> a
com.w3i.torch.NPCAnimationComponent -> com.w3i.torch.dw:
    int mCurrentAnimation -> e
    com.w3i.torch.SpriteComponent mSprite -> f
    com.w3i.torch.ChannelSystem$Channel mChannel -> g
    int mChannelTrigger -> h
    boolean mFlying -> i
    boolean mStopAtWalls -> k
    boolean $assertionsDisabled -> d
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    boolean shouldFall(com.w3i.torch.GameObject) -> a
    boolean shouldJump(com.w3i.torch.GameObject) -> b
    boolean shouldRun(com.w3i.torch.GameObject) -> c
    boolean shouldTakeHit(com.w3i.torch.GameObject) -> d
    void setSprite(com.w3i.torch.SpriteComponent) -> a
    void setChannel(com.w3i.torch.ChannelSystem$Channel) -> a
    void setChannelTrigger$13462e() -> b
    void setFlying$1385ff() -> d
    void setStopAtWalls$1385ff() -> e
com.w3i.torch.NPCComponent -> com.w3i.torch.dx:
    float mPauseTime -> d
    float mTargetXVelocity -> e
    int mLastHitTileX -> f
    int mLastHitTileY -> g
    int mDialogEvent -> h
    int mDialogIndex -> i
    com.w3i.torch.HitReactionComponent mHitReactComponent -> k
    int[] mQueuedCommands -> l
    int mQueueTop -> m
    int mQueueBottom -> n
    boolean mExecutingQueue -> o
    com.w3i.torch.Vector2 mPreviousPosition -> p
    float mUpImpulse -> q
    float mDownImpulse -> r
    float mHorizontalImpulse -> s
    float mSlowHorizontalImpulse -> t
    float mAcceleration -> u
    int mGameEvent -> v
    int mGameEventIndex -> w
    boolean mSpawnGameEventOnDeath -> x
    boolean mReactToHits -> y
    boolean mFlying -> z
    boolean mPauseOnAttack -> A
    float mDeathTime -> B
    float mDeathFadeDelay -> C
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    boolean executeCommand$23450dff(int,com.w3i.torch.GameObject) -> a
    void pauseMovement(com.w3i.torch.GameObject) -> a
    void resumeMovement(com.w3i.torch.GameObject) -> b
    void setHitReactionComponent(com.w3i.torch.HitReactionComponent) -> a
    void setSpeeds(float,float,float,float,float) -> a
    void setGameEvent$486912df(int,boolean) -> a
    void setReactToHits$1385ff() -> b
    void setFlying$1385ff() -> d
    void setPauseOnAttack$1385ff() -> e
com.w3i.torch.ObjectManager -> com.w3i.torch.dy:
    com.w3i.torch.FixedSizeArray mObjects -> c
    com.w3i.torch.FixedSizeArray mPendingAdditions -> d
    com.w3i.torch.FixedSizeArray mPendingRemovals -> e
    void reset() -> a
    void commitUpdates() -> b
    void update(float,com.w3i.torch.BaseObject) -> a
    com.w3i.torch.FixedSizeArray getObjects() -> q
    int getCount() -> r
    int getConcreteCount() -> s
    com.w3i.torch.BaseObject get(int) -> a
    void add(com.w3i.torch.BaseObject) -> a
    void remove(com.w3i.torch.BaseObject) -> b
    void removeAll() -> t
    java.lang.Object findByClass(java.lang.Class) -> a
    com.w3i.torch.FixedSizeArray getPendingObjects() -> u
com.w3i.torch.ObjectPool -> com.w3i.torch.dz:
    com.w3i.torch.FixedSizeArray mAvailable -> c
    int mSize -> e
    boolean $assertionsDisabled -> d
    void reset() -> a
    java.lang.Object allocate() -> e
    void release(java.lang.Object) -> a
    int getAllocatedCount() -> f
    void setSize(int) -> a
    void fill() -> b
    com.w3i.torch.FixedSizeArray getAvailable() -> g
    int getSize() -> h
com.w3i.torch.ObjectRegistry -> com.w3i.torch.ea:
    com.w3i.torch.BufferLibrary bufferLibrary -> c
    com.w3i.torch.CameraSystem cameraSystem -> d
    com.w3i.torch.ChannelSystem channelSystem -> e
    com.w3i.torch.CollisionSystem collisionSystem -> f
    com.w3i.torch.ContextParameters contextParameters -> g
    com.w3i.torch.CustomToastSystem customToastSystem -> h
    com.w3i.torch.DebugSystem debugSystem -> i
    com.w3i.torch.DrawableFactory drawableFactory -> j
    com.w3i.torch.EventRecorder eventRecorder -> k
    com.w3i.torch.GameObjectCollisionSystem gameObjectCollisionSystem -> l
    com.w3i.torch.GameObjectFactory gameObjectFactory -> m
    com.w3i.torch.GameObjectManager gameObjectManager -> n
    com.w3i.torch.HitPointPool hitPointPool -> o
    com.w3i.torch.HotSpotSystem hotSpotSystem -> p
    com.w3i.torch.HudSystem hudSystem -> q
    com.w3i.torch.InputGameInterface inputGameInterface -> r
    com.w3i.torch.InputSystem inputSystem -> s
    com.w3i.torch.LevelBuilder levelBuilder -> t
    com.w3i.torch.LevelSystem levelSystem -> u
    com.w3i.torch.OpenGLSystem openGLSystem -> v
    com.w3i.torch.SoundSystem soundSystem -> w
    com.w3i.torch.TextureLibrary shortTermTextureLibrary -> x
    com.w3i.torch.TextureLibrary longTermTextureLibrary -> y
    com.w3i.torch.TimeSystem timeSystem -> z
    com.w3i.torch.RenderSystem renderSystem -> A
    com.w3i.torch.VectorPool vectorPool -> B
    com.w3i.torch.VibrationSystem vibrationSystem -> C
    java.util.ArrayList mItemsNeedingReset -> E
    boolean $assertionsDisabled -> D
    void registerForReset(com.w3i.torch.BaseObject) -> a
    void reset() -> a
com.w3i.torch.OpenGLSystem -> com.w3i.torch.eb:
    javax.microedition.khronos.opengles.GL10 sGL -> c
    int sLastBoundTexture -> d
    int sLastSetCropSignature -> e
    void setGL(javax.microedition.khronos.opengles.GL10) -> a
    javax.microedition.khronos.opengles.GL10 getGL() -> b
    void bindTexture$255f295(int) -> a
    void setTextureCrop(int[]) -> a
    void reset() -> a
com.w3i.torch.OrbitalMagnetComponent -> com.w3i.torch.ec:
    float mStrength -> d
    com.w3i.torch.Vector2 mCenter -> e
    com.w3i.torch.Vector2 mDelta -> f
    com.w3i.torch.Vector2 mRim -> g
    com.w3i.torch.Vector2 mVelocity -> h
    float mMagnetRadius -> i
    float mAreaRadius -> k
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setup$2548a35() -> b
com.w3i.torch.PatrolComponent -> com.w3i.torch.ed:
    float mMaxSpeed -> f
    float mAcceleration -> g
    boolean mAttack -> h
    float mAttackAtDistance -> i
    boolean mAttackStopsMovement -> k
    float mAttackDuration -> l
    float mAttackDelay -> m
    boolean mTurnToFacePlayer -> n
    boolean mFlying -> o
    float mLastAttackTime -> p
    com.w3i.torch.Vector2 mWorkingVector -> d
    com.w3i.torch.Vector2 mWorkingVector2 -> e
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setMovementSpeed(float,float) -> a
    void setupAttack$4097ebf7(float,float,float) -> a
    void setTurnToFacePlayer(boolean) -> a
    void setFlying$1385ff() -> b
com.w3i.torch.PhasedObject -> com.w3i.torch.ee:
    int phase -> j
    void reset() -> a
com.w3i.torch.PhasedObjectManager -> com.w3i.torch.ef:
    com.w3i.torch.PhasedObjectManager$PhasedObjectComparator sPhasedObjectComparator -> c
    boolean mDirty -> d
    com.w3i.torch.PhasedObject mSearchDummy -> e
    boolean $assertionsDisabled -> l
    void commitUpdates() -> b
    void add(com.w3i.torch.BaseObject) -> a
    com.w3i.torch.BaseObject find(int) -> b
com.w3i.torch.PhasedObjectManager$PhasedObjectComparator -> com.w3i.torch.eg:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.w3i.torch.PhysicsComponent -> com.w3i.torch.eh:
    float mMass -> d
    float mBounciness -> e
    float mInertia -> f
    float mStaticFrictionCoeffecient -> g
    float mDynamicFrictionCoeffecient -> h
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setMass$133aeb() -> b
    void setStaticFrictionCoeffecient$133aeb() -> d
    void setDynamicFrictionCoeffecient$133aeb() -> e
com.w3i.torch.PlaySingleSoundComponent -> com.w3i.torch.ei:
    com.w3i.torch.SoundSystem$Sound mSound -> d
    int mSoundHandle -> e
    void reset() -> a
    void setSound(com.w3i.torch.SoundSystem$Sound) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.PlayerComponent -> com.w3i.torch.ej:
    boolean mTouchingGround -> d
    com.w3i.torch.PlayerComponent$State mState -> e
    float mTimer -> f
    float mTimer2 -> g
    float mFuel -> h
    float mJumpTime -> i
    boolean mGhostActive -> k
    float mGhostDeactivatedTime -> l
    float mGhostChargeTime -> m
    com.w3i.torch.InventoryComponent mInventory -> n
    com.w3i.torch.Vector2 mHotSpotTestPoint -> o
    com.w3i.torch.ChangeComponentsComponent mInvincibleSwap -> p
    float mInvincibleEndTime -> q
    com.w3i.torch.HitReactionComponent mHitReaction -> r
    float mFuelAirRefillSpeed -> s
    com.w3i.torch.DifficultyConstants mDifficultyConstants -> t
    com.w3i.torch.DifficultyConstants[] sDifficultyArray -> u
    com.w3i.torch.FadeDrawableComponent mInvincibleFader -> v
    boolean mRocketsOn -> w
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$PlayerComponent$State -> x
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void gotoMove(com.w3i.torch.GameObject) -> a
    void gotoDead(float) -> b
    boolean getRocketsOn() -> b
    void deactivateGhost(float) -> a
    void setInventory(com.w3i.torch.InventoryComponent) -> a
    void setInvincibleSwap(com.w3i.torch.ChangeComponentsComponent) -> a
    void setHitReactionComponent(com.w3i.torch.HitReactionComponent) -> a
    void setInvincibleFader(com.w3i.torch.FadeDrawableComponent) -> a
    void adjustDifficulty(com.w3i.torch.GameObject,int) -> a
    com.w3i.torch.DifficultyConstants getDifficultyConstants() -> d
    int[] $SWITCH_TABLE$com$w3i$replica$replicaisland$PlayerComponent$State() -> e
com.w3i.torch.PlayerComponent$State -> com.w3i.torch.ek:
    com.w3i.torch.PlayerComponent$State MOVE -> a
    com.w3i.torch.PlayerComponent$State STOMP -> b
    com.w3i.torch.PlayerComponent$State HIT_REACT -> c
    com.w3i.torch.PlayerComponent$State DEAD -> d
    com.w3i.torch.PlayerComponent$State WIN -> e
    com.w3i.torch.PlayerComponent$State FROZEN -> f
    com.w3i.torch.PlayerComponent$State POST_GHOST_DELAY -> g
    com.w3i.torch.PlayerComponent$State[] ENUM$VALUES -> h
    com.w3i.torch.PlayerComponent$State[] values() -> values
    com.w3i.torch.PlayerComponent$State valueOf(java.lang.String) -> valueOf
com.w3i.torch.PopOutComponent -> com.w3i.torch.el:
    float mAppearDistance -> e
    float mHideDistance -> f
    float mAttackDistance -> g
    float mAttackDelay -> h
    float mAttackLength -> i
    float mAttackStartTime -> k
    com.w3i.torch.Vector2 mDistance -> l
    int mState -> m
    float mLastAttackCompletedTime -> n
    boolean $assertionsDisabled -> d
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setupAttack$483d242b(float) -> a
    void setAppearDistance$133aeb() -> b
    void setHideDistance$133aeb() -> d
com.w3i.torch.R -> com.w3i.torch.em:
com.w3i.torch.R$styleable -> com.w3i.torch.en:
    int[] KeyConfigPreference -> a
    int[] SliderPreference -> b
com.w3i.torch.RenderComponent -> com.w3i.torch.eo:
    com.w3i.torch.DrawableObject mDrawable -> d
    int mPriority -> e
    boolean mCameraRelative -> f
    com.w3i.torch.Vector2 mPositionWorkspace -> g
    com.w3i.torch.Vector2 mScreenLocation -> h
    com.w3i.torch.Vector2 mDrawOffset -> i
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    com.w3i.torch.DrawableObject getDrawable() -> b
    void setDrawable(com.w3i.torch.DrawableObject) -> a
    void setPriority(int) -> a
    int getPriority() -> d
    void setCameraRelative$1385ff() -> e
    void setDrawOffset(float,float) -> a
com.w3i.torch.RenderSystem -> com.w3i.torch.ep:
    com.w3i.torch.RenderSystem$RenderElementPool mElementPool -> c
    com.w3i.torch.ObjectManager[] mRenderQueues -> d
    int mQueueIndex -> e
    void reset() -> a
    void scheduleForDraw(com.w3i.torch.DrawableObject,com.w3i.torch.Vector2,int,boolean) -> a
    void clearQueue(com.w3i.torch.FixedSizeArray) -> a
    void swap(com.w3i.torch.GameRenderer,float,float) -> a
    void emptyQueues(com.w3i.torch.GameRenderer) -> a
com.w3i.torch.RenderSystem$RenderElement -> com.w3i.torch.eq:
    com.w3i.torch.DrawableObject mDrawable -> c
    float x -> d
    float y -> e
    boolean cameraRelative -> f
    com.w3i.torch.RenderSystem this$0 -> g
    void reset() -> a
com.w3i.torch.RenderSystem$RenderElementPool -> com.w3i.torch.er:
    com.w3i.torch.RenderSystem this$0 -> c
    void release(java.lang.Object) -> a
    void fill() -> b
com.w3i.torch.ScrollableBitmap -> com.w3i.torch.es:
    float mScrollOriginX -> c
    float mScrollOriginY -> d
    void setScrollOrigin(float,float) -> a
    void draw(float,float,float,float) -> a
    float getScrollOriginX() -> h
    float getScrollOriginY() -> i
com.w3i.torch.ScrollerComponent -> com.w3i.torch.et:
    int mWidth -> d
    int mHeight -> e
    float mHalfWidth -> f
    float mHalfHeight -> g
    com.w3i.torch.RenderComponent mRenderComponent -> h
    float mSpeedX -> i
    float mSpeedY -> k
    com.w3i.torch.Texture mTexture -> l
    com.w3i.torch.TiledVertexGrid mVertGrid -> m
    void reset() -> a
    void setScrollSpeed(float,float) -> a
    void setup(float,float,int,int) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setRenderComponent(com.w3i.torch.RenderComponent) -> a
com.w3i.torch.SelectDialogComponent -> com.w3i.torch.eu:
    com.w3i.torch.HitReactionComponent mHitReact -> d
    com.w3i.torch.Vector2 mLastPosition -> e
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setHitReact(com.w3i.torch.HitReactionComponent) -> a
com.w3i.torch.SimpleCollisionComponent -> com.w3i.torch.ev:
    com.w3i.torch.Vector2 mPreviousPosition -> d
    com.w3i.torch.Vector2 mCurrentPosition -> e
    com.w3i.torch.Vector2 mMovementDirection -> f
    com.w3i.torch.Vector2 mHitPoint -> g
    com.w3i.torch.Vector2 mHitNormal -> h
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.SimplePhysicsComponent -> com.w3i.torch.ew:
    float mBounciness -> d
    void reset() -> a
    void setBounciness(float) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.SingleTouchFilter -> com.w3i.torch.ex:
    void updateTouch(android.view.MotionEvent) -> a
    void reset() -> a
com.w3i.torch.SleeperComponent -> com.w3i.torch.ey:
    float mWakeUpDuration -> d
    float mStateTime -> e
    int mState -> f
    float mSlamDuration -> g
    float mSlamMagnitude -> h
    float mAttackImpulseX -> i
    float mAttackImpulseY -> k
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setWakeUpDuration(float) -> a
    void setSlam$2548a35() -> b
    void setAttackImpulse$2548a35() -> d
com.w3i.torch.SliderPreference -> com.w3i.torch.SliderPreference:
    int mValue -> a
    java.lang.String mMinText -> b
    java.lang.String mMaxText -> c
    void onBindView(android.view.View) -> onBindView
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
com.w3i.torch.SolidSurfaceComponent -> com.w3i.torch.ez:
    com.w3i.torch.FixedSizeArray mStartPoints -> d
    com.w3i.torch.FixedSizeArray mEndPoints -> e
    com.w3i.torch.FixedSizeArray mNormals -> f
    com.w3i.torch.Vector2 mStart -> g
    com.w3i.torch.Vector2 mEnd -> h
    com.w3i.torch.Vector2 mNormal -> i
    void reset() -> a
    void inititalize(int) -> a
    void addSurface(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.Vector2) -> a
    void update(float,com.w3i.torch.BaseObject) -> a
com.w3i.torch.Sorter -> com.w3i.torch.fa:
    void sort(java.lang.Object[],int,java.util.Comparator) -> a
com.w3i.torch.SoundSystem -> com.w3i.torch.fb:
    com.w3i.torch.SoundSystem$SoundComparator sSoundComparator -> c
    android.media.SoundPool mSoundPool -> d
    com.w3i.torch.FixedSizeArray mSounds -> e
    com.w3i.torch.SoundSystem$Sound mSearchDummy -> f
    boolean mSoundEnabled -> g
    int[] mLoopingStreams -> h
    void reset() -> a
    com.w3i.torch.SoundSystem$Sound load(int) -> a
    int play(com.w3i.torch.SoundSystem$Sound,boolean,int) -> a
    int play$3ecdf76e(com.w3i.torch.SoundSystem$Sound,float) -> a
    void stop(int) -> b
    void pause(int) -> c
    void resume(int) -> d
    void stopAll() -> b
    void pauseAll() -> d
    void setSoundEnabled(boolean) -> a
    boolean getSoundEnabled() -> e
com.w3i.torch.SoundSystem$Sound -> com.w3i.torch.fc:
    int resource -> b
    int soundId -> c
    com.w3i.torch.SoundSystem this$0 -> d
com.w3i.torch.SoundSystem$SoundComparator -> com.w3i.torch.fd:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.w3i.torch.SphereCollisionVolume -> com.w3i.torch.fe:
    float mRadius -> c
    com.w3i.torch.Vector2 mCenter -> d
    com.w3i.torch.Vector2 mWorkspaceVector -> e
    com.w3i.torch.Vector2 mWorkspaceVector2 -> f
    float getMaxX() -> a
    float getMinX() -> b
    float getMaxY() -> c
    float getMinY() -> d
    void setCenter(com.w3i.torch.Vector2) -> a
    float getRadius() -> f
    void setRadius$133aeb() -> g
    void reset() -> h
    boolean intersects(com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo,com.w3i.torch.CollisionVolume,com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo) -> a
    void growBy(com.w3i.torch.CollisionVolume) -> a
    void offsetByCenter(com.w3i.torch.Vector2,com.w3i.torch.Vector2,com.w3i.torch.CollisionVolume$FlipInfo) -> a
com.w3i.torch.SpriteAnimation -> com.w3i.torch.ff:
    com.w3i.torch.FixedSizeArray mFrames -> d
    float[] mFrameStartTimes -> e
    boolean mLoop -> f
    float mLength -> g
    boolean $assertionsDisabled -> c
    com.w3i.torch.AnimationFrame getFrame(float) -> a
    void addFrame(com.w3i.torch.AnimationFrame) -> a
    float getLength() -> b
    void setLoop$1385ff() -> d
    boolean getLoop() -> e
com.w3i.torch.SpriteComponent -> com.w3i.torch.fg:
    com.w3i.torch.PhasedObjectManager mAnimations -> d
    float mAnimationTime -> e
    int mCurrentAnimationIndex -> f
    int mWidth -> g
    int mHeight -> h
    float mOpacity -> i
    com.w3i.torch.RenderComponent mRenderComponent -> k
    com.w3i.torch.DynamicCollisionComponent mCollisionComponent -> l
    boolean mVisible -> m
    com.w3i.torch.SpriteAnimation mCurrentAnimation -> n
    boolean mAnimationsDirty -> o
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void playAnimation(int) -> a
    com.w3i.torch.SpriteAnimation findAnimation(int) -> b
    void addAnimation(com.w3i.torch.SpriteAnimation) -> a
    boolean animationFinished() -> b
    void setSize(int,int) -> a
    void setRenderComponent(com.w3i.torch.RenderComponent) -> a
    void setCollisionComponent(com.w3i.torch.DynamicCollisionComponent) -> a
    boolean getVisible() -> d
    void setVisible(boolean) -> a
    float getCurrentAnimationTime() -> e
    void setCurrentAnimationTime(float) -> a
    void setOpacity(float) -> b
    int getCurrentAnimation() -> f
    int getAnimationCount() -> g
com.w3i.torch.StandardSorter -> com.w3i.torch.fh:
    void sort(java.lang.Object[],int,java.util.Comparator) -> a
com.w3i.torch.TObjectPool -> com.w3i.torch.fi:
    java.lang.Object allocate() -> e
com.w3i.torch.Texture -> com.w3i.torch.fj:
    int resource -> b
    int name -> c
    int width -> d
    int height -> e
    boolean loaded -> f
    void reset() -> a
com.w3i.torch.TextureLibrary -> com.w3i.torch.fk:
    com.w3i.torch.Texture[] mTextureHash -> c
    int[] mTextureNameWorkspace -> d
    int[] mCropWorkspace -> e
    android.graphics.BitmapFactory$Options sBitmapOptions -> f
    boolean $assertionsDisabled -> g
    void reset() -> a
    com.w3i.torch.Texture allocateTexture(int) -> a
    void loadAll(android.content.Context,javax.microedition.khronos.opengles.GL10) -> a
    void deleteAll(javax.microedition.khronos.opengles.GL10) -> a
    void invalidateAll() -> b
    com.w3i.torch.Texture loadBitmap(android.content.Context,javax.microedition.khronos.opengles.GL10,com.w3i.torch.Texture) -> a
    com.w3i.torch.Texture getTextureByResource(int) -> b
    int findFirstKey(int,int) -> a
    void removeAll() -> d
com.w3i.torch.TheSourceComponent -> com.w3i.torch.fl:
    float mTimer -> d
    float mExplosionTimer -> e
    float mShakeStartPosition -> f
    com.w3i.torch.ChannelSystem$Channel mChannel -> g
    int mGameEvent -> h
    int mGameEventIndex -> i
    boolean mDead -> k
    com.w3i.torch.ChannelSystem$ChannelBooleanValue sChannelValue -> l
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    void setChannel(com.w3i.torch.ChannelSystem$Channel) -> a
    void setGameEvent$255f295() -> b
com.w3i.torch.TiledBackgroundVertexGrid -> com.w3i.torch.fm:
    com.w3i.torch.TiledVertexGrid mGrid -> c
    void reset() -> a
    void setGrid(com.w3i.torch.TiledVertexGrid) -> a
    void draw(float,float,float,float) -> a
com.w3i.torch.TiledVertexGrid -> com.w3i.torch.fn:
    com.w3i.torch.Grid mTileMap -> c
    com.w3i.torch.TiledWorld mWorld -> d
    int mTileWidth -> e
    int mTileHeight -> f
    int mWidth -> g
    int mHeight -> h
    com.w3i.torch.Texture mTexture -> i
    float mWorldPixelWidth -> j
    float mWorldPixelHeight -> k
    int mTilesPerRow -> l
    int mTilesPerColumn -> m
    java.lang.Boolean mGenerated -> n
    void reset() -> a
    void setWorld(com.w3i.torch.TiledWorld) -> a
    void draw(float,float,float,float) -> a
com.w3i.torch.TiledWorld -> com.w3i.torch.fo:
    int[][] mTilesArray -> c
    int mRowCount -> d
    int mColCount -> e
    byte[] mWorkspaceBytes -> f
    boolean $assertionsDisabled -> b
    int getTile(int,int) -> a
    boolean parseInput(java.io.InputStream) -> a
    int getWidth() -> a
    int getHeight() -> b
    int[][] getTiles() -> c
com.w3i.torch.TimeSystem -> com.w3i.torch.fp:
    float mGameTime -> c
    float mRealTime -> d
    float mFreezeDelay -> e
    float mGameFrameDelta -> f
    float mRealFrameDelta -> g
    float mTargetScale -> h
    float mScaleDuration -> i
    float mScaleStartTime -> j
    boolean mEaseScale -> k
    void reset() -> a
    void update(float,com.w3i.torch.BaseObject) -> a
    float getGameTime() -> b
    float getRealTime() -> d
    float getFrameDelta() -> e
    void freeze(float) -> a
    void appyScale$483d6f3f() -> f
com.w3i.torch.TouchFilter -> com.w3i.torch.fq:
    void updateTouch(android.view.MotionEvent) -> a
    boolean supportsMultitouch(android.content.Context) -> a
    void reset() -> a
com.w3i.torch.UIConstants -> com.w3i.torch.fr:
    java.lang.reflect.Method mOverridePendingTransition -> a
com.w3i.torch.Utils -> com.w3i.torch.fs:
    boolean close(float,float,float) -> a
    int sign(float) -> a
    int clamp(int,int,int) -> a
    int byteArrayToInt(byte[]) -> a
    float framesToTime$255f285(int) -> a
com.w3i.torch.Vector2 -> com.w3i.torch.ft:
    float x -> b
    float y -> c
    com.w3i.torch.Vector2 ZERO -> d
    void add(com.w3i.torch.Vector2) -> a
    void add(float,float) -> a
    void subtract(com.w3i.torch.Vector2) -> b
    void multiply(float) -> a
    void multiply(com.w3i.torch.Vector2) -> c
    void divide(float) -> b
    void set(com.w3i.torch.Vector2) -> d
    void set(float,float) -> b
    float dot(com.w3i.torch.Vector2) -> e
    float length() -> a
    float length2() -> b
    float distance2(com.w3i.torch.Vector2) -> f
    float normalize() -> c
    void zero() -> d
    void flipHorizontal(float) -> c
    void flipVertical(float) -> d
com.w3i.torch.VectorPool -> com.w3i.torch.fu:
    void fill() -> b
    void release(java.lang.Object) -> a
    com.w3i.torch.Vector2 allocate(com.w3i.torch.Vector2) -> a
com.w3i.torch.VibrationSystem -> com.w3i.torch.fv:
    void reset() -> a
com.w3i.torch.YesNoDialogPreference -> com.w3i.torch.YesNoDialogPreference:
    com.w3i.torch.YesNoDialogPreference$YesNoDialogListener mListener -> a
    void setListener(com.w3i.torch.YesNoDialogPreference$YesNoDialogListener) -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.w3i.torch.YesNoDialogPreference$YesNoDialogListener -> com.w3i.torch.fw:
    void onDialogClosed(boolean) -> a
com.w3i.torch.activities.AndouKun -> com.w3i.torch.activities.AndouKun:
    com.w3i.torch.GLSurfaceView mGLSurfaceView -> a
    com.w3i.torch.Game mGame -> b
    boolean mMethodTracing -> c
    int mLevelRow -> d
    int mLevelIndex -> e
    float mTotalGameTime -> f
    int mRobotsDestroyed -> g
    int mPearlsCollected -> h
    int mPearlsTotal -> i
    int mLastEnding -> j
    int mLinearMode -> k
    int mDifficulty -> l
    boolean mExtrasUnlocked -> m
    android.hardware.SensorManager mSensorManager -> n
    android.content.SharedPreferences$Editor mPrefsEditor -> o
    long mLastTouchTime -> p
    long mLastRollTime -> q
    android.view.View mPauseMessage -> r
    android.view.View mWaitMessage -> s
    android.view.View mLevelNameBox -> t
    android.widget.TextView mLevelName -> u
    android.view.animation.Animation mWaitFadeAnimation -> v
    com.w3i.torch.EventReporter mEventReporter -> w
    java.lang.Thread mEventReporterThread -> x
    long mSessionId -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onGameFlowEvent(int,int) -> a
    void saveGame() -> a
    void hidePauseMessage() -> b
    void showWaitMessage() -> c
    void hideWaitMessage() -> d
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
com.w3i.torch.activities.AndouKun$1 -> com.w3i.torch.activities.a:
    com.w3i.torch.activities.AndouKun this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.torch.activities.AnimationPlayerActivity -> com.w3i.torch.activities.AnimationPlayerActivity:
    android.graphics.drawable.AnimationDrawable mAnimation -> b
    int mAnimationType -> c
    long mAnimationEndTime -> d
    com.w3i.torch.activities.AnimationPlayerActivity$KillActivityHandler mKillActivityHandler -> e
    boolean $assertionsDisabled -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
com.w3i.torch.activities.AnimationPlayerActivity$KillActivityHandler -> com.w3i.torch.activities.b:
    com.w3i.torch.activities.AnimationPlayerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void sleep(long) -> a
com.w3i.torch.activities.ConversationDialogActivity -> com.w3i.torch.activities.ConversationDialogActivity:
    com.w3i.torch.ConversationUtils$Conversation mConversation -> a
    java.util.ArrayList mPages -> b
    int mCurrentPage -> c
    android.widget.ImageView mOkArrow -> d
    android.graphics.drawable.AnimationDrawable mOkAnimation -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void showPage(com.w3i.torch.ConversationUtils$ConversationPage) -> a
    void processText() -> a
com.w3i.torch.activities.ConversationDialogActivity$TypewriterTextView -> com.w3i.torch.activities.ConversationDialogActivity$TypewriterTextView:
    int mCurrentCharacter -> a
    long mLastTime -> b
    java.lang.CharSequence mText -> c
    android.view.View mOkArrow -> d
    com.w3i.torch.activities.ConversationDialogActivity mParentActivity -> e
    void setParentActivity(com.w3i.torch.activities.ConversationDialogActivity) -> a
    void setTypewriterText(java.lang.CharSequence) -> a
    long getRemainingTime() -> a
    void snapToEnd() -> b
    void setOkArrow(android.view.View) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
com.w3i.torch.activities.DiaryActivity -> com.w3i.torch.activities.DiaryActivity:
    android.view.View$OnClickListener mKillDiaryListener -> a
    void onCreate(android.os.Bundle) -> onCreate
com.w3i.torch.activities.DiaryActivity$1 -> com.w3i.torch.activities.c:
    com.w3i.torch.activities.DiaryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.DifficultyMenuActivity -> com.w3i.torch.activities.DifficultyMenuActivity:
    android.view.View mBabyButton -> a
    android.view.View mKidsButton -> b
    android.view.View mAdultsButton -> c
    android.view.View mBackground -> d
    android.view.View mBabyText -> e
    android.view.View mKidsText -> f
    android.view.View mAdultsText -> g
    android.view.animation.Animation mButtonFlickerAnimation -> h
    android.view.animation.Animation mFadeOutAnimation -> i
    android.view.animation.Animation mAlternateFadeOutAnimation -> j
    android.view.View$OnClickListener sBabyButtonListener -> k
    android.view.View$OnClickListener sKidsButtonListener -> l
    android.view.View$OnClickListener sAdultsButtonListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.view.animation.Animation access$0(com.w3i.torch.activities.DifficultyMenuActivity) -> a
    android.view.animation.Animation access$1(com.w3i.torch.activities.DifficultyMenuActivity) -> b
    android.view.View access$2(com.w3i.torch.activities.DifficultyMenuActivity) -> c
    android.view.View access$3(com.w3i.torch.activities.DifficultyMenuActivity) -> d
    android.view.animation.Animation access$4(com.w3i.torch.activities.DifficultyMenuActivity) -> e
    android.view.View access$5(com.w3i.torch.activities.DifficultyMenuActivity) -> f
    android.view.View access$6(com.w3i.torch.activities.DifficultyMenuActivity) -> g
    android.view.View access$7(com.w3i.torch.activities.DifficultyMenuActivity) -> h
    android.view.View access$8(com.w3i.torch.activities.DifficultyMenuActivity) -> i
    android.view.View access$9(com.w3i.torch.activities.DifficultyMenuActivity) -> j
com.w3i.torch.activities.DifficultyMenuActivity$1 -> com.w3i.torch.activities.d:
    com.w3i.torch.activities.DifficultyMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.DifficultyMenuActivity$2 -> com.w3i.torch.activities.e:
    com.w3i.torch.activities.DifficultyMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.DifficultyMenuActivity$3 -> com.w3i.torch.activities.f:
    com.w3i.torch.activities.DifficultyMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.DifficultyMenuActivity$StartActivityAfterAnimation -> com.w3i.torch.activities.g:
    android.content.Intent mIntent -> b
    com.w3i.torch.activities.DifficultyMenuActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.w3i.torch.activities.ExtrasMenuActivity -> com.w3i.torch.activities.ExtrasMenuActivity:
    android.view.View mLinearModeButton -> a
    android.view.View mLevelSelectButton -> b
    android.view.View mControlsButton -> c
    android.view.View mBackground -> d
    android.view.View mLevelSelectLocked -> e
    android.view.View mLinearModeLocked -> f
    android.view.animation.Animation mButtonFlickerAnimation -> g
    android.view.animation.Animation mFadeOutAnimation -> h
    android.view.animation.Animation mAlternateFadeOutAnimation -> i
    android.view.animation.Animation mLockedAnimation -> j
    int mPendingGameStart -> k
    android.view.View$OnClickListener sLinearModeButtonListener -> l
    android.view.View$OnClickListener sLevelSelectButtonListener -> m
    android.view.View$OnClickListener sLockedSelectButtonListener -> n
    android.view.View$OnClickListener sControlsButtonListener -> o
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void startGame(int) -> a
    void access$0(com.w3i.torch.activities.ExtrasMenuActivity,int) -> a
    android.view.animation.Animation access$1(com.w3i.torch.activities.ExtrasMenuActivity) -> a
    android.view.animation.Animation access$2(com.w3i.torch.activities.ExtrasMenuActivity) -> b
    android.view.View access$3(com.w3i.torch.activities.ExtrasMenuActivity) -> c
    android.view.View access$4(com.w3i.torch.activities.ExtrasMenuActivity) -> d
    android.view.animation.Animation access$5(com.w3i.torch.activities.ExtrasMenuActivity) -> e
    android.view.View access$6(com.w3i.torch.activities.ExtrasMenuActivity) -> f
    android.view.View access$7(com.w3i.torch.activities.ExtrasMenuActivity) -> g
    int access$8(com.w3i.torch.activities.ExtrasMenuActivity) -> h
com.w3i.torch.activities.ExtrasMenuActivity$1 -> com.w3i.torch.activities.h:
    com.w3i.torch.activities.ExtrasMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.ExtrasMenuActivity$2 -> com.w3i.torch.activities.i:
    com.w3i.torch.activities.ExtrasMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.ExtrasMenuActivity$3 -> com.w3i.torch.activities.j:
    com.w3i.torch.activities.ExtrasMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.ExtrasMenuActivity$4 -> com.w3i.torch.activities.k:
    com.w3i.torch.activities.ExtrasMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.ExtrasMenuActivity$5 -> com.w3i.torch.activities.l:
    com.w3i.torch.activities.ExtrasMenuActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.torch.activities.ExtrasMenuActivity$StartActivityAfterAnimation -> com.w3i.torch.activities.m:
    android.content.Intent mIntent -> b
    com.w3i.torch.activities.ExtrasMenuActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.w3i.torch.activities.GameOverActivity -> com.w3i.torch.activities.GameOverActivity:
    float mPearlPercent -> a
    float mEnemiesDestroyedPercent -> b
    float mPlayTime -> c
    int mEnding -> d
    com.w3i.torch.activities.GameOverActivity$IncrementingTextView mPearlView -> e
    com.w3i.torch.activities.GameOverActivity$IncrementingTextView mEnemiesDestroyedView -> f
    com.w3i.torch.activities.GameOverActivity$IncrementingTextView mPlayTimeView -> g
    android.widget.TextView mEndingView -> h
    android.view.View$OnClickListener sOKClickListener -> i
    void onCreate(android.os.Bundle) -> onCreate
com.w3i.torch.activities.GameOverActivity$1 -> com.w3i.torch.activities.n:
    com.w3i.torch.activities.GameOverActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.GameOverActivity$IncrementingTextView -> com.w3i.torch.activities.GameOverActivity$IncrementingTextView:
    float mTargetValue -> a
    float mIncrement -> b
    float mCurrentValue -> c
    long mLastTime -> d
    int mMode -> e
    void setTargetValue(float) -> a
    void setMode(int) -> a
    void setIncrement$133aeb() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.w3i.torch.activities.LevelSelectActivity -> com.w3i.torch.activities.LevelSelectActivity:
    com.w3i.torch.activities.LevelSelectActivity$LevelDataComparator sLevelComparator -> a
    java.util.ArrayList mLevelData -> b
    android.view.animation.Animation mButtonFlickerAnimation -> c
    boolean mLevelSelected -> d
    void onCreate(android.os.Bundle) -> onCreate
    void generateLevelList(boolean) -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    java.util.ArrayList access$0(com.w3i.torch.activities.LevelSelectActivity) -> a
com.w3i.torch.activities.LevelSelectActivity$DisableItemArrayAdapter -> com.w3i.torch.activities.o:
    int mRowResource -> b
    int mDisabledRowResource -> c
    int mCompletedRowResource -> d
    android.content.Context mContext -> e
    int mTextViewResource -> f
    int mTextViewResource2 -> g
    com.w3i.torch.activities.LevelSelectActivity this$0 -> a
    boolean isEnabled(int) -> isEnabled
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.w3i.torch.activities.LevelSelectActivity$EndActivityAfterAnimation -> com.w3i.torch.activities.p:
    android.content.Intent mIntent -> b
    com.w3i.torch.activities.LevelSelectActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.w3i.torch.activities.LevelSelectActivity$LevelDataComparator -> com.w3i.torch.activities.q:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.w3i.torch.activities.LevelSelectActivity$LevelMetaData -> com.w3i.torch.activities.r:
    com.w3i.torch.LevelTree$Level level -> a
    int x -> b
    int y -> c
    boolean enabled -> d
    com.w3i.torch.activities.LevelSelectActivity this$0 -> e
    java.lang.String toString() -> toString
com.w3i.torch.activities.MainMenuActivity -> com.w3i.torch.activities.MainMenuActivity:
    boolean mPaused -> a
    android.view.View mStartButton -> b
    android.view.View mOptionsButton -> c
    android.view.View mExtrasButton -> d
    android.view.View mBackground -> e
    android.widget.TextView mTotalCoins -> f
    android.view.View mTicker -> g
    android.view.animation.Animation mButtonFlickerAnimation -> h
    android.view.animation.Animation mFadeOutAnimation -> i
    android.view.animation.Animation mAlternateFadeOutAnimation -> j
    android.view.animation.Animation mFadeInAnimation -> k
    boolean mJustCreated -> l
    java.lang.String mSelectedControlsString -> m
    com.w3i.offerwall.ApplicationInputs inputs -> n
    android.view.View$OnClickListener sContinueButtonListener -> o
    android.view.View$OnClickListener sCoinsClicked -> p
    android.view.View$OnClickListener sOptionButtonListener -> q
    android.view.View$OnClickListener sExtrasButtonListener -> r
    android.view.View$OnClickListener sStartButtonListener -> s
    com.w3i.offerwall.W3iCurrencyListener w3iCurrencyRedemptionCallback -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onActionComplete(java.lang.Boolean) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    boolean access$0(com.w3i.torch.activities.MainMenuActivity) -> a
    android.view.animation.Animation access$1(com.w3i.torch.activities.MainMenuActivity) -> b
    android.view.animation.Animation access$2(com.w3i.torch.activities.MainMenuActivity) -> c
    android.view.View access$3(com.w3i.torch.activities.MainMenuActivity) -> d
    android.view.View access$4(com.w3i.torch.activities.MainMenuActivity) -> e
    android.view.animation.Animation access$5(com.w3i.torch.activities.MainMenuActivity) -> f
    android.view.View access$6(com.w3i.torch.activities.MainMenuActivity) -> g
    android.view.View access$7(com.w3i.torch.activities.MainMenuActivity) -> h
    void access$8$1b381128(com.w3i.torch.activities.MainMenuActivity) -> i
    com.w3i.offerwall.ApplicationInputs access$9(com.w3i.torch.activities.MainMenuActivity) -> j
    android.view.View access$10(com.w3i.torch.activities.MainMenuActivity) -> k
    android.widget.TextView access$11(com.w3i.torch.activities.MainMenuActivity) -> l
com.w3i.torch.activities.MainMenuActivity$1 -> com.w3i.torch.activities.s:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.MainMenuActivity$2 -> com.w3i.torch.activities.t:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.MainMenuActivity$3 -> com.w3i.torch.activities.u:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.MainMenuActivity$4 -> com.w3i.torch.activities.v:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.MainMenuActivity$5 -> com.w3i.torch.activities.w:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.w3i.torch.activities.MainMenuActivity$6 -> com.w3i.torch.activities.x:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onRedeem(java.util.List) -> a
com.w3i.torch.activities.MainMenuActivity$7 -> com.w3i.torch.activities.y:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.torch.activities.MainMenuActivity$8 -> com.w3i.torch.activities.z:
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.w3i.torch.activities.MainMenuActivity$StartActivityAfterAnimation -> com.w3i.torch.activities.aa:
    android.content.Intent mIntent -> b
    com.w3i.torch.activities.MainMenuActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.w3i.torch.activities.SetPreferencesActivity -> com.w3i.torch.activities.SetPreferencesActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onDialogClosed(boolean) -> a
org.OpenUDID.OpenUDID_service -> org.OpenUDID.OpenUDID_service:
    android.os.IBinder onBind(android.content.Intent) -> onBind
org.OpenUDID.OpenUDID_service$1 -> org.OpenUDID.a:
    org.OpenUDID.OpenUDID_service this$0 -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
